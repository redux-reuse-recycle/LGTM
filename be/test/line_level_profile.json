{
    ".\\bs_util.py": {
        "file_total_time": 3.0159354209899902,
        "file_total_time_percent": 99.55033053330362,
        "1": {
            "hits": 2,
            "time": 0.0,
            "time_per_hit": 0.0,
            "percent": 0.0,
            "line": "import time"
        },
        "2": {
            "hits": 1,
            "time": 0.0,
            "time_per_hit": 0.0,
            "percent": 0.0,
            "line": "import json"
        },
        "3": {
            "hits": 0,
            "time": 0,
            "time_per_hit": 0,
            "percent": 0.0,
            "line": ""
        },
        "4": {
            "hits": 0,
            "time": 0,
            "time_per_hit": 0,
            "percent": 0.0,
            "line": ""
        },
        "5": {
            "hits": 3,
            "time": 0.0,
            "time_per_hit": 0.0,
            "percent": 0.0,
            "line": "def make_http_request(url):"
        },
        "6": {
            "hits": 2,
            "time": 3.015432119369507,
            "time_per_hit": 1.5077160596847534,
            "percent": 99.53371749765029,
            "line": "    time.sleep(1.5)"
        },
        "7": {
            "hits": 2,
            "time": 0.0,
            "time_per_hit": 0.0,
            "percent": 0.0,
            "line": "    with open(\"tweets.json\", 'r') as f:"
        },
        "8": {
            "hits": 2,
            "time": 0.0,
            "time_per_hit": 0.0,
            "percent": 0.0,
            "line": "        return json.load(f)"
        },
        "9": {
            "hits": 0,
            "time": 0,
            "time_per_hit": 0,
            "percent": 0.0,
            "line": ""
        },
        "10": {
            "hits": 0,
            "time": 0,
            "time_per_hit": 0,
            "percent": 0.0,
            "line": ""
        },
        "11": {
            "hits": 1,
            "time": 0.0,
            "time_per_hit": 0.0,
            "percent": 0.0,
            "line": "def scrape_page(src_url, web_context, fn):"
        },
        "12": {
            "hits": 0,
            "time": 0,
            "time_per_hit": 0,
            "percent": 0.0,
            "line": "    links = []"
        },
        "13": {
            "hits": 0,
            "time": 0,
            "time_per_hit": 0,
            "percent": 0.0,
            "line": "    last_url = \"\""
        },
        "14": {
            "hits": 0,
            "time": 0,
            "time_per_hit": 0,
            "percent": 0.0,
            "line": "    for i in range(len(src_url)):"
        },
        "15": {
            "hits": 0,
            "time": 0,
            "time_per_hit": 0,
            "percent": 0.0,
            "line": "        if src_url[i] != last_url:"
        },
        "16": {
            "hits": 0,
            "time": 0,
            "time_per_hit": 0,
            "percent": 0.0,
            "line": "            last_url = src_url[i]"
        },
        "17": {
            "hits": 0,
            "time": 0,
            "time_per_hit": 0,
            "percent": 0.0,
            "line": "            print(\">>> Scraping {0}\".format(src_url[i]))"
        },
        "18": {
            "hits": 0,
            "time": 0,
            "time_per_hit": 0,
            "percent": 0.0,
            "line": "            try:"
        },
        "19": {
            "hits": 0,
            "time": 0,
            "time_per_hit": 0,
            "percent": 0.0,
            "line": "                page = src_url[i]"
        },
        "20": {
            "hits": 0,
            "time": 0,
            "time_per_hit": 0,
            "percent": 0.0,
            "line": "            except Exception:"
        },
        "21": {
            "hits": 0,
            "time": 0,
            "time_per_hit": 0,
            "percent": 0.0,
            "line": "                last_url = \"ERROR\""
        },
        "22": {
            "hits": 0,
            "time": 0,
            "time_per_hit": 0,
            "percent": 0.0,
            "line": "                import traceback"
        },
        "23": {
            "hits": 0,
            "time": 0,
            "time_per_hit": 0,
            "percent": 0.0,
            "line": "                print(\">>> Error scraping {0}:\".format(src_url[i]))"
        },
        "24": {
            "hits": 0,
            "time": 0,
            "time_per_hit": 0,
            "percent": 0.0,
            "line": "                print(traceback.format_exc())"
        },
        "25": {
            "hits": 0,
            "time": 0,
            "time_per_hit": 0,
            "percent": 0.0,
            "line": "                continue"
        },
        "26": {
            "hits": 0,
            "time": 0,
            "time_per_hit": 0,
            "percent": 0.0,
            "line": "        hits = page.text.find_all(web_context)"
        },
        "27": {
            "hits": 0,
            "time": 0,
            "time_per_hit": 0,
            "percent": 0.0,
            "line": "        if not hits:"
        },
        "28": {
            "hits": 0,
            "time": 0,
            "time_per_hit": 0,
            "percent": 0.0,
            "line": "            print(\">>> No results found!\")"
        },
        "29": {
            "hits": 0,
            "time": 0,
            "time_per_hit": 0,
            "percent": 0.0,
            "line": "            continue"
        },
        "30": {
            "hits": 0,
            "time": 0,
            "time_per_hit": 0,
            "percent": 0.0,
            "line": "        else:"
        },
        "31": {
            "hits": 0,
            "time": 0,
            "time_per_hit": 0,
            "percent": 0.0,
            "line": "            errors = 0"
        },
        "32": {
            "hits": 0,
            "time": 0,
            "time_per_hit": 0,
            "percent": 0.0,
            "line": "            for hit in hits:"
        },
        "33": {
            "hits": 0,
            "time": 0,
            "time_per_hit": 0,
            "percent": 0.0,
            "line": "                try:"
        },
        "34": {
            "hits": 0,
            "time": 0,
            "time_per_hit": 0,
            "percent": 0.0,
            "line": "                    result = fn(hit)"
        },
        "35": {
            "hits": 0,
            "time": 0,
            "time_per_hit": 0,
            "percent": 0.0,
            "line": "                except (UnicodeEncodeError, UnicodeDecodeError):"
        },
        "36": {
            "hits": 0,
            "time": 0,
            "time_per_hit": 0,
            "percent": 0.0,
            "line": "                    errors += 1"
        },
        "37": {
            "hits": 0,
            "time": 0,
            "time_per_hit": 0,
            "percent": 0.0,
            "line": "                    continue"
        },
        "38": {
            "hits": 0,
            "time": 0,
            "time_per_hit": 0,
            "percent": 0.0,
            "line": "                if result:"
        },
        "39": {
            "hits": 0,
            "time": 0,
            "time_per_hit": 0,
            "percent": 0.0,
            "line": "                    links.append(result)"
        },
        "40": {
            "hits": 0,
            "time": 0,
            "time_per_hit": 0,
            "percent": 0.0,
            "line": "            if errors > 0:"
        },
        "41": {
            "hits": 0,
            "time": 0,
            "time_per_hit": 0,
            "percent": 0.0,
            "line": "                print(\">>> We had trouble reading {} result{}.\".format(errors, \"s\" if errors > 1 else \"\"))"
        },
        "42": {
            "hits": 0,
            "time": 0,
            "time_per_hit": 0,
            "percent": 0.0,
            "line": "    return (links)"
        },
        "43": {
            "hits": 0,
            "time": 0,
            "time_per_hit": 0,
            "percent": 0.0,
            "line": ""
        },
        "44": {
            "hits": 0,
            "time": 0,
            "time_per_hit": 0,
            "percent": 0.0,
            "line": ""
        },
        "45": {
            "hits": 2,
            "time": 0.0,
            "time_per_hit": 0.0,
            "percent": 0.0,
            "line": "def push_to_DB(data):"
        },
        "46": {
            "hits": 0,
            "time": 0,
            "time_per_hit": 0,
            "percent": 0.0,
            "line": "    # stub"
        },
        "47": {
            "hits": 1,
            "time": 0.0,
            "time_per_hit": 0.0,
            "percent": 0.0,
            "line": "    return"
        },
        "48": {
            "hits": 0,
            "time": 0,
            "time_per_hit": 0,
            "percent": 0.0,
            "line": ""
        },
        "49": {
            "hits": 0,
            "time": 0,
            "time_per_hit": 0,
            "percent": 0.0,
            "line": ""
        },
        "50": {
            "hits": 2,
            "time": 0.0,
            "time_per_hit": 0.0,
            "percent": 0.0,
            "line": "def sort(list):"
        },
        "51": {
            "hits": 1,
            "time": 0.0,
            "time_per_hit": 0.0,
            "percent": 0.0,
            "line": "    c = []"
        },
        "52": {
            "hits": 21,
            "time": 0.0,
            "time_per_hit": 0.0,
            "percent": 0.0,
            "line": "    for a in make_http_request(\"https://twitter.com/ArtificalW\"):"
        },
        "53": {
            "hits": 20,
            "time": 0.0,
            "time_per_hit": 0.0,
            "percent": 0.0,
            "line": "        b = False"
        },
        "54": {
            "hits": 20,
            "time": 0.0005033016204833984,
            "time_per_hit": 2.516508102416992e-05,
            "percent": 0.016613035653337334,
            "line": "        for b in c:"
        },
        "55": {
            "hits": 0,
            "time": 0,
            "time_per_hit": 0,
            "percent": 0.0,
            "line": "            if a[\"id\"] > b[\"id\"] and not b:"
        },
        "56": {
            "hits": 0,
            "time": 0,
            "time_per_hit": 0,
            "percent": 0.0,
            "line": "                c.insert(c.index(b), a)"
        },
        "57": {
            "hits": 0,
            "time": 0,
            "time_per_hit": 0,
            "percent": 0.0,
            "line": "                b = True"
        },
        "58": {
            "hits": 1,
            "time": 0.0,
            "time_per_hit": 0.0,
            "percent": 0.0,
            "line": "    return c"
        },
        "59": {
            "hits": 0,
            "time": 0,
            "time_per_hit": 0,
            "percent": 0.0,
            "line": ""
        },
        "60": {
            "hits": 0,
            "time": 0,
            "time_per_hit": 0,
            "percent": 0.0,
            "line": ""
        },
        "61": {
            "hits": 1,
            "time": 0.0,
            "time_per_hit": 0.0,
            "percent": 0.0,
            "line": "def find(list, id):"
        },
        "62": {
            "hits": 0,
            "time": 0,
            "time_per_hit": 0,
            "percent": 0.0,
            "line": "    result = False"
        },
        "63": {
            "hits": 0,
            "time": 0,
            "time_per_hit": 0,
            "percent": 0.0,
            "line": "    for tweet in list:"
        },
        "64": {
            "hits": 0,
            "time": 0,
            "time_per_hit": 0,
            "percent": 0.0,
            "line": "        if tweet[\"name\"] == id:"
        },
        "65": {
            "hits": 0,
            "time": 0,
            "time_per_hit": 0,
            "percent": 0.0,
            "line": "            result = tweet"
        },
        "66": {
            "hits": 0,
            "time": 0,
            "time_per_hit": 0,
            "percent": 0.0,
            "line": "    return result"
        }
    },
    "./bs_main.py": {
        "file_total_time": 0.0,
        "file_total_time_percent": 0.0,
        "1": {
            "hits": 2,
            "time": 0.0,
            "time_per_hit": 0.0,
            "percent": 0.0,
            "line": "import bs_util"
        },
        "2": {
            "hits": 0,
            "time": 0,
            "time_per_hit": 0,
            "percent": 0.0,
            "line": ""
        },
        "3": {
            "hits": 0,
            "time": 0,
            "time_per_hit": 0,
            "percent": 0.0,
            "line": ""
        },
        "4": {
            "hits": 0,
            "time": 0,
            "time_per_hit": 0,
            "percent": 0.0,
            "line": "# You're working on a group project, and you just wrote the main function using the code your teammate wrote (in utils)."
        },
        "5": {
            "hits": 0,
            "time": 0,
            "time_per_hit": 0,
            "percent": 0.0,
            "line": "# Your teammate's test all pass, but your main function runs slower than you'd expect. What is/are the culprit(s)?"
        },
        "6": {
            "hits": 2,
            "time": 0.0,
            "time_per_hit": 0.0,
            "percent": 0.0,
            "line": "def run():"
        },
        "7": {
            "hits": 1,
            "time": 0.0,
            "time_per_hit": 0.0,
            "percent": 0.0,
            "line": "    data = bs_util.make_http_request(\"https://twitter.com/ArtificalW\")"
        },
        "8": {
            "hits": 0,
            "time": 0,
            "time_per_hit": 0,
            "percent": 0.0,
            "line": "    # Sorted data is faster to search"
        },
        "9": {
            "hits": 1,
            "time": 0.0,
            "time_per_hit": 0.0,
            "percent": 0.0,
            "line": "    data = bs_util.sort(data)"
        },
        "10": {
            "hits": 1,
            "time": 0.0,
            "time_per_hit": 0.0,
            "percent": 0.0,
            "line": "    map = {}"
        },
        "11": {
            "hits": 1,
            "time": 0.0,
            "time_per_hit": 0.0,
            "percent": 0.0,
            "line": "    for tweet in data:"
        },
        "12": {
            "hits": 0,
            "time": 0,
            "time_per_hit": 0,
            "percent": 0.0,
            "line": "        # find tweet by friend"
        },
        "13": {
            "hits": 0,
            "time": 0,
            "time_per_hit": 0,
            "percent": 0.0,
            "line": "        if tweet['user']['name'] in map.keys():"
        },
        "14": {
            "hits": 0,
            "time": 0,
            "time_per_hit": 0,
            "percent": 0.0,
            "line": "            map.get(tweet['user']['name']).append(bs_util.find(data, tweet['user'][\"friends\"]['name']))"
        },
        "15": {
            "hits": 0,
            "time": 0,
            "time_per_hit": 0,
            "percent": 0.0,
            "line": "        else:"
        },
        "16": {
            "hits": 0,
            "time": 0,
            "time_per_hit": 0,
            "percent": 0.0,
            "line": "            map[tweet['user']['name']] = [tweet['user'][\"friends\"]['name']]"
        },
        "17": {
            "hits": 1,
            "time": 0.0,
            "time_per_hit": 0.0,
            "percent": 0.0,
            "line": "    bs_util.push_to_DB(map)"
        },
        "18": {
            "hits": 1,
            "time": 0.0,
            "time_per_hit": 0.0,
            "percent": 0.0,
            "line": "    return map"
        },
        "19": {
            "hits": 0,
            "time": 0,
            "time_per_hit": 0,
            "percent": 0.0,
            "line": ""
        },
        "20": {
            "hits": 1,
            "time": 0.0,
            "time_per_hit": 0.0,
            "percent": 0.0,
            "line": "if __name__ == \"__main__\":"
        },
        "21": {
            "hits": 1,
            "time": 0.0,
            "time_per_hit": 0.0,
            "percent": 0.0,
            "line": "    run()"
        },
        "22": {
            "hits": 0,
            "time": 0,
            "time_per_hit": 0,
            "percent": 0.0,
            "line": ""
        }
    }
}