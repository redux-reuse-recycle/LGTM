(this.webpackJsonplgtm=this.webpackJsonplgtm||[]).push([[0],{277:function(e,t,i){},278:function(e,t,i){},279:function(e,t,i){},280:function(e,t,i){},33:function(e){e.exports=JSON.parse('{"total_time":0.835319995880127,"translate/lang/data.py":{"1":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# -*- coding: utf-8 -*-"},"2":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#"},"3":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# Copyright 2007-2011 Zuza Software Foundation"},"4":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#"},"5":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# This file is part of translate."},"6":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#"},"7":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# translate is free software; you can redistribute it and/or modify"},"8":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# it under the terms of the GNU General Public License as published by"},"9":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# the Free Software Foundation; either version 2 of the License, or"},"10":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# (at your option) any later version."},"11":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#"},"12":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# translate is distributed in the hope that it will be useful,"},"13":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# but WITHOUT ANY WARRANTY; without even the implied warranty of"},"14":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the"},"15":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# GNU General Public License for more details."},"16":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#"},"17":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# You should have received a copy of the GNU General Public License"},"18":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# along with this program; if not, see <http://www.gnu.org/licenses/>."},"19":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"20":{"hits":2,"time":0.000050067901611328125,"time_per_hit":0.000025033950805664062,"percent":0.005993858863461607,"line":"\\"\\"\\"This module stores information and functionality that relates to plurals.\\"\\"\\""},"21":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"22":{"hits":1,"time":0.000038623809814453125,"time_per_hit":0.000038623809814453125,"percent":0.004623833980384668,"line":"from __future__ import unicode_literals"},"23":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"24":{"hits":1,"time":0.000019550323486328125,"time_per_hit":0.000019550323486328125,"percent":0.0023404591752564374,"line":"import gettext"},"25":{"hits":1,"time":0.000018358230590820312,"time_per_hit":0.000018358230590820312,"percent":0.002197748249935923,"line":"import locale"},"26":{"hits":1,"time":0.000014781951904296875,"time_per_hit":0.000014781951904296875,"percent":0.0017696154739743795,"line":"import os"},"27":{"hits":1,"time":0.00001430511474609375,"time_per_hit":0.00001430511474609375,"percent":0.0017125311038461736,"line":"import re"},"28":{"hits":1,"time":0.00001430511474609375,"time_per_hit":0.00001430511474609375,"percent":0.0017125311038461736,"line":"import six"},"29":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"30":{"hits":1,"time":0.00001430511474609375,"time_per_hit":0.00001430511474609375,"percent":0.0017125311038461736,"line":"try:"},"31":{"hits":1,"time":0.00004172325134277344,"time_per_hit":0.00004172325134277344,"percent":0.004994882386218006,"line":"    import pycountry"},"32":{"hits":1,"time":0.000017404556274414062,"time_per_hit":0.000017404556274414062,"percent":0.002083579509679511,"line":"except ImportError:"},"33":{"hits":1,"time":0.00001621246337890625,"time_per_hit":0.00001621246337890625,"percent":0.0019408685843589968,"line":"    pycountry = None"},"34":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"35":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"36":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"languages = {"},"37":{"hits":1,"time":0.00001430511474609375,"time_per_hit":0.00001430511474609375,"percent":0.0017125311038461736,"line":"    \'ach\': (\'Acholi\', 2, \'n > 1\'),"},"38":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'af\': (\'Afrikaans\', 2, \'(n != 1)\'),"},"39":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'ak\': (\'Akan\', 2, \'n > 1\'),"},"40":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"    \'am\': (\'Amharic\', 2, \'n > 1\'),"},"41":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'an\': (\'Aragonese\', 2, \'(n != 1)\'),"},"42":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'anp\': (\'Angika\', 2, \'(n != 1)\'),"},"43":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \'ar\': (\'Arabic\', 6,"},"44":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"           \'n==0 ? 0 : n==1 ? 1 : n==2 ? 2 : n%100>=3 && n%100<=10 ? 3 : n%100>=11 ? 4 : 5\'),"},"45":{"hits":1,"time":0.000015497207641601562,"time_per_hit":0.000015497207641601562,"percent":0.0018552420291666882,"line":"    \'arn\': (\'Mapudungun; Mapuche\', 2, \'n > 1\'),"},"46":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'as\': (\'Assamese\', 2, \'(n != 1)\'),"},"47":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"    \'ast\': (\'Asturian; Bable; Leonese; Asturleonese\', 2, \'(n != 1)\'),"},"48":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'ay\': (\'Aymar\xe1\', 1, \'0\'),"},"49":{"hits":1,"time":0.000017404556274414062,"time_per_hit":0.000017404556274414062,"percent":0.002083579509679511,"line":"    \'az\': (\'Azerbaijani\', 2, \'(n != 1)\'),"},"50":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \'be\': (\'Belarusian\', 3,"},"51":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"           \'n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2\'),"},"52":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'bg\': (\'Bulgarian\', 2, \'(n != 1)\'),"},"53":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"    \'bn\': (\'Bengali\', 2, \'(n != 1)\'),"},"54":{"hits":1,"time":0.00006008148193359375,"time_per_hit":0.00006008148193359375,"percent":0.007192630636153929,"line":"    \'bn_BD\': (\'Bengali (Bangladesh)\', 2, \'(n != 1)\'),"},"55":{"hits":1,"time":0.000014543533325195312,"time_per_hit":0.000014543533325195312,"percent":0.0017410732889102764,"line":"    \'bn_IN\': (\'Bengali (India)\', 2, \'(n != 1)\'),"},"56":{"hits":1,"time":0.000014066696166992188,"time_per_hit":0.000014066696166992188,"percent":0.0016839889187820708,"line":"    \'bo\': (\'Tibetan\', 1, \'0\'),"},"57":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'br\': (\'Breton\', 2, \'n > 1\'),"},"58":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'brx\': (\'Bodo\', 2, \'(n != 1)\'),"},"59":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \'bs\': (\'Bosnian\', 3,"},"60":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"           \'n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2\'),"},"61":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"    \'ca\': (\'Catalan; Valencian\', 2, \'(n != 1)\'),"},"62":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'ca@valencia\': (\'Catalan; Valencian (Valencia)\', 2, \'(n != 1)\'),"},"63":{"hits":1,"time":0.0000152587890625,"time_per_hit":0.0000152587890625,"percent":0.0018266998441025851,"line":"    \'cgg\': (\'Chiga\', 1, \'0\'),"},"64":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"    \'cs\': (\'Czech\', 3, \'(n==1) ? 0 : (n>=2 && n<=4) ? 1 : 2\'),"},"65":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \'csb\': (\'Kashubian\', 3,"},"66":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"            \'n==1 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2\'),"},"67":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'cy\': (\'Welsh\', 2, \'(n==2) ? 1 : 0\'),"},"68":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'da\': (\'Danish\', 2, \'(n != 1)\'),"},"69":{"hits":1,"time":0.000014781951904296875,"time_per_hit":0.000014781951904296875,"percent":0.0017696154739743795,"line":"    \'de\': (\'German\', 2, \'(n != 1)\'),"},"70":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'doi\': (\'Dogri\', 2, \'(n != 1)\'),"},"71":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'dz\': (\'Dzongkha\', 1, \'0\'),"},"72":{"hits":1,"time":0.000015020370483398438,"time_per_hit":0.000015020370483398438,"percent":0.0017981576590384823,"line":"    \'el\': (\'Greek, Modern (1453-)\', 2, \'(n != 1)\'),"},"73":{"hits":1,"time":0.00001430511474609375,"time_per_hit":0.00001430511474609375,"percent":0.0017125311038461736,"line":"    \'en\': (\'English\', 2, \'(n != 1)\'),"},"74":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'en_GB\': (\'English (United Kingdom)\', 2, \'(n != 1)\'),"},"75":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"    \'en_ZA\': (\'English (South Africa)\', 2, \'(n != 1)\'),"},"76":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'eo\': (\'Esperanto\', 2, \'(n != 1)\'),"},"77":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"    \'es\': (\'Spanish; Castilian\', 2, \'(n != 1)\'),"},"78":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'es_AR\': (\'Argentinean Spanish\', 2, \'(n != 1)\'),"},"79":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"    \'et\': (\'Estonian\', 2, \'(n != 1)\'),"},"80":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"    \'eu\': (\'Basque\', 2, \'(n != 1)\'),"},"81":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'fa\': (\'Persian\', 2, \'n > 1\'),"},"82":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'ff\': (\'Fulah\', 2, \'(n != 1)\'),"},"83":{"hits":1,"time":0.000013113021850585938,"time_per_hit":0.000013113021850585938,"percent":0.001569820178525659,"line":"    \'fi\': (\'Finnish\', 2, \'(n != 1)\'),"},"84":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'fil\': (\'Filipino; Pilipino\', 2, \'(n > 1)\'),"},"85":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'fo\': (\'Faroese\', 2, \'(n != 1)\'),"},"86":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'fr\': (\'French\', 2, \'(n > 1)\'),"},"87":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"    \'fur\': (\'Friulian\', 2, \'(n != 1)\'),"},"88":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'fy\': (\'Frisian\', 2, \'(n != 1)\'),"},"89":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'ga\': (\'Irish\', 5, \'n==1 ? 0 : n==2 ? 1 : (n>2 && n<7) ? 2 :(n>6 && n<11) ? 3 : 4\'),"},"90":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"    \'gd\': (\'Gaelic; Scottish Gaelic\', 4, \'(n==1 || n==11) ? 0 : (n==2 || n==12) ? 1 : (n > 2 && n < 20) ? 2 : 3\'),"},"91":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"    \'gl\': (\'Galician\', 2, \'(n != 1)\'),"},"92":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"    \'gu\': (\'Gujarati\', 2, \'(n != 1)\'),"},"93":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'gun\': (\'Gun\', 2, \'(n > 1)\'),"},"94":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'ha\': (\'Hausa\', 2, \'(n != 1)\'),"},"95":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"    \'he\': (\'Hebrew\', 2, \'(n != 1)\'),"},"96":{"hits":1,"time":0.000015020370483398438,"time_per_hit":0.000015020370483398438,"percent":0.0017981576590384823,"line":"    \'hi\': (\'Hindi\', 2, \'(n != 1)\'),"},"97":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'hne\': (\'Chhattisgarhi\', 2, \'(n != 1)\'),"},"98":{"hits":1,"time":0.0000152587890625,"time_per_hit":0.0000152587890625,"percent":0.0018266998441025851,"line":"    \'hr\': (\'Croatian\', 3, \'(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2)\'),"},"99":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"    \'ht\': (\'Haitian; Haitian Creole\', 2, \'(n != 1)\'),"},"100":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"    \'hu\': (\'Hungarian\', 2, \'(n != 1)\'),"},"101":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'hy\': (\'Armenian\', 1, \'0\'),"},"102":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"    \'ia\': (\\"Interlingua (International Auxiliary Language Association)\\", 2, \'(n != 1)\'),"},"103":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"    \'id\': (\'Indonesian\', 1, \'0\'),"},"104":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'is\': (\'Icelandic\', 2, \'(n != 1)\'),"},"105":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"    \'it\': (\'Italian\', 2, \'(n != 1)\'),"},"106":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"    \'ja\': (\'Japanese\', 1, \'0\'),"},"107":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'jbo\': (\'Lojban\', 1, \'0\'),"},"108":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"    \'jv\': (\'Javanese\', 2, \'(n != 1)\'),"},"109":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"    \'ka\': (\'Georgian\', 1, \'0\'),"},"110":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"    \'kab\': (\'Kabyle\', 2, \'(n != 1)\'),"},"111":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"    \'kk\': (\'Kazakh\', 2, \'n != 1\'),"},"112":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"    \'kl\': (\'Greenlandic\', 2, \'(n != 1)\'),"},"113":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"    \'km\': (\'Central Khmer\', 1, \'0\'),"},"114":{"hits":1,"time":0.000015497207641601562,"time_per_hit":0.000015497207641601562,"percent":0.0018552420291666882,"line":"    \'kn\': (\'Kannada\', 2, \'(n != 1)\'),"},"115":{"hits":1,"time":0.000015020370483398438,"time_per_hit":0.000015020370483398438,"percent":0.0017981576590384823,"line":"    \'ko\': (\'Korean\', 1, \'0\'),"},"116":{"hits":1,"time":0.000014543533325195312,"time_per_hit":0.000014543533325195312,"percent":0.0017410732889102764,"line":"    \'kok\': (\'Konkani\', 2, \'(n != 1)\'),"},"117":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"    \'ks\': (\'Kashmiri\', 2, \'(n != 1)\'),"},"118":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'ku\': (\'Kurdish\', 2, \'(n != 1)\'),"},"119":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"    \'kw\': (\'Cornish\', 4, \'(n==1) ? 0 : (n==2) ? 1 : (n == 3) ? 2 : 3\'),"},"120":{"hits":1,"time":0.0000152587890625,"time_per_hit":0.0000152587890625,"percent":0.0018266998441025851,"line":"    \'ky\': (\'Kirghiz; Kyrgyz\', 2, \'n != 1\'),"},"121":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"    \'lb\': (\'Luxembourgish; Letzeburgesch\', 2, \'(n != 1)\'),"},"122":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"    \'ln\': (\'Lingala\', 2, \'(n > 1)\'),"},"123":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'lo\': (\'Lao\', 1, \'0\'),"},"124":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'lt\': (\'Lithuanian\', 3, \'(n%10==1 && n%100!=11 ? 0 : n%10>=2 && (n%100<10 || n%100>=20) ? 1 : 2)\'),"},"125":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"    \'lv\': (\'Latvian\', 3, \'(n%10==1 && n%100!=11 ? 0 : n != 0 ? 1 : 2)\'),"},"126":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'mai\': (\'Maithili\', 2, \'(n != 1)\'),"},"127":{"hits":1,"time":0.00001621246337890625,"time_per_hit":0.00001621246337890625,"percent":0.0019408685843589968,"line":"    \'me\': (\'Montenegrin\', 3, \'n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2\'),"},"128":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"    \'mfe\': (\'Morisyen\', 2, \'(n > 1)\'),"},"129":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"    \'mg\': (\'Malagasy\', 2, \'(n > 1)\'),"},"130":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"    \'mi\': (\'Maori\', 2, \'(n > 1)\'),"},"131":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'mk\': (\'Macedonian\', 2, \'(n==1 || n%10==1 ? 0 : 1)\'),"},"132":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"    \'ml\': (\'Malayalam\', 2, \'(n != 1)\'),"},"133":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"    \'mn\': (\'Mongolian\', 2, \'(n != 1)\'),"},"134":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'mni\': (\'Meithei (Manipuri)\', 2, \'(n != 1)\'),"},"135":{"hits":1,"time":0.000013113021850585938,"time_per_hit":0.000013113021850585938,"percent":0.001569820178525659,"line":"    \'mnk\': (\'Mandinka\', 3, \'(n==0 ? 0 : n==1 ? 1 : 2)\'),"},"136":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'mr\': (\'Marathi\', 2, \'(n != 1)\'),"},"137":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"    \'ms\': (\'Malay\', 1, \'0\'),"},"138":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \'mt\': (\'Maltese\', 4,"},"139":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"           \'(n==1 ? 0 : n==0 || ( n%100>1 && n%100<11) ? 1 : (n%100>10 && n%100<20 ) ? 2 : 3)\'),"},"140":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'my\': (\'Burmese\', 1, \'0\'),"},"141":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"    \'nah\': (\'Nahuatl languages\', 2, \'(n != 1)\'),"},"142":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'nap\': (\'Neapolitan\', 2, \'(n != 1)\'),"},"143":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'nb\': (\'Bokm\xe5l, Norwegian; Norwegian Bokm\xe5l\', 2, \'(n != 1)\'),"},"144":{"hits":1,"time":0.000013113021850585938,"time_per_hit":0.000013113021850585938,"percent":0.001569820178525659,"line":"    \'ne\': (\'Nepali\', 2, \'(n != 1)\'),"},"145":{"hits":1,"time":0.0000152587890625,"time_per_hit":0.0000152587890625,"percent":0.0018266998441025851,"line":"    \'nl\': (\'Dutch; Flemish\', 2, \'(n != 1)\'),"},"146":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'nn\': (\'Norwegian Nynorsk; Nynorsk, Norwegian\', 2, \'(n != 1)\'),"},"147":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'nqo\': (\\"N\'Ko\\", 2, \'(n > 1)\'),"},"148":{"hits":1,"time":0.000013113021850585938,"time_per_hit":0.000013113021850585938,"percent":0.001569820178525659,"line":"    \'nso\': (\'Pedi; Sepedi; Northern Sotho\', 2, \'(n != 1)\'),"},"149":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'oc\': (\'Occitan (post 1500)\', 2, \'(n > 1)\'),"},"150":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"    \'or\': (\'Odia\', 2, \'(n != 1)\'),"},"151":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'pa\': (\'Panjabi; Punjabi\', 2, \'(n != 1)\'),"},"152":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"    \'pap\': (\'Papiamento\', 2, \'(n != 1)\'),"},"153":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \'pl\': (\'Polish\', 3,"},"154":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"           \'(n==1 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2)\'),"},"155":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"    \'pms\': (\'Piemontese\', 2, \'(n != 1)\'),"},"156":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'ps\': (\'Pushto; Pashto\', 2, \'(n != 1)\'),"},"157":{"hits":1,"time":0.000013113021850585938,"time_per_hit":0.000013113021850585938,"percent":0.001569820178525659,"line":"    \'pt\': (\'Portuguese\', 2, \'(n != 1)\'),"},"158":{"hits":1,"time":0.000015020370483398438,"time_per_hit":0.000015020370483398438,"percent":0.0017981576590384823,"line":"    \'pt_BR\': (\'Portuguese (Brazil)\', 2, \'(n > 1)\'),"},"159":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'rm\': (\'Romansh\', 2, \'(n != 1)\'),"},"160":{"hits":1,"time":0.000013113021850585938,"time_per_hit":0.000013113021850585938,"percent":0.001569820178525659,"line":"    \'ro\': (\'Romanian\', 3, \'(n==1 ? 0 : (n==0 || (n%100 > 0 && n%100 < 20)) ? 1 : 2)\'),"},"161":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \'ru\': (\'Russian\', 3,"},"162":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"           \'(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2)\'),"},"163":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'rw\': (\'Kinyarwanda\', 2, \'(n != 1)\'),"},"164":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'sa\': (\'Sanskrit\', 3, \'(n==1 ? 0 : n==2 ? 1 : 2)\'),"},"165":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"    \'sah\': (\'Yakut\', 1, \'0\'),"},"166":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'sat\': (\'Santali\', 2, \'(n != 1)\'),"},"167":{"hits":1,"time":0.000014781951904296875,"time_per_hit":0.000014781951904296875,"percent":0.0017696154739743795,"line":"    \'sco\': (\'Scots\', 2, \'(n != 1)\'),"},"168":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'scn\': (\'Sicilian\', 2, \'(n != 1)\'),"},"169":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'sd\': (\'Sindhi\', 2, \'(n != 1)\'),"},"170":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'se\': (\'Northern Sami\', 2, \'(n != 1)\'),"},"171":{"hits":1,"time":0.000014781951904296875,"time_per_hit":0.000014781951904296875,"percent":0.0017696154739743795,"line":"    \'si\': (\'Sinhala; Sinhalese\', 2, \'(n != 1)\'),"},"172":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'sk\': (\'Slovak\', 3, \'(n==1) ? 0 : (n>=2 && n<=4) ? 1 : 2\'),"},"173":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"    \'sl\': (\'Slovenian\', 4, \'(n%100==1 ? 0 : n%100==2 ? 1 : n%100==3 || n%100==4 ? 2 : 3)\'),"},"174":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'so\': (\'Somali\', 2, \'(n != 1)\'),"},"175":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"    \'son\': (\'Songhai languages\', 1, \'0\'),"},"176":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'sq\': (\'Albanian\', 2, \'(n != 1)\'),"},"177":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \'sr\': (\'Serbian\', 3,"},"178":{"hits":1,"time":0.000013113021850585938,"time_per_hit":0.000013113021850585938,"percent":0.001569820178525659,"line":"           \'(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2)\'),"},"179":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"    \'st\': (\'Sotho, Southern\', 2, \'(n != 1)\'),"},"180":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"    \'su\': (\'Sundanese\', 1, \'0\'),"},"181":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"    \'sv\': (\'Swedish\', 2, \'(n != 1)\'),"},"182":{"hits":1,"time":0.000015020370483398438,"time_per_hit":0.000015020370483398438,"percent":0.0017981576590384823,"line":"    \'sw\': (\'Swahili\', 2, \'(n != 1)\'),"},"183":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \'szl\': (\'Silesian\', 3,"},"184":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"            \'(n==1 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2)\'),"},"185":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"    \'ta\': (\'Tamil\', 2, \'(n != 1)\'),"},"186":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'te\': (\'Telugu\', 2, \'(n != 1)\'),"},"187":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'tg\': (\'Tajik\', 1, \'0\'),"},"188":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"    \'th\': (\'Thai\', 1, \'0\'),"},"189":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'ti\': (\'Tigrinya\', 2, \'(n > 1)\'),"},"190":{"hits":1,"time":0.000014781951904296875,"time_per_hit":0.000014781951904296875,"percent":0.0017696154739743795,"line":"    \'tk\': (\'Turkmen\', 2, \'(n != 1)\'),"},"191":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'tr\': (\'Turkish\', 2, \'(n != 1)\'),"},"192":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"    \'tt\': (\'Tatar\', 1, \'0\'),"},"193":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'ug\': (\'Uighur; Uyghur\', 1, \'0\'),"},"194":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \'uk\': (\'Ukrainian\', 3,"},"195":{"hits":1,"time":0.000013113021850585938,"time_per_hit":0.000013113021850585938,"percent":0.001569820178525659,"line":"           \'(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2)\'),"},"196":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'ur\': (\'Urdu\', 2, \'(n != 1)\'),"},"197":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'uz\': (\'Uzbek\', 2, \'(n > 1)\'),"},"198":{"hits":1,"time":0.0000152587890625,"time_per_hit":0.0000152587890625,"percent":0.0018266998441025851,"line":"    \'ve\': (\'Venda\', 2, \'(n != 1)\'),"},"199":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'vi\': (\'Vietnamese\', 1, \'0\'),"},"200":{"hits":1,"time":0.000013113021850585938,"time_per_hit":0.000013113021850585938,"percent":0.001569820178525659,"line":"    \'wa\': (\'Walloon\', 2, \'(n > 1)\'),"},"201":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"    \'wo\': (\'Wolof\', 2, \'(n != 1)\'),"},"202":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'yo\': (\'Yoruba\', 2, \'(n != 1)\'),"},"203":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"    \'yue\': (\'Yue\', 1, \'0\'),"},"204":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    # Chinese is difficult because the main divide is on script, not really"},"205":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    # country. Simplified Chinese is used mostly in China, Singapore and Malaysia."},"206":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    # Traditional Chinese is used mostly in Hong Kong, Taiwan and Macau."},"207":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'zh_CN\': (\'Chinese (China)\', 1, \'0\'),"},"208":{"hits":1,"time":0.000015020370483398438,"time_per_hit":0.000015020370483398438,"percent":0.0017981576590384823,"line":"    \'zh_HK\': (\'Chinese (Hong Kong)\', 1, \'0\'),"},"209":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'zh_TW\': (\'Chinese (Taiwan)\', 1, \'0\'),"},"210":{"hits":1,"time":0.000019550323486328125,"time_per_hit":0.000019550323486328125,"percent":0.0023404591752564374,"line":"    \'zu\': (\'Zulu\', 2, \'(n != 1)\'),"},"211":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"}"},"212":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"\\"\\"\\"Dictionary of language data."},"213":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"The language code is the dictionary key (which may contain country codes"},"214":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"and modifiers).  The value is a tuple: (Full name in English from iso-codes,"},"215":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"nplurals, plural equation)."},"216":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"217":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"Note that the English names should not be used in user facing places - it"},"218":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"should always be passed through the function returned from tr_lang(), or at"},"219":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"least passed through _fix_language_name().\\"\\"\\""},"220":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"221":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"_fixed_names = {"},"222":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \\"Asturian; Bable; Leonese; Asturleonese\\": \\"Asturian\\","},"223":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \\"Bokm\xe5l, Norwegian; Norwegian Bokm\xe5l\\": \\"Norwegian Bokm\xe5l\\","},"224":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \\"Catalan; Valencian\\": \\"Catalan\\","},"225":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \\"Central Khmer\\": \\"Khmer\\","},"226":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"    \\"Chichewa; Chewa; Nyanja\\": \\"Chewa; Nyanja\\","},"227":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \\"Divehi; Dhivehi; Maldivian\\": \\"Divehi\\","},"228":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \\"Dutch; Flemish\\": \\"Dutch\\","},"229":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \\"Filipino; Pilipino\\": \\"Filipino\\","},"230":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \\"Gaelic; Scottish Gaelic\\": \\"Scottish Gaelic\\","},"231":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \\"Greek, Modern (1453-)\\": \\"Greek\\","},"232":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \\"Interlingua (International Auxiliary Language Association)\\": \\"Interlingua\\","},"233":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \\"Kirghiz; Kyrgyz\\": \\"Kirghiz\\","},"234":{"hits":1,"time":0.000016689300537109375,"time_per_hit":0.000016689300537109375,"percent":0.0019979529544872027,"line":"    \\"Klingon; tlhIngan-Hol\\": \\"Klingon\\","},"235":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \\"Limburgan; Limburger; Limburgish\\": \\"Limburgish\\","},"236":{"hits":1,"time":0.000014781951904296875,"time_per_hit":0.000014781951904296875,"percent":0.0017696154739743795,"line":"    \\"Low German; Low Saxon; German, Low; Saxon, Low\\": \\"Low German\\","},"237":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \\"Luxembourgish; Letzeburgesch\\": \\"Luxembourgish\\","},"238":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \\"Ndebele, South; South Ndebele\\": \\"Southern Ndebele\\","},"239":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \\"Norwegian Nynorsk; Nynorsk, Norwegian\\": \\"Norwegian Nynorsk\\","},"240":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \\"Occitan (post 1500)\\": \\"Occitan\\","},"241":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"    \\"Panjabi; Punjabi\\": \\"Punjabi\\","},"242":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \\"Pedi; Sepedi; Northern Sotho\\": \\"Northern Sotho\\","},"243":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"    \\"Pushto; Pashto\\": \\"Pashto\\","},"244":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \\"Sinhala; Sinhalese\\": \\"Sinhala\\","},"245":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \\"Songhai languages\\": \\"Songhay\\","},"246":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \\"Sotho, Southern\\": \\"Sotho\\","},"247":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \\"Spanish; Castilian\\": \\"Spanish\\","},"248":{"hits":1,"time":0.000014781951904296875,"time_per_hit":0.000014781951904296875,"percent":0.0017696154739743795,"line":"    \\"Uighur; Uyghur\\": \\"Uyghur\\","},"249":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"}"},"250":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"251":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"252":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"scripts = {"},"253":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    # Codes pulled from http://unicode.org/iso15924/iso15924-codes.html"},"254":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    # Scripts were figured out from the languages\'s Wikipedia pages and the"},"255":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    # real usage in https://mozilla.locamotion.org/"},"256":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \'Deva\': ["},"257":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"        \'anp\',  # https://en.wikipedia.org/wiki/Angika_language"},"258":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"        \'bho\',  # https://en.wikipedia.org/wiki/Bhojpuri_language"},"259":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"        \'brx\',  # https://en.wikipedia.org/wiki/Bodo_language"},"260":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"        \'doi\',  # https://en.wikipedia.org/wiki/Dogri_language"},"261":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"        \'hi\',   # https://en.wikipedia.org/wiki/Hindi"},"262":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"        \'kfy\',  # https://en.wikipedia.org/wiki/Kumaoni_language"},"263":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"        \'kok\',  # https://en.wikipedia.org/wiki/Konkani_language"},"264":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"        \'mai\',  # https://en.wikipedia.org/wiki/Maithili_language"},"265":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"        \'mr\',   # https://en.wikipedia.org/wiki/Marathi_language"},"266":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"        \'sa\',   # https://en.wikipedia.org/wiki/Sanskrit"},"267":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"        \'sat\',  # https://en.wikipedia.org/wiki/Santali_language"},"268":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    ],"},"269":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \'Beng\': ["},"270":{"hits":1,"time":0.000016689300537109375,"time_per_hit":0.000016689300537109375,"percent":0.0019979529544872027,"line":"        \'bn\',   # https://en.wikipedia.org/wiki/Bengali_language"},"271":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"        \'mni\',  # https://en.wikipedia.org/wiki/Manipuri_language"},"272":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    ],"},"273":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \'Tibt\': ["},"274":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"        \'bo\',  # https://en.wikipedia.org/wiki/Standard_Tibetan"},"275":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    ],"},"276":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \'Orya\': ["},"277":{"hits":1,"time":0.000015020370483398438,"time_per_hit":0.000015020370483398438,"percent":0.0017981576590384823,"line":"        \'or\',  # https://en.wikipedia.org/wiki/Odia_language"},"278":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    ],"},"279":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \'Gujr\': ["},"280":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"        \'gu\',  # https://en.wikipedia.org/wiki/Gujarati_language"},"281":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    ],"},"282":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \'Khmr\': ["},"283":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"        \'km\',  # https://en.wikipedia.org/wiki/Khmer_language"},"284":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    ],"},"285":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \'Knda\': ["},"286":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"        \'kn\',  # https://en.wikipedia.org/wiki/Kannada"},"287":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    ],"},"288":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \'Laoo\': ["},"289":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"        \'lo\',  # https://en.wikipedia.org/wiki/Lao_language"},"290":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    ],"},"291":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \'Mlym\': ["},"292":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"        \'ml\',  # https://en.wikipedia.org/wiki/Malayalam"},"293":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    ],"},"294":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \'Mymr\': ["},"295":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"        \'my\',   # https://en.wikipedia.org/wiki/Burmese_language"},"296":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"        \'shn\',  # https://en.wikipedia.org/wiki/Shan_language"},"297":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    ],"},"298":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \'Sind\': ["},"299":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"        \'sd\',  # https://en.wikipedia.org/wiki/Sindhi_language"},"300":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    ],"},"301":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \'Taml\': ["},"302":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"        \'ta\',  # https://en.wikipedia.org/wiki/Tamil_language"},"303":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    ],"},"304":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    # Unable to find the codes for the following scripts."},"305":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \'assamese\': ["},"306":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"        \'as\',  # https://en.wikipedia.org/wiki/Assamese_language"},"307":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    ],"},"308":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \'perso-arabic\': ["},"309":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"        \'ks\',  # https://en.wikipedia.org/wiki/Kashmiri_language"},"310":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    ],"},"311":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \'chinese\': ["},"312":{"hits":1,"time":0.00001430511474609375,"time_per_hit":0.00001430511474609375,"percent":0.0017125311038461736,"line":"        \'yue\',  # https://en.wikipedia.org/wiki/Yue_Chinese"},"313":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    ],"},"314":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"}"},"315":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"\\"\\"\\"Dictionary of scripts data."},"316":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"The dictionary keys are ISO 15924 script codes, and script names where scripts"},"317":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"are missing from standard. The value is a list of codes for languages using"},"318":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"that script."},"319":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"320":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"This is mainly used to alter the behavior of some checks (the accelerators one"},"321":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"for example).\\"\\"\\""},"322":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"323":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"324":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"cldr_plural_categories = ["},"325":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'zero\',"},"326":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'one\',"},"327":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'two\',"},"328":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'few\',"},"329":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'many\',"},"330":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'other\',"},"331":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"]"},"332":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"333":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"\\"\\"\\"List of plural tags generated from CLDR 32.0.1 using"},"334":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"https://github.com/WeblateOrg/language-data"},"335":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"\\"\\"\\""},"336":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"plural_tags = {"},"337":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'af\': [\'one\', \'other\'],"},"338":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'ak\': [\'one\', \'other\'],"},"339":{"hits":1,"time":0.000017642974853515625,"time_per_hit":0.000017642974853515625,"percent":0.002112121694743614,"line":"    \'am\': [\'one\', \'other\'],"},"340":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'ar\': [\'zero\', \'one\', \'two\', \'few\', \'many\', \'other\'],"},"341":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'ars\': [\'zero\', \'one\', \'two\', \'few\', \'many\', \'other\'],"},"342":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'as\': [\'one\', \'other\'],"},"343":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'asa\': [\'one\', \'other\'],"},"344":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'ast\': [\'one\', \'other\'],"},"345":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'az\': [\'one\', \'other\'],"},"346":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'be\': [\'one\', \'few\', \'many\'],"},"347":{"hits":1,"time":0.0000152587890625,"time_per_hit":0.0000152587890625,"percent":0.0018266998441025851,"line":"    \'bem\': [\'one\', \'other\'],"},"348":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'bez\': [\'one\', \'other\'],"},"349":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'bg\': [\'one\', \'other\'],"},"350":{"hits":1,"time":0.000027418136596679688,"time_per_hit":0.000027418136596679688,"percent":0.0032823512823718327,"line":"    \'bh\': [\'one\', \'other\'],"},"351":{"hits":1,"time":0.00001430511474609375,"time_per_hit":0.00001430511474609375,"percent":0.0017125311038461736,"line":"    \'bm\': [\'other\'],"},"352":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'bn\': [\'one\', \'other\'],"},"353":{"hits":1,"time":0.000035762786865234375,"time_per_hit":0.000035762786865234375,"percent":0.004281327759615434,"line":"    \'bo\': [\'other\'],"},"354":{"hits":1,"time":0.000015020370483398438,"time_per_hit":0.000015020370483398438,"percent":0.0017981576590384823,"line":"    \'br\': [\'one\', \'two\', \'few\', \'many\', \'other\'],"},"355":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'brx\': [\'one\', \'other\'],"},"356":{"hits":1,"time":0.000014066696166992188,"time_per_hit":0.000014066696166992188,"percent":0.0016839889187820708,"line":"    \'bs\': [\'one\', \'few\', \'other\'],"},"357":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'ca\': [\'one\', \'other\'],"},"358":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'ce\': [\'one\', \'other\'],"},"359":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'ceb\': [\'one\', \'other\'],"},"360":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'cgg\': [\'one\', \'other\'],"},"361":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'chr\': [\'one\', \'other\'],"},"362":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'ckb\': [\'one\', \'other\'],"},"363":{"hits":1,"time":0.0000152587890625,"time_per_hit":0.0000152587890625,"percent":0.0018266998441025851,"line":"    \'cs\': [\'one\', \'few\', \'other\'],"},"364":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'cy\': [\'zero\', \'one\', \'two\', \'few\', \'many\', \'other\'],"},"365":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'da\': [\'one\', \'other\'],"},"366":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'de\': [\'one\', \'other\'],"},"367":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'dsb\': [\'one\', \'two\', \'few\', \'other\'],"},"368":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'dv\': [\'one\', \'other\'],"},"369":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'dz\': [\'other\'],"},"370":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'ee\': [\'one\', \'other\'],"},"371":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'el\': [\'one\', \'other\'],"},"372":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"    \'en\': [\'one\', \'other\'],"},"373":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'eo\': [\'one\', \'other\'],"},"374":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'es\': [\'one\', \'other\'],"},"375":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'et\': [\'one\', \'other\'],"},"376":{"hits":1,"time":0.000015735626220703125,"time_per_hit":0.000015735626220703125,"percent":0.001883784214230791,"line":"    \'eu\': [\'one\', \'other\'],"},"377":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'fa\': [\'one\', \'other\'],"},"378":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'ff\': [\'one\', \'other\'],"},"379":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'fi\': [\'one\', \'other\'],"},"380":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'fil\': [\'one\', \'other\'],"},"381":{"hits":1,"time":0.000015020370483398438,"time_per_hit":0.000015020370483398438,"percent":0.0017981576590384823,"line":"    \'fo\': [\'one\', \'other\'],"},"382":{"hits":1,"time":0.000014066696166992188,"time_per_hit":0.000014066696166992188,"percent":0.0016839889187820708,"line":"    \'fr\': [\'one\', \'other\'],"},"383":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'fur\': [\'one\', \'other\'],"},"384":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'fy\': [\'one\', \'other\'],"},"385":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'ga\': [\'one\', \'two\', \'few\', \'many\', \'other\'],"},"386":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'gd\': [\'one\', \'two\', \'few\', \'other\'],"},"387":{"hits":1,"time":0.0000152587890625,"time_per_hit":0.0000152587890625,"percent":0.0018266998441025851,"line":"    \'gl\': [\'one\', \'other\'],"},"388":{"hits":1,"time":0.000014066696166992188,"time_per_hit":0.000014066696166992188,"percent":0.0016839889187820708,"line":"    \'gsw\': [\'one\', \'other\'],"},"389":{"hits":1,"time":0.0000152587890625,"time_per_hit":0.0000152587890625,"percent":0.0018266998441025851,"line":"    \'gu\': [\'one\', \'other\'],"},"390":{"hits":1,"time":0.000014066696166992188,"time_per_hit":0.000014066696166992188,"percent":0.0016839889187820708,"line":"    \'guw\': [\'one\', \'other\'],"},"391":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'gv\': [\'one\', \'two\', \'few\', \'other\'],"},"392":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'ha\': [\'one\', \'other\'],"},"393":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'haw\': [\'one\', \'other\'],"},"394":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'he\': [\'one\', \'two\', \'many\', \'other\'],"},"395":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'hi\': [\'one\', \'other\'],"},"396":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"    \'hr\': [\'one\', \'few\', \'other\'],"},"397":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'hsb\': [\'one\', \'two\', \'few\', \'other\'],"},"398":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'hu\': [\'one\', \'other\'],"},"399":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'hy\': [\'one\', \'other\'],"},"400":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'ia\': [\'one\', \'other\'],"},"401":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'id\': [\'other\'],"},"402":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'ig\': [\'other\'],"},"403":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'ii\': [\'other\'],"},"404":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'in\': [\'other\'],"},"405":{"hits":1,"time":0.000015497207641601562,"time_per_hit":0.000015497207641601562,"percent":0.0018552420291666882,"line":"    \'io\': [\'one\', \'other\'],"},"406":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"    \'is\': [\'one\', \'other\'],"},"407":{"hits":1,"time":0.000014066696166992188,"time_per_hit":0.000014066696166992188,"percent":0.0016839889187820708,"line":"    \'it\': [\'one\', \'other\'],"},"408":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'iu\': [\'one\', \'two\', \'other\'],"},"409":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'iw\': [\'one\', \'two\', \'many\', \'other\'],"},"410":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'ja\': [\'other\'],"},"411":{"hits":1,"time":0.000015497207641601562,"time_per_hit":0.000015497207641601562,"percent":0.0018552420291666882,"line":"    \'jbo\': [\'other\'],"},"412":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'jgo\': [\'one\', \'other\'],"},"413":{"hits":1,"time":0.0000152587890625,"time_per_hit":0.0000152587890625,"percent":0.0018266998441025851,"line":"    \'ji\': [\'one\', \'other\'],"},"414":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'jmc\': [\'one\', \'other\'],"},"415":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'jv\': [\'other\'],"},"416":{"hits":1,"time":0.000014066696166992188,"time_per_hit":0.000014066696166992188,"percent":0.0016839889187820708,"line":"    \'jw\': [\'other\'],"},"417":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'ka\': [\'one\', \'other\'],"},"418":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'kab\': [\'one\', \'other\'],"},"419":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'kaj\': [\'one\', \'other\'],"},"420":{"hits":1,"time":0.000015497207641601562,"time_per_hit":0.000015497207641601562,"percent":0.0018552420291666882,"line":"    \'kcg\': [\'one\', \'other\'],"},"421":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'kde\': [\'other\'],"},"422":{"hits":1,"time":0.000014066696166992188,"time_per_hit":0.000014066696166992188,"percent":0.0016839889187820708,"line":"    \'kea\': [\'other\'],"},"423":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'kk\': [\'one\', \'other\'],"},"424":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'kkj\': [\'one\', \'other\'],"},"425":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'kl\': [\'one\', \'other\'],"},"426":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'km\': [\'other\'],"},"427":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'kn\': [\'one\', \'other\'],"},"428":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'ko\': [\'other\'],"},"429":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'ks\': [\'one\', \'other\'],"},"430":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'ksb\': [\'one\', \'other\'],"},"431":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'ksh\': [\'zero\', \'one\', \'other\'],"},"432":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'ku\': [\'one\', \'other\'],"},"433":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'kw\': [\'zero\', \'one\', \'two\', \'few\', \'many\', \'other\'],"},"434":{"hits":1,"time":0.0000152587890625,"time_per_hit":0.0000152587890625,"percent":0.0018266998441025851,"line":"    \'ky\': [\'one\', \'other\'],"},"435":{"hits":1,"time":0.000017881393432617188,"time_per_hit":0.000017881393432617188,"percent":0.002140663879807717,"line":"    \'lag\': [\'zero\', \'one\', \'other\'],"},"436":{"hits":1,"time":0.00001430511474609375,"time_per_hit":0.00001430511474609375,"percent":0.0017125311038461736,"line":"    \'lb\': [\'one\', \'other\'],"},"437":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'lg\': [\'one\', \'other\'],"},"438":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'lkt\': [\'other\'],"},"439":{"hits":1,"time":0.000015497207641601562,"time_per_hit":0.000015497207641601562,"percent":0.0018552420291666882,"line":"    \'ln\': [\'one\', \'other\'],"},"440":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'lo\': [\'other\'],"},"441":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'lt\': [\'one\', \'few\', \'other\'],"},"442":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'lv\': [\'zero\', \'one\', \'other\'],"},"443":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'mas\': [\'one\', \'other\'],"},"444":{"hits":1,"time":0.000015020370483398438,"time_per_hit":0.000015020370483398438,"percent":0.0017981576590384823,"line":"    \'mg\': [\'one\', \'other\'],"},"445":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'mgo\': [\'one\', \'other\'],"},"446":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'mk\': [\'one\', \'other\'],"},"447":{"hits":1,"time":0.000015735626220703125,"time_per_hit":0.000015735626220703125,"percent":0.001883784214230791,"line":"    \'ml\': [\'one\', \'other\'],"},"448":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'mn\': [\'one\', \'other\'],"},"449":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'mo\': [\'one\', \'few\', \'other\'],"},"450":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'mr\': [\'one\', \'other\'],"},"451":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'ms\': [\'other\'],"},"452":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"    \'mt\': [\'one\', \'few\', \'many\', \'other\'],"},"453":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'my\': [\'other\'],"},"454":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'nah\': [\'one\', \'other\'],"},"455":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'naq\': [\'one\', \'two\', \'other\'],"},"456":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'nb\': [\'one\', \'other\'],"},"457":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'nd\': [\'one\', \'other\'],"},"458":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'ne\': [\'one\', \'other\'],"},"459":{"hits":1,"time":0.000015497207641601562,"time_per_hit":0.000015497207641601562,"percent":0.0018552420291666882,"line":"    \'nl\': [\'one\', \'other\'],"},"460":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'nn\': [\'one\', \'other\'],"},"461":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'nnh\': [\'one\', \'other\'],"},"462":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'no\': [\'one\', \'other\'],"},"463":{"hits":1,"time":0.000015497207641601562,"time_per_hit":0.000015497207641601562,"percent":0.0018552420291666882,"line":"    \'nqo\': [\'other\'],"},"464":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'nr\': [\'one\', \'other\'],"},"465":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'nso\': [\'one\', \'other\'],"},"466":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'ny\': [\'one\', \'other\'],"},"467":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'nyn\': [\'one\', \'other\'],"},"468":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'om\': [\'one\', \'other\'],"},"469":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'or\': [\'one\', \'other\'],"},"470":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'os\': [\'one\', \'other\'],"},"471":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"    \'pa\': [\'one\', \'other\'],"},"472":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'pap\': [\'one\', \'other\'],"},"473":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'pl\': [\'one\', \'few\', \'many\'],"},"474":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'prg\': [\'zero\', \'one\', \'other\'],"},"475":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'ps\': [\'one\', \'other\'],"},"476":{"hits":1,"time":0.000018596649169921875,"time_per_hit":0.000018596649169921875,"percent":0.0022262904350000257,"line":"    \'pt\': [\'one\', \'other\'],"},"477":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'pt_PT\': [\'one\', \'other\'],"},"478":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'rm\': [\'one\', \'other\'],"},"479":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'ro\': [\'one\', \'few\', \'other\'],"},"480":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'rof\': [\'one\', \'other\'],"},"481":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'root\': [\'other\'],"},"482":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'ru\': [\'one\', \'few\', \'many\'],"},"483":{"hits":1,"time":0.000015735626220703125,"time_per_hit":0.000015735626220703125,"percent":0.001883784214230791,"line":"    \'rwk\': [\'one\', \'other\'],"},"484":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'sah\': [\'other\'],"},"485":{"hits":1,"time":0.000014066696166992188,"time_per_hit":0.000014066696166992188,"percent":0.0016839889187820708,"line":"    \'saq\': [\'one\', \'other\'],"},"486":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'sc\': [\'one\', \'other\'],"},"487":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'scn\': [\'one\', \'other\'],"},"488":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'sd\': [\'one\', \'other\'],"},"489":{"hits":1,"time":0.000015497207641601562,"time_per_hit":0.000015497207641601562,"percent":0.0018552420291666882,"line":"    \'sdh\': [\'one\', \'other\'],"},"490":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'se\': [\'one\', \'two\', \'other\'],"},"491":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'seh\': [\'one\', \'other\'],"},"492":{"hits":1,"time":0.000015497207641601562,"time_per_hit":0.000015497207641601562,"percent":0.0018552420291666882,"line":"    \'ses\': [\'other\'],"},"493":{"hits":1,"time":0.000014066696166992188,"time_per_hit":0.000014066696166992188,"percent":0.0016839889187820708,"line":"    \'sg\': [\'other\'],"},"494":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'sh\': [\'one\', \'few\', \'other\'],"},"495":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'shi\': [\'one\', \'few\', \'other\'],"},"496":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'si\': [\'one\', \'other\'],"},"497":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'sk\': [\'one\', \'few\', \'other\'],"},"498":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'sl\': [\'one\', \'two\', \'few\', \'other\'],"},"499":{"hits":1,"time":0.000014066696166992188,"time_per_hit":0.000014066696166992188,"percent":0.0016839889187820708,"line":"    \'sma\': [\'one\', \'two\', \'other\'],"},"500":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'smi\': [\'one\', \'two\', \'other\'],"},"501":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'smj\': [\'one\', \'two\', \'other\'],"},"502":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'smn\': [\'one\', \'two\', \'other\'],"},"503":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'sms\': [\'one\', \'two\', \'other\'],"},"504":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'sn\': [\'one\', \'other\'],"},"505":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'so\': [\'one\', \'other\'],"},"506":{"hits":1,"time":0.0000133514404296875,"time_per_hit":0.0000133514404296875,"percent":0.0015983623635897621,"line":"    \'sq\': [\'one\', \'other\'],"},"507":{"hits":1,"time":0.000016927719116210938,"time_per_hit":0.000016927719116210938,"percent":0.0020264951395513055,"line":"    \'sr\': [\'one\', \'few\', \'other\'],"},"508":{"hits":1,"time":0.000014066696166992188,"time_per_hit":0.000014066696166992188,"percent":0.0016839889187820708,"line":"    \'ss\': [\'one\', \'other\'],"},"509":{"hits":1,"time":0.000015497207641601562,"time_per_hit":0.000015497207641601562,"percent":0.0018552420291666882,"line":"    \'ssy\': [\'one\', \'other\'],"},"510":{"hits":1,"time":0.000014066696166992188,"time_per_hit":0.000014066696166992188,"percent":0.0016839889187820708,"line":"    \'st\': [\'one\', \'other\'],"},"511":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'sv\': [\'one\', \'other\'],"},"512":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'sw\': [\'one\', \'other\'],"},"513":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'syr\': [\'one\', \'other\'],"},"514":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'ta\': [\'one\', \'other\'],"},"515":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'te\': [\'one\', \'other\'],"},"516":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'teo\': [\'one\', \'other\'],"},"517":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'th\': [\'other\'],"},"518":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'ti\': [\'one\', \'other\'],"},"519":{"hits":1,"time":0.000014066696166992188,"time_per_hit":0.000014066696166992188,"percent":0.0016839889187820708,"line":"    \'tig\': [\'one\', \'other\'],"},"520":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'tk\': [\'one\', \'other\'],"},"521":{"hits":1,"time":0.0000152587890625,"time_per_hit":0.0000152587890625,"percent":0.0018266998441025851,"line":"    \'tl\': [\'one\', \'other\'],"},"522":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'tn\': [\'one\', \'other\'],"},"523":{"hits":1,"time":0.000014066696166992188,"time_per_hit":0.000014066696166992188,"percent":0.0016839889187820708,"line":"    \'to\': [\'other\'],"},"524":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'tr\': [\'one\', \'other\'],"},"525":{"hits":1,"time":0.000014066696166992188,"time_per_hit":0.000014066696166992188,"percent":0.0016839889187820708,"line":"    \'ts\': [\'one\', \'other\'],"},"526":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'tzm\': [\'one\', \'other\'],"},"527":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"    \'ug\': [\'one\', \'other\'],"},"528":{"hits":1,"time":0.000014066696166992188,"time_per_hit":0.000014066696166992188,"percent":0.0016839889187820708,"line":"    \'uk\': [\'one\', \'few\', \'many\'],"},"529":{"hits":1,"time":0.00003504753112792969,"time_per_hit":0.00003504753112792969,"percent":0.004195701204423126,"line":"    \'ur\': [\'one\', \'other\'],"},"530":{"hits":1,"time":0.000014543533325195312,"time_per_hit":0.000014543533325195312,"percent":0.0017410732889102764,"line":"    \'uz\': [\'one\', \'other\'],"},"531":{"hits":1,"time":0.000015497207641601562,"time_per_hit":0.000015497207641601562,"percent":0.0018552420291666882,"line":"    \'ve\': [\'one\', \'other\'],"},"532":{"hits":1,"time":0.000014066696166992188,"time_per_hit":0.000014066696166992188,"percent":0.0016839889187820708,"line":"    \'vi\': [\'other\'],"},"533":{"hits":1,"time":0.000014066696166992188,"time_per_hit":0.000014066696166992188,"percent":0.0016839889187820708,"line":"    \'vo\': [\'one\', \'other\'],"},"534":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'vun\': [\'one\', \'other\'],"},"535":{"hits":1,"time":0.000014066696166992188,"time_per_hit":0.000014066696166992188,"percent":0.0016839889187820708,"line":"    \'wa\': [\'one\', \'other\'],"},"536":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'wae\': [\'one\', \'other\'],"},"537":{"hits":1,"time":0.000014066696166992188,"time_per_hit":0.000014066696166992188,"percent":0.0016839889187820708,"line":"    \'wo\': [\'other\'],"},"538":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'xh\': [\'one\', \'other\'],"},"539":{"hits":1,"time":0.000019311904907226562,"time_per_hit":0.000019311904907226562,"percent":0.002311916990192334,"line":"    \'xog\': [\'one\', \'other\'],"},"540":{"hits":1,"time":0.000014066696166992188,"time_per_hit":0.000014066696166992188,"percent":0.0016839889187820708,"line":"    \'yi\': [\'one\', \'other\'],"},"541":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'yo\': [\'other\'],"},"542":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'yue\': [\'other\'],"},"543":{"hits":1,"time":0.000014066696166992188,"time_per_hit":0.000014066696166992188,"percent":0.0016839889187820708,"line":"    \'zh\': [\'other\'],"},"544":{"hits":1,"time":0.00002002716064453125,"time_per_hit":0.00002002716064453125,"percent":0.002397543545384643,"line":"    \'zu\': [\'one\', \'other\']"},"545":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"}"},"546":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"547":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"548":{"hits":1,"time":0.000015020370483398438,"time_per_hit":0.000015020370483398438,"percent":0.0017981576590384823,"line":"def simplercode(code):"},"549":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\"This attempts to simplify the given language code by ignoring country"},"550":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    codes, for example."},"551":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"552":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    .. seealso::"},"553":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"554":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"       - http://www.rfc-editor.org/rfc/bcp/bcp47.txt"},"555":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"       - http://www.rfc-editor.org/rfc/rfc4646.txt"},"556":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"       - http://www.rfc-editor.org/rfc/rfc4647.txt"},"557":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"       - http://www.w3.org/International/articles/language-tags/"},"558":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\""},"559":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    if not code:"},"560":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return code"},"561":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    separator = normalize_code(code).rfind(\'-\')"},"562":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    if separator >= 0:"},"563":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return code[:separator]"},"564":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    else:"},"565":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return \\"\\""},"566":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"567":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"568":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"expansion_factors = {"},"569":{"hits":1,"time":0.000014066696166992188,"time_per_hit":0.000014066696166992188,"percent":0.0016839889187820708,"line":"    \'af\': 0.1,"},"570":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    \'ar\': -0.09,"},"571":{"hits":1,"time":0.000014066696166992188,"time_per_hit":0.000014066696166992188,"percent":0.0016839889187820708,"line":"    \'es\': 0.21,"},"572":{"hits":1,"time":0.000015497207641601562,"time_per_hit":0.000015497207641601562,"percent":0.0018552420291666882,"line":"    \'fr\': 0.28,"},"573":{"hits":1,"time":0.0000152587890625,"time_per_hit":0.0000152587890625,"percent":0.0018266998441025851,"line":"    \'it\': 0.2,"},"574":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"}"},"575":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"\\"\\"\\"Source to target string length expansion factors.\\"\\"\\""},"576":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"577":{"hits":1,"time":0.0000438690185546875,"time_per_hit":0.0000438690185546875,"percent":0.005251762051794932,"line":"langcode_re = re.compile(\\"^[a-z]{2,3}([_-][A-Z]{2,3}|)(@[a-zA-Z0-9]+|)$\\")"},"578":{"hits":1,"time":0.000014781951904296875,"time_per_hit":0.000014781951904296875,"percent":0.0017696154739743795,"line":"langcode_ire = re.compile(\\"^[a-z]{2,3}([_-][a-z]{2,3})?(@[a-z0-9]+)?$\\","},"579":{"hits":1,"time":0.0000362396240234375,"time_per_hit":0.0000362396240234375,"percent":0.00433841212974364,"line":"                          re.IGNORECASE)"},"580":{"hits":1,"time":0.00003552436828613281,"time_per_hit":0.00003552436828613281,"percent":0.004252785574551331,"line":"variant_re = re.compile(\\"^[_-][A-Z]{2,3}(@[a-zA-Z0-9]+|)$\\")"},"581":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"582":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"583":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"def languagematch(languagecode, otherlanguagecode):"},"584":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\"matches a languagecode to another, ignoring regions in the second\\"\\"\\""},"585":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    if languagecode is None:"},"586":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return langcode_re.match(otherlanguagecode)"},"587":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    return (languagecode == otherlanguagecode or"},"588":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            (otherlanguagecode.startswith(languagecode) and"},"589":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"             variant_re.match(otherlanguagecode[len(languagecode):])))"},"590":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"591":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"592":{"hits":1,"time":0.00001239776611328125,"time_per_hit":0.00001239776611328125,"percent":0.0014841936233333504,"line":"def get_country_iso_name(country_code):"},"593":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\"Return country ISO name.\\"\\"\\""},"594":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    country_code = country_code.upper()"},"595":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    try:"},"596":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if len(country_code) == 2:"},"597":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            country = pycountry.countries.get(alpha_2=country_code)"},"598":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        else:"},"599":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            country = pycountry.countries.get(alpha_3=country_code)"},"600":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if hasattr(country, \'common_name\'):"},"601":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            return country.common_name"},"602":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return country.name"},"603":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    except (KeyError, AttributeError):"},"604":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return u\\"\\""},"605":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"606":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"607":{"hits":1,"time":0.000011920928955078125,"time_per_hit":0.000011920928955078125,"percent":0.0014271092532051448,"line":"def get_language_iso_name(language_code):"},"608":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\"Return language ISO name.\\"\\"\\""},"609":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    try:"},"610":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if len(language_code) == 2:"},"611":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            language = pycountry.languages.get(alpha_2=language_code)"},"612":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        else:"},"613":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            language = pycountry.languages.get(alpha_3=language_code)"},"614":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if hasattr(language, \'common_name\'):"},"615":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            return language.common_name"},"616":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return language.name"},"617":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    except (KeyError, AttributeError):"},"618":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return u\\"\\""},"619":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"620":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"621":{"hits":1,"time":0.000011920928955078125,"time_per_hit":0.000011920928955078125,"percent":0.0014271092532051448,"line":"def get_language_iso_fullname(language_code):"},"622":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\"Return language ISO fullname."},"623":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"624":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    If language code is not a simple ISO 639 code, then we try to split into a"},"625":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    two part language code (ISO 639 and ISO 3166)."},"626":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\""},"627":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    if len(language_code) > 3:"},"628":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        language_code = language_code.replace(\\"_\\", \\"-\\").replace(\\"@\\", \\"-\\")"},"629":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        language_code = \\"-\\".join(language_code.split(\\"-\\")[:2])"},"630":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if \\"-\\" not in language_code:"},"631":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            return u\\"\\""},"632":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        language_code, country_code = language_code.split(\\"-\\")"},"633":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        language_name = get_language_iso_name(language_code)"},"634":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if not language_name:"},"635":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            return u\\"\\""},"636":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        country_name = get_country_iso_name(country_code)"},"637":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if not country_name:"},"638":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            return u\\"\\""},"639":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return u\\"%s (%s)\\" % (language_name, country_name)"},"640":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    return get_language_iso_name(language_code)"},"641":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"642":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"643":{"hits":1,"time":0.00003361701965332031,"time_per_hit":0.00003361701965332031,"percent":0.004024448094038508,"line":"dialect_name_re = re.compile(r\\"(.+)\\\\s\\\\(([^)\\\\d]{,25})\\\\)$\\")"},"644":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# The limit of 25 characters on the country name is so that \\"Interlingua (...)\\""},"645":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# (see above) is correctly interpreted."},"646":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"647":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"648":{"hits":1,"time":0.000013113021850585938,"time_per_hit":0.000013113021850585938,"percent":0.001569820178525659,"line":"def tr_lang(langcode=None):"},"649":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\"Gives a function that can translate a language name, even in the form"},"650":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    ``\\"language (country)\\"``, into the language with iso code langcode, or the"},"651":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    system language if no language is specified."},"652":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\""},"653":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    langfunc = gettext_lang(langcode)"},"654":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    countryfunc = gettext_country(langcode)"},"655":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"656":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def handlelanguage(name):"},"657":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        match = dialect_name_re.match(name)"},"658":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if match:"},"659":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            language, country = match.groups()"},"660":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if country != \\"macrolanguage\\":"},"661":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                return ("},"662":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    u\\"%s (%s)\\""},"663":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    % (_fix_language_name(langfunc(language)),"},"664":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                       countryfunc(country)))"},"665":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return _fix_language_name(langfunc(name))"},"666":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"667":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    return handlelanguage"},"668":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"669":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"670":{"hits":1,"time":0.000012636184692382812,"time_per_hit":0.000012636184692382812,"percent":0.0015127358083974534,"line":"def _fix_language_name(name):"},"671":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\"Identify and replace some unsightly names present in iso-codes."},"672":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"673":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    If the name is present in _fixed_names we assume it is untranslated and we"},"674":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    replace it with a more usable rendering.  If the remaining part is long and"},"675":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    includes a semi-colon, we only take the text up to the semi-colon to keep"},"676":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    things neat."},"677":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\""},"678":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    if name in _fixed_names:"},"679":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return _fixed_names[name]"},"680":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    elif len(name) > 11:"},"681":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        # These constants are somewhat arbitrary, but testing with the Japanese"},"682":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        # translation of ISO codes suggests these as the upper bounds."},"683":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        split_point = name[5:].find(\';\')"},"684":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if split_point >= 0:"},"685":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            return name[:5+split_point]"},"686":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    return name"},"687":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"688":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"689":{"hits":1,"time":0.000011920928955078125,"time_per_hit":0.000011920928955078125,"percent":0.0014271092532051448,"line":"def gettext_domain(langcode, domain, localedir=None):"},"690":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\"Returns a gettext function for given iso domain\\"\\"\\""},"691":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    kwargs = dict("},"692":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        domain=domain,"},"693":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        localedir=localedir,"},"694":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        fallback=True)"},"695":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    if langcode:"},"696":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        kwargs[\'languages\'] = [langcode]"},"697":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    elif os.name == \\"nt\\":"},"698":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        # On Windows the default locale is not used for some reason"},"699":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        kwargs[\'languages\'] = [locale.getdefaultlocale()[0]]"},"700":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    t = gettext.translation(**kwargs)"},"701":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    return t.ugettext if six.PY2 else t.gettext"},"702":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"703":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"704":{"hits":1,"time":0.000011682510375976562,"time_per_hit":0.000011682510375976562,"percent":0.0013985670681410417,"line":"def gettext_lang(langcode=None):"},"705":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\"Returns a gettext function to translate language names into the given"},"706":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    language, or the system language if no language is specified."},"707":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\""},"708":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    if pycountry is None:"},"709":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return gettext_domain(langcode, \'iso_639\')"},"710":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    return gettext_domain(langcode, \'iso639-3\', pycountry.LOCALES_DIR)"},"711":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"712":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"713":{"hits":1,"time":0.00001239776611328125,"time_per_hit":0.00001239776611328125,"percent":0.0014841936233333504,"line":"def gettext_country(langcode=None):"},"714":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\"Returns a gettext function to translate country names into the given"},"715":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    language, or the system language if no language is specified."},"716":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\""},"717":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    if pycountry is None:"},"718":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return gettext_domain(langcode, \'iso_3166\')"},"719":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    return gettext_domain(langcode, \'iso3166\', pycountry.LOCALES_DIR)"},"720":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"721":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"722":{"hits":1,"time":0.000011682510375976562,"time_per_hit":0.000011682510375976562,"percent":0.0013985670681410417,"line":"def normalize(string, normal_form=\\"NFC\\"):"},"723":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\"Return a unicode string in its normalized form"},"724":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"725":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    :param string: The string to be normalized"},"726":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    :param normal_form: NFC (default), NFD, NFKC, NFKD"},"727":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    :return: Normalized string"},"728":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\""},"729":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    if string is None:"},"730":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return None"},"731":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    else:"},"732":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        import unicodedata"},"733":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return unicodedata.normalize(normal_form, string)"},"734":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"735":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"736":{"hits":1,"time":0.000012159347534179688,"time_per_hit":0.000012159347534179688,"percent":0.0014556514382692476,"line":"def forceunicode(string):"},"737":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\"Ensures that the string is in unicode."},"738":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"739":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    :param string: A text string"},"740":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    :type string: Unicode, String"},"741":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    :return: String converted to Unicode and normalized as needed."},"742":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    :rtype: Unicode"},"743":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\""},"744":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    if string is None:"},"745":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return None"},"746":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    from translate.storage.placeables import StringElem"},"747":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    if isinstance(string, bytes):"},"748":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        encoding = getattr(string, \\"encoding\\", \\"utf-8\\")"},"749":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        string = string.decode(encoding)"},"750":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    elif isinstance(string, StringElem):"},"751":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        string = six.text_type(string)"},"752":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    return string"},"753":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"754":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"755":{"hits":1,"time":0.000011682510375976562,"time_per_hit":0.000011682510375976562,"percent":0.0013985670681410417,"line":"def normalized_unicode(string):"},"756":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\"Forces the string to unicode and does normalization.\\"\\"\\""},"757":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    return normalize(forceunicode(string))"},"758":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"759":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"760":{"hits":162,"time":0.00014472007751464844,"time_per_hit":8.933338118188176e-7,"percent":0.017325106333910455,"line":"def normalize_code(code):"},"761":{"hits":161,"time":0.0001735687255859375,"time_per_hit":0.0000010780666185461956,"percent":0.020778710726666906,"line":"    if not code:"},"762":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return code"},"763":{"hits":161,"time":0.00022339820861816406,"time_per_hit":0.0000013875665131562986,"percent":0.026744027405064413,"line":"    return code.replace(\\"_\\", \\"-\\").replace(\\"@\\", \\"-\\").lower()"},"764":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"765":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"766":{"hits":325,"time":0.0035390853881835938,"time_per_hit":0.000010889493502103366,"percent":0.42368019509154337,"line":"__normalised_languages = set(normalize_code(key) for key in languages.keys())"},"767":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"768":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"769":{"hits":1,"time":0.000012159347534179688,"time_per_hit":0.000012159347534179688,"percent":0.0014556514382692476,"line":"def simplify_to_common(language_code, languages=languages):"},"770":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\"Simplify language code to the most commonly used form for the language,"},"771":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    stripping country information for languages that tend not to be localized"},"772":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    differently for different countries"},"773":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\""},"774":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    simpler = simplercode(language_code)"},"775":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    if simpler == \\"\\":"},"776":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return language_code"},"777":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"778":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    if (normalize_code(language_code) in __normalised_languages):"},"779":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return language_code"},"780":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"781":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    return simplify_to_common(simpler)"},"782":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"783":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"784":{"hits":1,"time":0.000012159347534179688,"time_per_hit":0.000012159347534179688,"percent":0.0014556514382692476,"line":"def get_language(code):"},"785":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    code = code.replace(\\"-\\", \\"_\\").replace(\\"@\\", \\"_\\").lower()"},"786":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    if \\"_\\" in code:"},"787":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        # convert ab_cd \u2192 ab_CD"},"788":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        code = \\"%s_%s\\" % (code.split(\\"_\\")[0], code.split(\\"_\\", 1)[1].upper())"},"789":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    return languages.get(code, None)"},"file_total_time":0.010841608047485352,"file_total_time_percent":1.297898781419951},"translate/storage/pypo.py":{"1":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# -*- coding: utf-8 -*-"},"2":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#"},"3":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# Copyright 2002-2009 Zuza Software Foundation"},"4":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# Copyright 2013 F Wolff"},"5":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#"},"6":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# This file is part of the Translate Toolkit."},"7":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#"},"8":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# This program is free software; you can redistribute it and/or modify"},"9":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# it under the terms of the GNU General Public License as published by"},"10":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# the Free Software Foundation; either version 2 of the License, or"},"11":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# (at your option) any later version."},"12":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#"},"13":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# This program is distributed in the hope that it will be useful,"},"14":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# but WITHOUT ANY WARRANTY; without even the implied warranty of"},"15":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the"},"16":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# GNU General Public License for more details."},"17":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#"},"18":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# You should have received a copy of the GNU General Public License"},"19":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# along with this program; if not, see <http://www.gnu.org/licenses/>."},"20":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"21":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"\\"\\"\\"Classes that hold units of Gettext .po files (pounit) or entire"},"22":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"files (pofile)."},"23":{"hits":2,"time":0.0000782012939453125,"time_per_hit":0.00003910064697265625,"percent":0.00936183670102575,"line":"\\"\\"\\""},"24":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"25":{"hits":1,"time":0.00001621246337890625,"time_per_hit":0.00001621246337890625,"percent":0.0019408685843589968,"line":"import copy"},"26":{"hits":1,"time":0.000021696090698242188,"time_per_hit":0.000021696090698242188,"percent":0.0025973388408333633,"line":"import logging"},"27":{"hits":1,"time":0.000023126602172851562,"time_per_hit":0.000023126602172851562,"percent":0.0027685919512179806,"line":"import re"},"28":{"hits":1,"time":0.000020742416381835938,"time_per_hit":0.000020742416381835938,"percent":0.0024831701005769515,"line":"import six"},"29":{"hits":1,"time":0.000021457672119140625,"time_per_hit":0.000021457672119140625,"percent":0.0025687966557692604,"line":"import textwrap"},"30":{"hits":1,"time":0.00005984306335449219,"time_per_hit":0.00005984306335449219,"percent":0.007164088451089826,"line":"from io import BytesIO"},"31":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"32":{"hits":1,"time":0.0000972747802734375,"time_per_hit":0.0000972747802734375,"percent":0.01164521150615398,"line":"from translate.lang import data"},"33":{"hits":1,"time":0.00006937980651855469,"time_per_hit":0.00006937980651855469,"percent":0.008305775853653942,"line":"from translate.misc import quote"},"34":{"hits":1,"time":0.00004673004150390625,"time_per_hit":0.00004673004150390625,"percent":0.005594268272564167,"line":"from translate.misc.deprecation import deprecated"},"35":{"hits":1,"time":0.00004267692565917969,"time_per_hit":0.00004267692565917969,"percent":0.005109051126474418,"line":"from translate.misc.multistring import multistring"},"36":{"hits":1,"time":0.00005173683166503906,"time_per_hit":0.00005173683166503906,"percent":0.006193654158910328,"line":"from translate.storage import pocommon, poparser"},"37":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"38":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"39":{"hits":1,"time":0.00005054473876953125,"time_per_hit":0.00005054473876953125,"percent":0.006050943233589814,"line":"logger = logging.getLogger(__name__)"},"40":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"41":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"42":{"hits":1,"time":0.000016927719116210938,"time_per_hit":0.000016927719116210938,"percent":0.0020264951395513055,"line":"lsep = \\"\\\\n#: \\""},"43":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"\\"\\"\\"Separator for #: entries\\"\\"\\""},"44":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"45":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# general functions for quoting / unquoting po strings"},"46":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"47":{"hits":1,"time":0.000015974044799804688,"time_per_hit":0.000015974044799804688,"percent":0.0019123263992948938,"line":"po_unescape_map = {\\"\\\\\\\\r\\": \\"\\\\r\\", \\"\\\\\\\\t\\": \\"\\\\t\\", \'\\\\\\\\\\"\': \'\\"\', \'\\\\\\\\n\': \'\\\\n\', \'\\\\\\\\\\\\\\\\\': \'\\\\\\\\\'}"},"48":{"hits":8,"time":0.00006628036499023438,"time_per_hit":0.000008285045623779297,"percent":0.007934727447820604,"line":"po_escape_map = dict([(value, key) for (key, value) in po_unescape_map.items()])"},"49":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"50":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"51":{"hits":5,"time":0.000026941299438476562,"time_per_hit":0.000005388259887695313,"percent":0.003225266912243627,"line":"def splitlines(text):"},"52":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\"Split lines based on first newline char."},"53":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"54":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    Can not use univerzal newlines as they match any newline like"},"55":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    character inside text and that breaks on files with unix newlines"},"56":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    and LF chars inside comments."},"57":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"58":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    The code looks for first msgid and looks for newline used after it. This"},"59":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    should safely cover weird newlines used in comments or filenames, while"},"60":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    properly parsing po files with any newlines."},"61":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\""},"62":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    # Strip UTF-8 BOM if present. This file would not be accepted"},"63":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    # by gettext, but some editors might create it, so better handle it."},"64":{"hits":4,"time":0.00001049041748046875,"time_per_hit":0.0000026226043701171875,"percent":0.0012558561428205274,"line":"    if text[:3] == b\'\\\\xEF\\\\xBB\\\\xBF\':"},"65":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        text = text[3:]"},"66":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    # Find first newline"},"67":{"hits":4,"time":0.000008106231689453125,"time_per_hit":0.0000020265579223632812,"percent":0.0009704342921794984,"line":"    newline = b\'\\\\n\'"},"68":{"hits":4,"time":0.0000133514404296875,"time_per_hit":0.000003337860107421875,"percent":0.0015983623635897621,"line":"    msgid_pos = max(0, text.find(b\'msgid\'))"},"69":{"hits":36,"time":0.000052928924560546875,"time_per_hit":0.0000014702479044596355,"percent":0.006336365084230842,"line":"    for i, ch in enumerate(text[msgid_pos:]):"},"70":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        # Iteration over bytes yields numbers in Python 3"},"71":{"hits":36,"time":0.00004792213439941406,"time_per_hit":0.0000013311703999837239,"percent":0.005736979197884681,"line":"        if ch in (\'\\\\n\', 10):"},"72":{"hits":4,"time":0.0000059604644775390625,"time_per_hit":0.0000014901161193847656,"percent":0.0007135546266025724,"line":"            break"},"73":{"hits":32,"time":0.00004076957702636719,"time_per_hit":0.0000012740492820739746,"percent":0.004880713645961595,"line":"        if ch in (\'\\\\r\', 13):"},"74":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if text[msgid_pos + i + 1] in (\'\\\\n\', 10):"},"75":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                newline = b\'\\\\r\\\\n\'"},"76":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            else:"},"77":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                newline = b\'\\\\r\'"},"78":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            break"},"79":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"80":{"hits":77,"time":0.0001220703125,"time_per_hit":0.0000015853287337662339,"percent":0.014613598752820681,"line":"    return [x + newline for x in text.split(newline)]"},"81":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"82":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"83":{"hits":9,"time":0.00002956390380859375,"time_per_hit":0.0000032848782009548613,"percent":0.003539230947948759,"line":"def escapeforpo(line):"},"84":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\"Escapes a line for po format. assumes no \\\\n occurs in the line."},"85":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"86":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    :param line: unescaped text"},"87":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\""},"88":{"hits":8,"time":0.000016689300537109375,"time_per_hit":0.000002086162567138672,"percent":0.0019979529544872027,"line":"    special_locations = []"},"89":{"hits":48,"time":0.00008654594421386719,"time_per_hit":0.0000018030405044555664,"percent":0.01036081317826935,"line":"    for special_key in po_escape_map:"},"90":{"hits":40,"time":0.000217437744140625,"time_per_hit":0.000005435943603515625,"percent":0.02603047277846184,"line":"        special_locations.extend(quote.find_all(line, special_key))"},"91":{"hits":8,"time":0.000043392181396484375,"time_per_hit":0.000005424022674560547,"percent":0.0051946776816667265,"line":"    special_locations = sorted(dict.fromkeys(special_locations).keys())"},"92":{"hits":8,"time":0.0000133514404296875,"time_per_hit":0.0000016689300537109375,"percent":0.0015983623635897621,"line":"    escaped_line = \\"\\""},"93":{"hits":8,"time":0.000010967254638671875,"time_per_hit":0.0000013709068298339844,"percent":0.001312940512948733,"line":"    last_location = 0"},"94":{"hits":48,"time":0.00006580352783203125,"time_per_hit":0.0000013709068298339844,"percent":0.007877643077692398,"line":"    for location in special_locations:"},"95":{"hits":40,"time":0.00006604194641113281,"time_per_hit":0.0000016510486602783203,"percent":0.007906185262756502,"line":"        escaped_line += line[last_location:location]"},"96":{"hits":40,"time":0.00006771087646484375,"time_per_hit":0.0000016927719116210937,"percent":0.008105980558205222,"line":"        escaped_line += po_escape_map[line[location:location+1]]"},"97":{"hits":40,"time":0.000050067901611328125,"time_per_hit":0.0000012516975402832031,"percent":0.005993858863461607,"line":"        last_location = location + 1"},"98":{"hits":8,"time":0.000012874603271484375,"time_per_hit":0.0000016093254089355469,"percent":0.0015412779934615563,"line":"    escaped_line += line[last_location:]"},"99":{"hits":8,"time":0.000011682510375976562,"time_per_hit":0.0000014603137969970703,"percent":0.0013985670681410417,"line":"    return escaped_line"},"100":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"101":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"102":{"hits":17,"time":0.00003528594970703125,"time_per_hit":0.0000020756441004136028,"percent":0.004224243389487228,"line":"def unescapehandler(escape):"},"103":{"hits":16,"time":0.0000247955322265625,"time_per_hit":0.0000015497207641601562,"percent":0.002968387246666701,"line":"    return po_unescape_map.get(escape, escape)"},"104":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"105":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"106":{"hits":1,"time":0.000016927719116210938,"time_per_hit":0.000016927719116210938,"percent":0.0020264951395513055,"line":"wrapper = textwrap.TextWrapper("},"107":{"hits":1,"time":0.0000152587890625,"time_per_hit":0.0000152587890625,"percent":0.0018266998441025851,"line":"    width=77, replace_whitespace=False, expand_tabs=False,"},"108":{"hits":1,"time":0.00005173683166503906,"time_per_hit":0.00005173683166503906,"percent":0.006193654158910328,"line":"    drop_whitespace=False)"},"109":{"hits":1,"time":0.000016450881958007812,"time_per_hit":0.000016450881958007812,"percent":0.0019694107694230994,"line":"wrapper.wordsep_re = re.compile("},"110":{"hits":1,"time":0.00005125999450683594,"time_per_hit":0.00005125999450683594,"percent":0.006136569788782122,"line":"    r\'(\\\\s+|\'                                  # any whitespace"},"111":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    r\'[a-z0-9A-Z_-]+/|\'                       # nicely split long URLs"},"112":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    r\'\\\\w*\\\\\\\\.|\'                                # any escape should not be split"},"113":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    r\'[\\\\w\\\\!\\\\\'\\\\&\\\\.\\\\,\\\\?]+\\\\s+|\'                  # space should go with a word"},"114":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    r\'[^\\\\s\\\\w]*\\\\w+[a-zA-Z]-(?=\\\\w+[a-zA-Z])|\'   # hyphenated words"},"115":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    r\'(?<=[\\\\w\\\\!\\\\\\"\\\\\'\\\\&\\\\.\\\\,\\\\?])-{2,}(?=\\\\w))\')   # em-dash"},"116":{"hits":1,"time":0.00005173683166503906,"time_per_hit":0.00005173683166503906,"percent":0.006193654158910328,"line":"wrapper.wordsep_re_uni = re.compile(wrapper.wordsep_re.pattern, re.UNICODE)"},"117":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"118":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"119":{"hits":9,"time":0.00003647804260253906,"time_per_hit":0.0000040531158447265625,"percent":0.0043669543148077425,"line":"def quoteforpo(text, wrapper_obj=None):"},"120":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\"Quotes the given text for a PO file, returning quoted and escaped lines"},"121":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\""},"122":{"hits":8,"time":0.000017881393432617188,"time_per_hit":0.0000022351741790771484,"percent":0.002140663879807717,"line":"    if text is None:"},"123":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return []"},"124":{"hits":8,"time":0.000016450881958007812,"time_per_hit":0.0000020563602447509766,"percent":0.0019694107694230994,"line":"    if wrapper_obj is None:"},"125":{"hits":8,"time":0.000016450881958007812,"time_per_hit":0.0000020563602447509766,"percent":0.0019694107694230994,"line":"        wrapper_obj = wrapper"},"126":{"hits":8,"time":0.000052928924560546875,"time_per_hit":0.000006616115570068359,"percent":0.006336365084230842,"line":"    text = escapeforpo(text)"},"127":{"hits":8,"time":0.000018596649169921875,"time_per_hit":0.0000023245811462402344,"percent":0.0022262904350000257,"line":"    if wrapper_obj.width == -1:"},"128":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return [u\'\\"%s\\"\' % text]"},"129":{"hits":8,"time":0.0000286102294921875,"time_per_hit":0.0000035762786865234375,"percent":0.0034250622076923472,"line":"    lines = text.split(u\\"\\\\\\\\n\\")"},"130":{"hits":48,"time":0.00009751319885253906,"time_per_hit":0.000002031524976094564,"percent":0.011673753691218083,"line":"    for i, l in enumerate(lines[:-1]):"},"131":{"hits":40,"time":0.00006628036499023438,"time_per_hit":0.0000016570091247558594,"percent":0.007934727447820604,"line":"        lines[i] = l + u\\"\\\\\\\\n\\""},"132":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"133":{"hits":8,"time":0.0000171661376953125,"time_per_hit":0.0000021457672119140625,"percent":0.0020550373246154083,"line":"    polines = []"},"134":{"hits":8,"time":0.000016927719116210938,"time_per_hit":0.000002115964889526367,"percent":0.0020264951395513055,"line":"    len_lines = len(lines)"},"135":{"hits":8,"time":0.000017642974853515625,"time_per_hit":0.000002205371856689453,"percent":0.002112121694743614,"line":"    if len_lines > 2 or (len_lines == 2 and lines[1]) or len(lines[0]) > wrapper_obj.width - 6:"},"136":{"hits":4,"time":0.00000667572021484375,"time_per_hit":0.0000016689300537109375,"percent":0.0007991811817948811,"line":"        polines.append(u\'\\"\\"\')"},"137":{"hits":56,"time":0.00008440017700195312,"time_per_hit":0.00000150714601789202,"percent":0.010103933512692424,"line":"    for line in lines:"},"138":{"hits":48,"time":0.00024390220642089844,"time_per_hit":0.000005081295967102051,"percent":0.02919865532057726,"line":"        lns = wrapper_obj.wrap(line)"},"139":{"hits":88,"time":0.00014972686767578125,"time_per_hit":0.000001701441678133878,"percent":0.01792449222025662,"line":"        for ln in lns:"},"140":{"hits":40,"time":0.00007152557373046875,"time_per_hit":0.0000017881393432617188,"percent":0.008562655519230867,"line":"            polines.append(u\'\\"%s\\"\' % ln)"},"141":{"hits":8,"time":0.000011682510375976562,"time_per_hit":0.0000014603137969970703,"percent":0.0013985670681410417,"line":"    return polines"},"142":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"143":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"144":{"hits":1,"time":0.0000762939453125,"time_per_hit":0.0000762939453125,"percent":0.009133499220512925,"line":"@deprecated(\\"Use pypo.unescape() instead\\")"},"145":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"def extractpoline(line):"},"146":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\"Remove quote and unescape line from po file."},"147":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"148":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    :param line: a quoted line from a po file (msgid or msgstr)"},"149":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"150":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    .. deprecated:: 1.10"},"151":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"       Replaced by :func:`unescape`. :func:`extractpoline` is kept to allow"},"152":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"       tests of correctness, and in case of external users."},"153":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\""},"154":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    extracted = quote.extractwithoutquotes(line, \'\\"\', \'\\"\', \'\\\\\\\\\', includeescapes=unescapehandler)[0]"},"155":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    return extracted"},"156":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"157":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"158":{"hits":33,"time":0.00007081031799316406,"time_per_hit":0.0000021457672119140625,"percent":0.00847702896403856,"line":"def unescape(line):"},"159":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\"Unescape the given line."},"160":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"161":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    Quotes on either side should already have been removed."},"162":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\""},"163":{"hits":32,"time":0.00016307830810546875,"time_per_hit":0.0000050961971282958984,"percent":0.01952285458384638,"line":"    escape_places = quote.find_all(line, u\\"\\\\\\\\\\")"},"164":{"hits":32,"time":0.00005602836608886719,"time_per_hit":0.0000017508864402770996,"percent":0.00670741349006418,"line":"    if not escape_places:"},"165":{"hits":16,"time":0.000026226043701171875,"time_per_hit":0.0000016391277313232422,"percent":0.003139640357051318,"line":"        return line"},"166":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"167":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    # filter escaped escapes"},"168":{"hits":16,"time":0.00005650520324707031,"time_per_hit":0.0000035315752029418945,"percent":0.006764497860192386,"line":"    true_escape = False"},"169":{"hits":16,"time":0.000025033950805664062,"time_per_hit":0.000001564621925354004,"percent":0.0029969294317308036,"line":"    true_escape_places = []"},"170":{"hits":32,"time":0.000052928924560546875,"time_per_hit":0.0000016540288925170898,"percent":0.006336365084230842,"line":"    for escape_pos in escape_places:"},"171":{"hits":16,"time":0.000025510787963867188,"time_per_hit":0.0000015944242477416992,"percent":0.0030540138018590097,"line":"        if escape_pos - 1 in escape_places:"},"172":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            true_escape = not true_escape"},"173":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        else:"},"174":{"hits":16,"time":0.000023126602172851562,"time_per_hit":0.0000014454126358032227,"percent":0.0027685919512179806,"line":"            true_escape = True"},"175":{"hits":16,"time":0.00006723403930664062,"time_per_hit":0.000004202127456665039,"percent":0.008048896188077016,"line":"        if true_escape:"},"176":{"hits":16,"time":0.000023603439331054688,"time_per_hit":0.000001475214958190918,"percent":0.0028256763213461863,"line":"            true_escape_places.append(escape_pos)"},"177":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"178":{"hits":16,"time":0.000023365020751953125,"time_per_hit":0.0000014603137969970703,"percent":0.0027971341362820834,"line":"    extracted = u\\"\\""},"179":{"hits":16,"time":0.000023603439331054688,"time_per_hit":0.000001475214958190918,"percent":0.0028256763213461863,"line":"    lastpos = 0"},"180":{"hits":32,"time":0.0000438690185546875,"time_per_hit":0.0000013709068298339844,"percent":0.005251762051794932,"line":"    for pos in true_escape_places:"},"181":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        # everything leading up to the escape"},"182":{"hits":16,"time":0.000025510787963867188,"time_per_hit":0.0000015944242477416992,"percent":0.0030540138018590097,"line":"        extracted += line[lastpos:pos]"},"183":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        # the escaped sequence (consuming 2 characters)"},"184":{"hits":16,"time":0.000072479248046875,"time_per_hit":0.0000045299530029296875,"percent":0.00867682425948728,"line":"        extracted += unescapehandler(line[pos:pos+2])"},"185":{"hits":16,"time":0.000022411346435546875,"time_per_hit":0.0000014007091522216797,"percent":0.002682965396025672,"line":"        lastpos = pos+2"},"186":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"187":{"hits":16,"time":0.000022649765014648438,"time_per_hit":0.0000014156103134155273,"percent":0.002711507581089775,"line":"    extracted += line[lastpos:]"},"188":{"hits":16,"time":0.000019550323486328125,"time_per_hit":0.0000012218952178955078,"percent":0.0023404591752564374,"line":"    return extracted"},"189":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"190":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"191":{"hits":21,"time":0.00004220008850097656,"time_per_hit":0.000002009528023856027,"percent":0.005051966756346212,"line":"def unquotefrompo(postr):"},"192":{"hits":92,"time":0.0003266334533691406,"time_per_hit":0.0000035503636235776157,"percent":0.039102793537820965,"line":"    return u\\"\\".join([unescape(line[1:-1]) for line in postr])"},"193":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"194":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"195":{"hits":42,"time":0.00005555152893066406,"time_per_hit":0.0000013226554507300967,"percent":0.006650329119935974,"line":"def is_null(lst):"},"196":{"hits":41,"time":0.00006341934204101562,"time_per_hit":0.0000015468132205125763,"percent":0.00759222122705137,"line":"    return lst == [] or len(lst) == 1 and lst[0] == \'\\"\\"\'"},"197":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"198":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"199":{"hits":1,"time":0.0000152587890625,"time_per_hit":0.0000152587890625,"percent":0.0018266998441025851,"line":"def extractstr(string):"},"200":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    left = string.find(\'\\"\')"},"201":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    right = string.rfind(\'\\"\')"},"202":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    if right > -1:"},"203":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return string[left:right+1]"},"204":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    else:"},"205":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return string[left:] + \'\\"\'"},"206":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"207":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"208":{"hits":3,"time":0.00004935264587402344,"time_per_hit":0.000016450881958007812,"percent":0.005908232308269299,"line":"@six.python_2_unicode_compatible"},"209":{"hits":1,"time":0.0001232624053955078,"time_per_hit":0.0001232624053955078,"percent":0.014756309678141196,"line":"class pounit(pocommon.pounit):"},"210":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    # othercomments = []      #   # this is another comment"},"211":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    # automaticcomments = []  #   #. comment extracted from the source code"},"212":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    # sourcecomments = []     #   #: sourcefile.xxx:35"},"213":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    # prev_msgctxt = []       #   #| The previous values that msgctxt and msgid held"},"214":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    # prev_msgid = []         #"},"215":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    # prev_msgid_plural = []  #"},"216":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    # typecomments = []       #   #, fuzzy"},"217":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    # msgidcomments = []      #   _: within msgid"},"218":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    # msgctxt"},"219":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    # msgid = []"},"220":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    # msgstr = []"},"221":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"222":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    # Our homegrown way to indicate what must be copied in a shallow"},"223":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    # fashion"},"224":{"hits":1,"time":0.0000057220458984375,"time_per_hit":0.0000057220458984375,"percent":0.0006850124415384694,"line":"    __shallow__ = [\'_store\', \'wrapper\']"},"225":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"226":{"hits":21,"time":0.00003886222839355469,"time_per_hit":0.0000018505823044549851,"percent":0.004652376165448772,"line":"    def __init__(self, source=None, wrapper=None, **kwargs):"},"227":{"hits":20,"time":0.000043392181396484375,"time_per_hit":0.0000021696090698242187,"percent":0.0051946776816667265,"line":"        self.wrapper = wrapper"},"228":{"hits":20,"time":0.00003123283386230469,"time_per_hit":0.0000015616416931152343,"percent":0.003739026243397479,"line":"        self.obsolete = False"},"229":{"hits":20,"time":0.00009369850158691406,"time_per_hit":0.000004684925079345703,"percent":0.011217078730192438,"line":"        self._initallcomments(blankall=True)"},"230":{"hits":20,"time":0.0000286102294921875,"time_per_hit":0.000001430511474609375,"percent":0.0034250622076923472,"line":"        self.prev_msgctxt = []"},"231":{"hits":20,"time":0.000025987625122070312,"time_per_hit":0.0000012993812561035157,"percent":0.0031110981719872153,"line":"        self.prev_msgid = []"},"232":{"hits":20,"time":0.00002574920654296875,"time_per_hit":0.0000012874603271484376,"percent":0.0030825559869231125,"line":"        self.prev_msgid_plural = []"},"233":{"hits":20,"time":0.00003170967102050781,"time_per_hit":0.0000015854835510253907,"percent":0.003796110613525685,"line":"        self.msgctxt = []"},"234":{"hits":20,"time":0.000029802322387695312,"time_per_hit":0.0000014901161193847656,"percent":0.003567773133012862,"line":"        self.msgid = []"},"235":{"hits":20,"time":0.000025987625122070312,"time_per_hit":0.0000012993812561035157,"percent":0.0031110981719872153,"line":"        self.msgid_pluralcomments = []"},"236":{"hits":20,"time":0.000025510787963867188,"time_per_hit":0.0000012755393981933593,"percent":0.0030540138018590097,"line":"        self.msgid_plural = []"},"237":{"hits":20,"time":0.000023603439331054688,"time_per_hit":0.0000011801719665527344,"percent":0.0028256763213461863,"line":"        self.msgstr = []"},"238":{"hits":20,"time":0.0001087188720703125,"time_per_hit":0.000005435943603515625,"percent":0.01301523638923092,"line":"        pocommon.pounit.__init__(self, source)"},"239":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"240":{"hits":21,"time":0.00003528594970703125,"time_per_hit":0.0000016802833193824404,"percent":0.004224243389487228,"line":"    def _initallcomments(self, blankall=False):"},"241":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Initialises allcomments\\"\\"\\""},"242":{"hits":20,"time":0.00003123283386230469,"time_per_hit":0.0000015616416931152343,"percent":0.003739026243397479,"line":"        if blankall:"},"243":{"hits":20,"time":0.000025033950805664062,"time_per_hit":0.0000012516975402832031,"percent":0.0029969294317308036,"line":"            self.othercomments = []"},"244":{"hits":20,"time":0.000026226043701171875,"time_per_hit":0.0000013113021850585938,"percent":0.003139640357051318,"line":"            self.automaticcomments = []"},"245":{"hits":20,"time":0.00003170967102050781,"time_per_hit":0.0000015854835510253907,"percent":0.003796110613525685,"line":"            self.sourcecomments = []"},"246":{"hits":20,"time":0.000025510787963867188,"time_per_hit":0.0000012755393981933593,"percent":0.0030540138018590097,"line":"            self.typecomments = []"},"247":{"hits":20,"time":0.000029802322387695312,"time_per_hit":0.0000014901161193847656,"percent":0.003567773133012862,"line":"            self.msgidcomments = []"},"248":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"249":{"hits":1,"time":0.00001049041748046875,"time_per_hit":0.00001049041748046875,"percent":0.0012558561428205274,"line":"    def _get_all_comments(self):"},"250":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return [self.othercomments,"},"251":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                self.automaticcomments,"},"252":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                self.sourcecomments,"},"253":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                self.typecomments,"},"254":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                self.msgidcomments,"},"255":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                ]"},"256":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"257":{"hits":1,"time":0.000010728836059570312,"time_per_hit":0.000010728836059570312,"percent":0.0012843983278846302,"line":"    allcomments = property(_get_all_comments)"},"258":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"259":{"hits":1,"time":0.00033736228942871094,"time_per_hit":0.00033736228942871094,"percent":0.04038719186570559,"line":"    def _get_source_vars(self, msgid, msgid_plural):"},"260":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        singular = unquotefrompo(msgid)"},"261":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if self.hasplural():"},"262":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            pluralform = unquotefrompo(msgid_plural)"},"263":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            return multistring([singular, pluralform])"},"264":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return singular"},"265":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"266":{"hits":9,"time":0.00002384185791015625,"time_per_hit":0.0000026490953233506944,"percent":0.0028542185064102895,"line":"    def quote(self, text):"},"267":{"hits":8,"time":0.00006151199340820312,"time_per_hit":0.00000768899917602539,"percent":0.007363883746538546,"line":"        return quoteforpo(text, self.wrapper)"},"268":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"269":{"hits":5,"time":0.000018358230590820312,"time_per_hit":0.0000036716461181640626,"percent":0.002197748249935923,"line":"    def _set_source_vars(self, source):"},"270":{"hits":4,"time":0.00000667572021484375,"time_per_hit":0.0000016689300537109375,"percent":0.0007991811817948811,"line":"        msgid = None"},"271":{"hits":4,"time":0.0000073909759521484375,"time_per_hit":0.0000018477439880371094,"percent":0.0008848077369871897,"line":"        msgid_plural = None"},"272":{"hits":4,"time":0.00000762939453125,"time_per_hit":0.0000019073486328125,"percent":0.0009133499220512926,"line":"        if isinstance(source, bytes):"},"273":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            # Guessing utf-8, non-ascii encoded content should not reach this point"},"274":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            source = source.decode(\'utf-8\')"},"275":{"hits":4,"time":0.000009775161743164062,"time_per_hit":0.0000024437904357910156,"percent":0.0011702295876282187,"line":"        if isinstance(source, multistring):"},"276":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            source = source.strings"},"277":{"hits":4,"time":0.000009298324584960938,"time_per_hit":0.0000023245811462402344,"percent":0.0011131452175000129,"line":"        if isinstance(source, list):"},"278":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            msgid = self.quote(source[0])"},"279":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if len(source) > 1:"},"280":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                msgid_plural = self.quote(source[1])"},"281":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            else:"},"282":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                msgid_plural = []"},"283":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        else:"},"284":{"hits":4,"time":0.000031948089599609375,"time_per_hit":0.000007987022399902344,"percent":0.0038246527985897876,"line":"            msgid = self.quote(source)"},"285":{"hits":4,"time":0.000007152557373046875,"time_per_hit":0.0000017881393432617188,"percent":0.0008562655519230868,"line":"            msgid_plural = []"},"286":{"hits":4,"time":0.0000059604644775390625,"time_per_hit":0.0000014901161193847656,"percent":0.0007135546266025724,"line":"        return msgid, msgid_plural"},"287":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"288":{"hits":1,"time":0.000011205673217773438,"time_per_hit":0.000011205673217773438,"percent":0.001341482698012836,"line":"    @property"},"289":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def source(self):"},"290":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Returns the unescaped msgid\\"\\"\\""},"291":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return self._get_source_vars(self.msgid, self.msgid_plural)"},"292":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"293":{"hits":5,"time":0.00002193450927734375,"time_per_hit":0.00000438690185546875,"percent":0.002625881025897466,"line":"    @source.setter"},"294":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def source(self, source):"},"295":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Sets the msgid to the given (unescaped) value."},"296":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"297":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        :param source: an unescaped source string."},"298":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\""},"299":{"hits":4,"time":0.000015974044799804688,"time_per_hit":0.000003993511199951172,"percent":0.0019123263992948938,"line":"        self._rich_source = None"},"300":{"hits":4,"time":0.000029325485229492188,"time_per_hit":0.000007331371307373047,"percent":0.0035106887628846557,"line":"        self.msgid, self.msgid_plural = self._set_source_vars(source)"},"301":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"302":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    # Deprecated on 2.3.1"},"303":{"hits":1,"time":0.00004744529724121094,"time_per_hit":0.00004744529724121094,"percent":0.005679894827756476,"line":"    @deprecated(\\"Use `source` property instead\\")"},"304":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def getsource(self):"},"305":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return self.source"},"306":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"307":{"hits":1,"time":0.000013828277587890625,"time_per_hit":0.000013828277587890625,"percent":0.0016554467337179678,"line":"    def _get_prev_source(self):"},"308":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Returns the unescaped msgid\\"\\"\\""},"309":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return self._get_source_vars(self.prev_msgid, self.prev_msgid_plural)"},"310":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"311":{"hits":1,"time":0.00001049041748046875,"time_per_hit":0.00001049041748046875,"percent":0.0012558561428205274,"line":"    def _set_prev_source(self, source):"},"312":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Sets the msgid to the given (unescaped) value."},"313":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"314":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        :param source: an unescaped source string."},"315":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\""},"316":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        self.prev_msgid, self.prev_msgid_plural = self._set_source_vars(source)"},"317":{"hits":1,"time":0.000010728836059570312,"time_per_hit":0.000010728836059570312,"percent":0.0012843983278846302,"line":"    prev_source = property(_get_prev_source, _set_prev_source)"},"318":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"319":{"hits":17,"time":0.000034332275390625,"time_per_hit":0.0000020195456112132353,"percent":0.004110074649230817,"line":"    @property"},"320":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def target(self):"},"321":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Returns the unescaped msgstr\\"\\"\\""},"322":{"hits":16,"time":0.000028848648071289062,"time_per_hit":0.0000018030405044555664,"percent":0.00345360439275645,"line":"        if isinstance(self.msgstr, dict):"},"323":{"hits":1,"time":0.00002574920654296875,"time_per_hit":0.00002574920654296875,"percent":0.0030825559869231125,"line":"            return multistring(list(map(unquotefrompo, self.msgstr.values())))"},"324":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        else:"},"325":{"hits":15,"time":0.00006961822509765625,"time_per_hit":0.000004641215006510416,"percent":0.008334318038718045,"line":"            return unquotefrompo(self.msgstr)"},"326":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"327":{"hits":5,"time":0.00003528594970703125,"time_per_hit":0.00000705718994140625,"percent":0.004224243389487228,"line":"    @target.setter"},"328":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def target(self, target):"},"329":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Sets the msgstr to the given (unescaped) value\\"\\"\\""},"330":{"hits":4,"time":0.000009775161743164062,"time_per_hit":0.0000024437904357910156,"percent":0.0011702295876282187,"line":"        self._rich_target = None"},"331":{"hits":4,"time":0.000009775161743164062,"time_per_hit":0.0000024437904357910156,"percent":0.0011702295876282187,"line":"        if isinstance(target, bytes):"},"332":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            # Guessing utf-8, non-ascii encoded content should not reach this point"},"333":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            target = target.decode(\'utf-8\')"},"334":{"hits":4,"time":0.000025987625122070312,"time_per_hit":0.000006496906280517578,"percent":0.0031110981719872153,"line":"        if self.hasplural():"},"335":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if isinstance(target, multistring):"},"336":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                target = target.strings"},"337":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            elif isinstance(target, six.string_types):"},"338":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                target = [target]"},"339":{"hits":4,"time":0.000010013580322265625,"time_per_hit":0.0000025033950805664062,"percent":0.0011987717726923215,"line":"        elif isinstance(target, (dict, list)):"},"340":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if len(target) == 1:"},"341":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                target = target[0]"},"342":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            else:"},"343":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                raise ValueError(\\"po msgid element has no plural but msgstr has %d elements (%s)\\" % (len(target), target))"},"344":{"hits":4,"time":0.0000073909759521484375,"time_per_hit":0.0000018477439880371094,"percent":0.0008848077369871897,"line":"        templates = self.msgstr"},"345":{"hits":4,"time":0.0000069141387939453125,"time_per_hit":0.0000017285346984863281,"percent":0.0008277233668589839,"line":"        if isinstance(templates, list):"},"346":{"hits":4,"time":0.000007867813110351562,"time_per_hit":0.0000019669532775878906,"percent":0.0009418921071153955,"line":"            templates = {0: templates}"},"347":{"hits":4,"time":0.0000069141387939453125,"time_per_hit":0.0000017285346984863281,"percent":0.0008277233668589839,"line":"        if isinstance(target, list):"},"348":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            self.msgstr = dict([(i, self.quote(target[i])) for i in range(len(target))])"},"349":{"hits":4,"time":0.0000069141387939453125,"time_per_hit":0.0000017285346984863281,"percent":0.0008277233668589839,"line":"        elif isinstance(target, dict):"},"350":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            self.msgstr = dict([(i, self.quote(targetstring)) for i, targetstring in six.iteritems(target)])"},"351":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        else:"},"352":{"hits":4,"time":0.00002384185791015625,"time_per_hit":0.0000059604644775390625,"percent":0.0028542185064102895,"line":"            self.msgstr = self.quote(target)"},"353":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"354":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    # Deprecated on 2.3.1"},"355":{"hits":1,"time":0.0000514984130859375,"time_per_hit":0.0000514984130859375,"percent":0.006165111973846225,"line":"    @deprecated(\\"Use `target` property instead\\")"},"356":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def gettarget(self):"},"357":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return self.target"},"358":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"359":{"hits":1,"time":0.000011682510375976562,"time_per_hit":0.000011682510375976562,"percent":0.0013985670681410417,"line":"    def getalttrans(self):"},"360":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Return a list of alternate units."},"361":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"362":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        Previous msgid and current msgstr is combined to form a single"},"363":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        alternative unit."},"364":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\""},"365":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        prev_source = self.prev_source"},"366":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if prev_source and self.isfuzzy():"},"367":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            unit = type(self)(prev_source)"},"368":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            unit.target = self.target"},"369":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            # Already released versions of Virtaal (0.6.x) only supported XLIFF"},"370":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            # alternatives, and expect .xmlelement.get()."},"371":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            # This can be removed soon:"},"372":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            unit.xmlelement = dict()"},"373":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            return [unit]"},"374":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return []"},"375":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"376":{"hits":1,"time":0.00001049041748046875,"time_per_hit":0.00001049041748046875,"percent":0.0012558561428205274,"line":"    def getnotes(self, origin=None):"},"377":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Return comments based on origin value."},"378":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"379":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        :param origin: programmer, developer, source code, translator or None"},"380":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\""},"381":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if origin is None:"},"382":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            comments = u\\"\\".join([comment[2:] for comment in self.othercomments])"},"383":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            comments += u\\"\\".join([comment[3:] for comment in self.automaticcomments])"},"384":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        elif origin == \\"translator\\":"},"385":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            comments = u\\"\\".join([comment[2:] for comment in self.othercomments])"},"386":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        elif origin in [\\"programmer\\", \\"developer\\", \\"source code\\"]:"},"387":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            comments = u\\"\\".join([comment[3:] for comment in self.automaticcomments])"},"388":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        else:"},"389":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            raise ValueError(\\"Comment type not valid\\")"},"390":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        # Let\'s drop the last newline"},"391":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return comments[:-1]"},"392":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"393":{"hits":1,"time":0.000010251998901367188,"time_per_hit":0.000010251998901367188,"percent":0.0012273139577564244,"line":"    def addnote(self, text, origin=None, position=\\"append\\"):"},"394":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"This is modeled on the XLIFF method."},"395":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"396":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        See :meth:`translate.storage.xliff.xliffunit.addnote`"},"397":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\""},"398":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        # ignore empty strings and strings without non-space characters"},"399":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if not (text and text.strip()):"},"400":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            return"},"401":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        text = data.forceunicode(text)"},"402":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        commentlist = self.othercomments"},"403":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        linestart = \\"# \\""},"404":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        autocomments = False"},"405":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if origin in [\\"programmer\\", \\"developer\\", \\"source code\\"]:"},"406":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            autocomments = True"},"407":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            commentlist = self.automaticcomments"},"408":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            linestart = \\"#. \\""},"409":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        text = text.split(\\"\\\\n\\")"},"410":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        newcomments = [linestart + line + \\"\\\\n\\" for line in text]"},"411":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if position == \\"append\\":"},"412":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            newcomments = commentlist + newcomments"},"413":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        elif position == \\"prepend\\":"},"414":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            newcomments = newcomments + commentlist"},"415":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"416":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if autocomments:"},"417":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            self.automaticcomments = newcomments"},"418":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        else:"},"419":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            self.othercomments = newcomments"},"420":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"421":{"hits":1,"time":0.000010251998901367188,"time_per_hit":0.000010251998901367188,"percent":0.0012273139577564244,"line":"    def removenotes(self, origin=None):"},"422":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Remove all the translator\'s notes (other comments)\\"\\"\\""},"423":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        self.othercomments = []"},"424":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"425":{"hits":1,"time":0.000010967254638671875,"time_per_hit":0.000010967254638671875,"percent":0.001312940512948733,"line":"    def __deepcopy__(self, memo={}):"},"426":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        # Make an instance to serve as the copy"},"427":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        new_unit = self.__class__()"},"428":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        # We\'ll be testing membership frequently, so make a set from"},"429":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        # self.__shallow__"},"430":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        shallow = set(self.__shallow__)"},"431":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        # Make deep copies of all members which are not in shallow"},"432":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        for key, value in six.iteritems(self.__dict__):"},"433":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if key not in shallow:"},"434":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                setattr(new_unit, key, copy.deepcopy(value))"},"435":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        # Make shallow copies of all members which are in shallow"},"436":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        for key in set(shallow):"},"437":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            setattr(new_unit, key, getattr(self, key))"},"438":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        # Mark memo with ourself, so that we won\'t get deep copied"},"439":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        # again"},"440":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        memo[id(self)] = self"},"441":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        # Return our copied unit"},"442":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return new_unit"},"443":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"444":{"hits":1,"time":0.00001049041748046875,"time_per_hit":0.00001049041748046875,"percent":0.0012558561428205274,"line":"    def copy(self):"},"445":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return copy.deepcopy(self)"},"446":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"447":{"hits":4,"time":0.000014781951904296875,"time_per_hit":0.0000036954879760742188,"percent":0.0017696154739743795,"line":"    def _msgidlen(self):"},"448":{"hits":3,"time":0.0000133514404296875,"time_per_hit":0.000004450480143229167,"percent":0.0015983623635897621,"line":"        if self.hasplural():"},"449":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            return len(unquotefrompo(self.msgid)) + len(unquotefrompo(self.msgid_plural))"},"450":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        else:"},"451":{"hits":3,"time":0.00001430511474609375,"time_per_hit":0.00000476837158203125,"percent":0.0017125311038461736,"line":"            return len(unquotefrompo(self.msgid))"},"452":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"453":{"hits":2,"time":0.000012159347534179688,"time_per_hit":0.000006079673767089844,"percent":0.0014556514382692476,"line":"    def _msgstrlen(self):"},"454":{"hits":1,"time":0.0000035762786865234375,"time_per_hit":0.0000035762786865234375,"percent":0.0004281327759615434,"line":"        if isinstance(self.msgstr, dict):"},"455":{"hits":4,"time":0.000030279159545898438,"time_per_hit":0.000007569789886474609,"percent":0.0036248575031410674,"line":"            combinedstr = \\"\\\\n\\".join(filter(None, [unquotefrompo(msgstr) for msgstr in six.itervalues(self.msgstr)]))"},"456":{"hits":1,"time":0.0000019073486328125,"time_per_hit":0.0000019073486328125,"percent":0.00022833748051282314,"line":"            return len(combinedstr)"},"457":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        else:"},"458":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            return len(unquotefrompo(self.msgstr))"},"459":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"460":{"hits":1,"time":0.00001049041748046875,"time_per_hit":0.00001049041748046875,"percent":0.0012558561428205274,"line":"    def merge(self, otherpo, overwrite=False, comments=True, authoritative=False):"},"461":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Merges the otherpo (with the same msgid) into this one."},"462":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"463":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        Overwrite non-blank self.msgstr only if overwrite is True"},"464":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        merge comments only if comments is True"},"465":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\""},"466":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"467":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        def mergelists(list1, list2, split=False):"},"468":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            # Decode where necessary (either all bytestrings or all unicode)"},"469":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if six.text_type in [type(item) for item in list2] + [type(item) for item in list1]:"},"470":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                for position, item in enumerate(list1):"},"471":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    if isinstance(item, bytes):"},"472":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                        list1[position] = item.decode(\\"utf-8\\")"},"473":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                for position, item in enumerate(list2):"},"474":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    if isinstance(item, bytes):"},"475":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                        list2[position] = item.decode(\\"utf-8\\")"},"476":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"477":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            #Determine the newline style of list1"},"478":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            lineend = \\"\\""},"479":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if list1 and list1[0]:"},"480":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                for candidate in [\\"\\\\n\\", \\"\\\\r\\", \\"\\\\n\\\\r\\"]:"},"481":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    if list1[0].endswith(candidate):"},"482":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                        lineend = candidate"},"483":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                if not lineend:"},"484":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    lineend = \\"\\""},"485":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            else:"},"486":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                lineend = \\"\\\\n\\""},"487":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"488":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            #Split if directed to do so:"},"489":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if split:"},"490":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                splitlist1 = []"},"491":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                splitlist2 = []"},"492":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                prefix = \\"#\\""},"493":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                for item in list1:"},"494":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    splitlist1.extend(item.split()[1:])"},"495":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    prefix = item.split()[0]"},"496":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                for item in list2:"},"497":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    splitlist2.extend(item.split()[1:])"},"498":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    prefix = item.split()[0]"},"499":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                list1.extend([\\"%s %s%s\\" % (prefix, item, lineend) for item in splitlist2 if item not in splitlist1])"},"500":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            else:"},"501":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                #Normal merge, but conform to list1 newline style"},"502":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                if list1 != list2:"},"503":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    for item in list2:"},"504":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                        if lineend:"},"505":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                            item = item.rstrip() + lineend"},"506":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                        # avoid duplicate comment lines (this might cause some problems)"},"507":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                        if item not in list1 or len(item) < 5:"},"508":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                            list1.append(item)"},"509":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if not isinstance(otherpo, pounit):"},"510":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            super(pounit, self).merge(otherpo, overwrite, comments)"},"511":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            return"},"512":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if comments:"},"513":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            mergelists(self.othercomments, otherpo.othercomments)"},"514":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            mergelists(self.typecomments, otherpo.typecomments)"},"515":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if not authoritative:"},"516":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                # We don\'t bring across otherpo.automaticcomments as we"},"517":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                # consider ourself to be the the authority.  Same applies"},"518":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                # to otherpo.msgidcomments"},"519":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                mergelists(self.automaticcomments, otherpo.automaticcomments)"},"520":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                mergelists(self.msgidcomments, otherpo.msgidcomments)"},"521":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                mergelists(self.sourcecomments, otherpo.sourcecomments, split=True)"},"522":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if not self.istranslated() or overwrite:"},"523":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            # Remove kde-style comments from the translation (if any)."},"524":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if self._extract_msgidcomments(otherpo.target):"},"525":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                otherpo.target = otherpo.target.replace(\'_: \' + otherpo._extract_msgidcomments() + \'\\\\n\', \'\')"},"526":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            self.target = otherpo.target"},"527":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if self.source != otherpo.source or self.getcontext() != otherpo.getcontext():"},"528":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                self.markfuzzy()"},"529":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            else:"},"530":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                self.markfuzzy(otherpo.isfuzzy())"},"531":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        elif not otherpo.istranslated():"},"532":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if self.source != otherpo.source:"},"533":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                self.markfuzzy()"},"534":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        else:"},"535":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if self.target != otherpo.target:"},"536":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                self.markfuzzy()"},"537":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"538":{"hits":15,"time":0.000029087066650390625,"time_per_hit":0.0000019391377766927082,"percent":0.003482146577820553,"line":"    def isheader(self):"},"539":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        #return (self._msgidlen() == 0) and (self._msgstrlen() > 0) and (len(self.msgidcomments) == 0)"},"540":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        #rewritten here for performance:"},"541":{"hits":14,"time":0.00006341934204101562,"time_per_hit":0.0000045299530029296875,"percent":0.00759222122705137,"line":"        return (is_null(self.msgid)"},"542":{"hits":8,"time":0.00003170967102050781,"time_per_hit":0.0000039637088775634766,"percent":0.003796110613525685,"line":"                and not is_null(self.msgstr)"},"543":{"hits":8,"time":0.000011920928955078125,"time_per_hit":0.0000014901161193847656,"percent":0.0014271092532051448,"line":"                and self.msgidcomments == []"},"544":{"hits":8,"time":0.00003337860107421875,"time_per_hit":0.000004172325134277344,"percent":0.003995905908974405,"line":"                and is_null(self.msgctxt))"},"545":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"546":{"hits":4,"time":0.000016450881958007812,"time_per_hit":0.000004112720489501953,"percent":0.0019694107694230994,"line":"    def isblank(self):"},"547":{"hits":3,"time":0.000014781951904296875,"time_per_hit":0.000004927317301432292,"percent":0.0017696154739743795,"line":"        if self.isheader() or len(self.msgidcomments):"},"548":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            return False"},"549":{"hits":3,"time":0.000015735626220703125,"time_per_hit":0.000005245208740234375,"percent":0.001883784214230791,"line":"        if (self._msgidlen() == 0) and (self._msgstrlen() == 0) and (is_null(self.msgctxt)):"},"550":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            return True"},"551":{"hits":3,"time":0.0000045299530029296875,"time_per_hit":0.0000015099843343098958,"percent":0.000542301516217955,"line":"        return False"},"552":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        # TODO: remove:"},"553":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        # Before, the equivalent of the following was the final return statement:"},"554":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        # return len(self.source.strip()) == 0"},"555":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"556":{"hits":33,"time":0.00005269050598144531,"time_per_hit":0.0000015966819994377368,"percent":0.00630782289916674,"line":"    def _extracttypecomment(self):"},"557":{"hits":32,"time":0.00005817413330078125,"time_per_hit":0.000001817941665649414,"percent":0.006964293155641106,"line":"        for tc in self.typecomments:"},"558":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            for flag in tc.split(\\",\\"):"},"559":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                value = flag.strip()"},"560":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                if not value or value == \'#\':"},"561":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    continue"},"562":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                yield value"},"563":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"564":{"hits":45,"time":0.000057220458984375,"time_per_hit":0.0000012715657552083333,"percent":0.0068501244153846945,"line":"    def hastypecomment(self, typecomment, parsed=None):"},"565":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Check whether the given type comment is present\\"\\"\\""},"566":{"hits":44,"time":0.000058650970458984375,"time_per_hit":0.000001332976601340554,"percent":0.007021377525769311,"line":"        if not self.typecomments:"},"567":{"hits":44,"time":0.0000553131103515625,"time_per_hit":0.0000012571161443536931,"percent":0.006621786934871871,"line":"            return False"},"568":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if not parsed:"},"569":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            parsed = self._extracttypecomment()"},"570":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return typecomment in parsed"},"571":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"572":{"hits":1,"time":0.000010251998901367188,"time_per_hit":0.000010251998901367188,"percent":0.0012273139577564244,"line":"    def hasmarkedcomment(self, commentmarker):"},"573":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Check whether the given comment marker is present."},"574":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"575":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        These should appear as::"},"576":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"577":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                # (commentmarker) ..."},"578":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\""},"579":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        commentmarker = \\"(%s)\\" % commentmarker"},"580":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        for comment in self.othercomments:"},"581":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if comment.replace(\\"#\\", \\"\\", 1).strip().startswith(commentmarker):"},"582":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                return True"},"583":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return False"},"584":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"585":{"hits":33,"time":0.00004792213439941406,"time_per_hit":0.0000014521858908913352,"percent":0.005736979197884681,"line":"    def settypecomment(self, typecomment, present=True):"},"586":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Alters whether a given typecomment is present\\"\\"\\""},"587":{"hits":32,"time":0.00018835067749023438,"time_per_hit":0.000005885958671569824,"percent":0.022548326200641285,"line":"        typecomments = list(self._extracttypecomment())"},"588":{"hits":32,"time":0.00014472007751464844,"time_per_hit":0.000004522502422332764,"percent":0.017325106333910455,"line":"        if self.hastypecomment(typecomment, typecomments) != present:"},"589":{"hits":4,"time":0.00000476837158203125,"time_per_hit":0.0000011920928955078125,"percent":0.0005708437012820578,"line":"            if present:"},"590":{"hits":4,"time":0.000016927719116210938,"time_per_hit":0.000004231929779052734,"percent":0.0020264951395513055,"line":"                typecomments.append(typecomment)"},"591":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            else:"},"592":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                typecomments.remove(typecomment)"},"593":{"hits":4,"time":0.00000667572021484375,"time_per_hit":0.0000016689300537109375,"percent":0.0007991811817948811,"line":"            if typecomments:"},"594":{"hits":4,"time":0.000006198883056640625,"time_per_hit":0.0000015497207641601562,"percent":0.0007420968116666752,"line":"                typecomments.sort()"},"595":{"hits":4,"time":0.000012874603271484375,"time_per_hit":0.0000032186508178710938,"percent":0.0015412779934615563,"line":"                self.typecomments = [\\"#, %s\\\\n\\" % \\", \\".join(typecomments)]"},"596":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            else:"},"597":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                self.typecomments = []"},"598":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"599":{"hits":1,"time":0.000010251998901367188,"time_per_hit":0.000010251998901367188,"percent":0.0012273139577564244,"line":"    def isfuzzy(self):"},"600":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return self.hastypecomment(\'fuzzy\')"},"601":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"602":{"hits":17,"time":0.00003337860107421875,"time_per_hit":0.0000019634471220128674,"percent":0.003995905908974405,"line":"    def markfuzzy(self, present=True):"},"603":{"hits":16,"time":0.000023365020751953125,"time_per_hit":0.0000014603137969970703,"percent":0.0027971341362820834,"line":"        if present:"},"604":{"hits":4,"time":0.00005125999450683594,"time_per_hit":0.000012814998626708984,"percent":0.006136569788782122,"line":"            self.set_state_n(self.STATE[self.S_FUZZY][0])"},"605":{"hits":12,"time":0.000087738037109375,"time_per_hit":0.000007311503092447917,"percent":0.010503524103589864,"line":"        elif self.hasplural() and not self._msgstrlen() or is_null(self.msgstr):"},"606":{"hits":4,"time":0.00002193450927734375,"time_per_hit":0.0000054836273193359375,"percent":0.002625881025897466,"line":"            self.set_state_n(self.STATE[self.S_UNTRANSLATED][0])"},"607":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        else:"},"608":{"hits":8,"time":0.000049591064453125,"time_per_hit":0.000006198883056640625,"percent":0.005936774493333402,"line":"            self.set_state_n(self.STATE[self.S_TRANSLATED][0])"},"609":{"hits":16,"time":0.00007176399230957031,"time_per_hit":0.0000044852495193481445,"percent":0.008591197704294971,"line":"        self._domarkfuzzy(present)"},"610":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"611":{"hits":33,"time":0.00005030632019042969,"time_per_hit":0.000001524433945164536,"percent":0.0060224010485257105,"line":"    def _domarkfuzzy(self, present=True):"},"612":{"hits":32,"time":0.00014662742614746094,"time_per_hit":0.000004582107067108154,"percent":0.01755344381442328,"line":"        self.settypecomment(\\"fuzzy\\", present)"},"613":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"614":{"hits":13,"time":0.000024557113647460938,"time_per_hit":0.0000018890087421123799,"percent":0.002939845061602598,"line":"    def infer_state(self):"},"615":{"hits":12,"time":0.00001811981201171875,"time_per_hit":0.0000015099843343098958,"percent":0.00216920606487182,"line":"        if self.obsolete:"},"616":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            self.makeobsolete()"},"617":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        else:"},"618":{"hits":12,"time":0.00009107589721679688,"time_per_hit":0.000007589658101399739,"percent":0.010903114694487305,"line":"            self.markfuzzy(self.hastypecomment(\'fuzzy\'))"},"619":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"620":{"hits":4,"time":0.000014543533325195312,"time_per_hit":0.000003635883331298828,"percent":0.0017410732889102764,"line":"    def isobsolete(self):"},"621":{"hits":3,"time":0.0000057220458984375,"time_per_hit":0.0000019073486328125,"percent":0.0006850124415384694,"line":"        return self.obsolete"},"622":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"623":{"hits":1,"time":0.000013113021850585938,"time_per_hit":0.000013113021850585938,"percent":0.001569820178525659,"line":"    def makeobsolete(self):"},"624":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Makes this unit obsolete\\"\\"\\""},"625":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        super(pounit, self).makeobsolete()"},"626":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        self.obsolete = True"},"627":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        self.sourcecomments = []"},"628":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        self.automaticcomments = []"},"629":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"630":{"hits":1,"time":0.00001049041748046875,"time_per_hit":0.00001049041748046875,"percent":0.0012558561428205274,"line":"    def resurrect(self):"},"631":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Makes an obsolete unit normal\\"\\"\\""},"632":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        super(pounit, self).resurrect()"},"633":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        self.obsolete = False"},"634":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"635":{"hits":36,"time":0.000056743621826171875,"time_per_hit":0.000001576211717393663,"percent":0.006793040045256489,"line":"    def hasplural(self):"},"636":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"returns whether this pounit contains plural strings...\\"\\"\\""},"637":{"hits":35,"time":0.00005340576171875,"time_per_hit":0.00000152587890625,"percent":0.0063934494543590485,"line":"        return len(self.msgid_plural) > 0"},"638":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"639":{"hits":1,"time":0.000010013580322265625,"time_per_hit":0.000010013580322265625,"percent":0.0011987717726923215,"line":"    def parse(self, src):"},"640":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return poparser.parse_unit(poparser.ParseState(splitlines(src), pounit), self)"},"641":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"642":{"hits":1,"time":0.000010251998901367188,"time_per_hit":0.000010251998901367188,"percent":0.0012273139577564244,"line":"    def _getmsgpartstr(self, partname, partlines, partcomments=\\"\\"):"},"643":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if isinstance(partlines, dict):"},"644":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            partkeys = sorted(partlines.keys())"},"645":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            return \\"\\".join([self._getmsgpartstr(\\"%s[%d]\\" % (partname, partkey), partlines[partkey], partcomments) for partkey in partkeys])"},"646":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        partstr = partname + \\" \\""},"647":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        partstartline = 0"},"648":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if len(partlines) > 0 and len(partcomments) == 0:"},"649":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            partstr += partlines[0]"},"650":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            partstartline = 1"},"651":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        elif len(partcomments) > 0:"},"652":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if len(partlines) > 0 and len(unquotefrompo(partlines[:1])) == 0:"},"653":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                # if there is a blank leader line, it must come before the comment"},"654":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                partstr += partlines[0] + \'\\\\n\'"},"655":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                # but if the whole string is blank, leave it in"},"656":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                if len(partlines) > 1:"},"657":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    partstartline += 1"},"658":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            else:"},"659":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                # All partcomments should start on a newline"},"660":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                partstr += \'\\"\\"\\\\n\'"},"661":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            # combine comments into one if more than one"},"662":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if len(partcomments) > 1:"},"663":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                combinedcomment = []"},"664":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                for comment in partcomments:"},"665":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    comment = unquotefrompo([comment])"},"666":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    if comment.startswith(\\"_:\\"):"},"667":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                        comment = comment[len(\\"_:\\"):]"},"668":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    if comment.endswith(\\"\\\\\\\\n\\"):"},"669":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                        comment = comment[:-len(\\"\\\\\\\\n\\")]"},"670":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    #Before we used to strip. Necessary in some cases?"},"671":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    combinedcomment.append(comment)"},"672":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                partcomments = self.quote(\\"_:%s\\" % \\"\\".join(combinedcomment))"},"673":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                # Strip heading empty line for multiline string, it was already added above"},"674":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                if partcomments[0] == \'\\"\\"\':"},"675":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    partcomments = partcomments[1:]"},"676":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            # comments first, no blank leader line needed"},"677":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            partstr += \\"\\\\n\\".join(partcomments)"},"678":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            partstr = quote.rstripeol(partstr)"},"679":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        else:"},"680":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            partstr += \'\\"\\"\'"},"681":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        partstr += \'\\\\n\'"},"682":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        # add the rest"},"683":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        previous = None"},"684":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        for partline in partlines[partstartline:]:"},"685":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            # Avoid duplicate empty lines"},"686":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if previous == \'\\"\\"\' and partline == \'\\"\\"\':"},"687":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                continue"},"688":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            previous = partline"},"689":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            partstr += partline + \'\\\\n\'"},"690":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return partstr"},"691":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"692":{"hits":1,"time":0.000010728836059570312,"time_per_hit":0.000010728836059570312,"percent":0.0012843983278846302,"line":"    def __str__(self):"},"693":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Convert to a string.\\"\\"\\""},"694":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return self._getoutput()"},"695":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"696":{"hits":1,"time":0.00001049041748046875,"time_per_hit":0.00001049041748046875,"percent":0.0012558561428205274,"line":"    def _getoutput(self):"},"697":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"return this po element as a string\\"\\"\\""},"698":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"699":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        def add_prev_msgid_lines(lines, prefix, header, var):"},"700":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if len(var) > 0:"},"701":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                lines.append(\\"%s %s %s\\\\n\\" % (prefix, header, var[0]))"},"702":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                lines.extend(\\"%s %s\\\\n\\" % (prefix, line) for line in var[1:])"},"703":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"704":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        def add_prev_msgid_info(lines, prefix):"},"705":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            add_prev_msgid_lines(lines, prefix, \'msgctxt\', self.prev_msgctxt)"},"706":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            add_prev_msgid_lines(lines, prefix, \'msgid\', self.prev_msgid)"},"707":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            add_prev_msgid_lines(lines, prefix, \'msgid_plural\', self.prev_msgid_plural)"},"708":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"709":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        lines = []"},"710":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        lines.extend(self.othercomments)"},"711":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if self.isobsolete():"},"712":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            lines.extend(self.typecomments)"},"713":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            obsoletelines = []"},"714":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            add_prev_msgid_info(obsoletelines, prefix=\\"#~|\\")"},"715":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if self.msgctxt:"},"716":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                obsoletelines.append(self._getmsgpartstr(\\"#~ msgctxt\\", self.msgctxt))"},"717":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            obsoletelines.append(self._getmsgpartstr(\\"#~ msgid\\", self.msgid, self.msgidcomments))"},"718":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if self.msgid_plural or self.msgid_pluralcomments:"},"719":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                obsoletelines.append(self._getmsgpartstr(\\"#~ msgid_plural\\", self.msgid_plural, self.msgid_pluralcomments))"},"720":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            obsoletelines.append(self._getmsgpartstr(\\"#~ msgstr\\", self.msgstr))"},"721":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            for index, obsoleteline in enumerate(obsoletelines):"},"722":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                # We need to account for a multiline msgid or msgstr here"},"723":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                obsoletelines[index] = obsoleteline.replace(\'\\\\n\\"\', \'\\\\n#~ \\"\')"},"724":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            lines.extend(obsoletelines)"},"725":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            return u\\"\\".join(lines)"},"726":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        # if there\'s no msgid don\'t do msgid and string, unless we\'re the"},"727":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        # header this will also discard any comments other than plain"},"728":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        # othercomments..."},"729":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if is_null(self.msgid):"},"730":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if not (self.isheader() or self.getcontext() or self.sourcecomments):"},"731":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                return u\\"\\".join(lines)"},"732":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        lines.extend(self.automaticcomments)"},"733":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        lines.extend(self.sourcecomments)"},"734":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        lines.extend(self.typecomments)"},"735":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        add_prev_msgid_info(lines, prefix=\\"#|\\")"},"736":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if self.msgctxt:"},"737":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            lines.append(self._getmsgpartstr(u\\"msgctxt\\", self.msgctxt))"},"738":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        lines.append(self._getmsgpartstr(u\\"msgid\\", self.msgid, self.msgidcomments))"},"739":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if self.msgid_plural or self.msgid_pluralcomments:"},"740":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            lines.append(self._getmsgpartstr(u\\"msgid_plural\\", self.msgid_plural, self.msgid_pluralcomments))"},"741":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        lines.append(self._getmsgpartstr(u\\"msgstr\\", self.msgstr))"},"742":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        postr = u\\"\\".join(lines)"},"743":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return postr"},"744":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"745":{"hits":1,"time":0.000010013580322265625,"time_per_hit":0.000010013580322265625,"percent":0.0011987717726923215,"line":"    def getlocations(self):"},"746":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Get a list of locations from sourcecomments in the PO unit"},"747":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"748":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        rtype: List"},"749":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return: A list of the locations with \'#: \' stripped"},"750":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"751":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\""},"752":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        locations = []"},"753":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        for sourcecomment in self.sourcecomments:"},"754":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            locations += quote.rstripeol(sourcecomment)[3:].split()"},"755":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        for i, loc in enumerate(locations):"},"756":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            locations[i] = pocommon.unquote_plus(loc)"},"757":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return locations"},"758":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"759":{"hits":1,"time":0.000010251998901367188,"time_per_hit":0.000010251998901367188,"percent":0.0012273139577564244,"line":"    def addlocation(self, location):"},"760":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Add a location to sourcecomments in the PO unit"},"761":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"762":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        :param location: Text location e.g. \'file.c:23\' does not include #:"},"763":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        :type location: String"},"764":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"765":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\""},"766":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        location = data.forceunicode(location)"},"767":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        location = pocommon.quote_plus(location)"},"768":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        self.sourcecomments.append(\\"#: %s\\\\n\\" % location)"},"769":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"770":{"hits":1,"time":0.000009775161743164062,"time_per_hit":0.000009775161743164062,"percent":0.0011702295876282187,"line":"    def _extract_msgidcomments(self, text=None):"},"771":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Extract KDE style msgid comments from the unit."},"772":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"773":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        :rtype: String"},"774":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        :return: Returns the extracted msgidcomments found in this"},"775":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                 unit\'s msgid."},"776":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\""},"777":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"778":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if not text:"},"779":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            text = unquotefrompo(self.msgidcomments)"},"780":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return text.split(\'\\\\n\')[0].replace(\'_: \', \'\', 1)"},"781":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"782":{"hits":1,"time":0.000010251998901367188,"time_per_hit":0.000010251998901367188,"percent":0.0012273139577564244,"line":"    def setmsgidcomment(self, msgidcomment):"},"783":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if msgidcomment:"},"784":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            self.msgidcomments = [\'\\"_: %s\\\\\\\\n\\"\' % msgidcomment]"},"785":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        else:"},"786":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            self.msgidcomments = []"},"787":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"788":{"hits":1,"time":0.00001049041748046875,"time_per_hit":0.00001049041748046875,"percent":0.0012558561428205274,"line":"    msgidcomment = property(_extract_msgidcomments, setmsgidcomment)"},"789":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"790":{"hits":1,"time":0.000010251998901367188,"time_per_hit":0.000010251998901367188,"percent":0.0012273139577564244,"line":"    def getcontext(self):"},"791":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Get the message context.\\"\\"\\""},"792":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return unquotefrompo(self.msgctxt) + self._extract_msgidcomments()"},"793":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"794":{"hits":1,"time":0.000010013580322265625,"time_per_hit":0.000010013580322265625,"percent":0.0011987717726923215,"line":"    def setcontext(self, context):"},"795":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        context = data.forceunicode(context)"},"796":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        self.msgctxt = self.quote(context)"},"797":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"798":{"hits":1,"time":0.000011682510375976562,"time_per_hit":0.000011682510375976562,"percent":0.0013985670681410417,"line":"    def getid(self):"},"799":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Returns a unique identifier for this unit.\\"\\"\\""},"800":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        context = self.getcontext()"},"801":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        # Gettext does not consider the plural to determine duplicates, only"},"802":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        # the msgid. For generation of .mo files, we might want to use this"},"803":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        # code to generate the entry for the hash table, but for now, it is"},"804":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        # commented out for conformance to gettext."},"805":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#        id = \'\\\\0\'.join(self.source.strings)"},"806":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        id = self.source"},"807":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if self.msgidcomments:"},"808":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            id = u\\"_: %s\\\\n%s\\" % (context, id)"},"809":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        elif context:"},"810":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            id = u\\"%s\\\\04%s\\" % (context, id)"},"811":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return id"},"812":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"813":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"814":{"hits":3,"time":0.00010824203491210938,"time_per_hit":0.00003608067830403646,"percent":0.012958152019102713,"line":"class pofile(pocommon.pofile):"},"815":{"hits":1,"time":0.00000286102294921875,"time_per_hit":0.00000286102294921875,"percent":0.0003425062207692347,"line":"    \\"\\"\\"A .po file containing various units\\"\\"\\""},"816":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"817":{"hits":1,"time":0.000005245208740234375,"time_per_hit":0.000005245208740234375,"percent":0.0006279280714102637,"line":"    UnitClass = pounit"},"818":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"819":{"hits":5,"time":0.0000171661376953125,"time_per_hit":0.0000034332275390625,"percent":0.0020550373246154083,"line":"    def __init__(self, inputfile=None, width=None, **kwargs):"},"820":{"hits":4,"time":0.00007939338684082031,"time_per_hit":0.000019848346710205078,"percent":0.009504547626346263,"line":"        self.wrapper = copy.copy(wrapper)"},"821":{"hits":4,"time":0.000009059906005859375,"time_per_hit":0.0000022649765014648438,"percent":0.00108460303243591,"line":"        if width is not None:"},"822":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            self.wrapper.width = width"},"823":{"hits":4,"time":0.00004887580871582031,"time_per_hit":0.000012218952178955078,"percent":0.005851147938141094,"line":"        super(pofile, self).__init__(inputfile, **kwargs)"},"824":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"825":{"hits":17,"time":0.000021457672119140625,"time_per_hit":0.000001262216007008272,"percent":0.0025687966557692604,"line":"    def create_unit(self):"},"826":{"hits":16,"time":0.00008630752563476562,"time_per_hit":0.0000053942203521728516,"percent":0.010332270993205248,"line":"        return self.UnitClass(wrapper=self.wrapper)"},"827":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"828":{"hits":5,"time":0.000009059906005859375,"time_per_hit":0.000001811981201171875,"percent":0.00108460303243591,"line":"    def parse(self, input):"},"829":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Parses the given file or file source string.\\"\\"\\""},"830":{"hits":4,"time":0.000010967254638671875,"time_per_hit":0.0000027418136596679688,"percent":0.001312940512948733,"line":"        if hasattr(input, \'name\'):"},"831":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            self.filename = input.name"},"832":{"hits":4,"time":0.000008106231689453125,"time_per_hit":0.0000020265579223632812,"percent":0.0009704342921794984,"line":"        elif not getattr(self, \'filename\', \'\'):"},"833":{"hits":4,"time":0.0000059604644775390625,"time_per_hit":0.0000014901161193847656,"percent":0.0007135546266025724,"line":"            self.filename = \'\'"},"834":{"hits":4,"time":0.00000667572021484375,"time_per_hit":0.0000016689300537109375,"percent":0.0007991811817948811,"line":"        if not isinstance(input, bytes):"},"835":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            input = input.read()"},"836":{"hits":4,"time":0.000029325485229492188,"time_per_hit":0.000007331371307373047,"percent":0.0035106887628846557,"line":"        input = iter(splitlines(input))"},"837":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        # clear units to get rid of automatically generated headers before parsing"},"838":{"hits":4,"time":0.00001049041748046875,"time_per_hit":0.0000026226043701171875,"percent":0.0012558561428205274,"line":"        self.units = []"},"839":{"hits":4,"time":0.00006222724914550781,"time_per_hit":0.000015556812286376953,"percent":0.007449510301730855,"line":"        poparser.parse_units(poparser.ParseState(input, self.create_unit), self)"},"840":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"841":{"hits":1,"time":0.0000030994415283203125,"time_per_hit":0.0000030994415283203125,"percent":0.0003710484058333376,"line":"    def removeduplicates(self, duplicatestyle=\\"merge\\"):"},"842":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Make sure each msgid is unique ; merge comments etc from"},"843":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        duplicates into original"},"844":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\""},"845":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        # TODO: can we handle consecutive calls to removeduplicates()? What"},"846":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        # about files already containing msgctxt? - test"},"847":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        id_dict = {}"},"848":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        uniqueunits = []"},"849":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        # TODO: this is using a list as the pos aren\'t hashable, but this is slow."},"850":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        # probably not used frequently enough to worry about it, though."},"851":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        markedpos = []"},"852":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"853":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        def addcomment(thepo):"},"854":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            thepo.msgidcomments.append(\'\\"_: %s\\\\\\\\n\\"\' % \\" \\".join(thepo.getlocations()))"},"855":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            markedpos.append(thepo)"},"856":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        for thepo in self.units:"},"857":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            id = thepo.getid()"},"858":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if thepo.isheader() and not thepo.getlocations():"},"859":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                # header msgids shouldn\'t be merged..."},"860":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                uniqueunits.append(thepo)"},"861":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            elif id in id_dict:"},"862":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                if duplicatestyle == \\"merge\\":"},"863":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    if id:"},"864":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                        id_dict[id].merge(thepo)"},"865":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    else:"},"866":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                        addcomment(thepo)"},"867":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                        uniqueunits.append(thepo)"},"868":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                elif duplicatestyle == \\"msgctxt\\":"},"869":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    origpo = id_dict[id]"},"870":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    if origpo not in markedpos and id:"},"871":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                        # if it doesn\'t have an id, we already added msgctxt"},"872":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                        origpo.msgctxt.append(\'\\"%s\\"\' % escapeforpo(\\" \\".join(origpo.getlocations())))"},"873":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                        markedpos.append(thepo)"},"874":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    thepo.msgctxt.append(\'\\"%s\\"\' % escapeforpo(\\" \\".join(thepo.getlocations())))"},"875":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    if not thepo.msgctxt == id_dict[id].msgctxt:"},"876":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                        uniqueunits.append(thepo)"},"877":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    else:"},"878":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                        logger.warning("},"879":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                            \\"Duplicate unit found with msgctx of \'%s\' and source \'%s\'\\","},"880":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                            thepo.msgctxt,"},"881":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                            thepo.source)"},"882":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            else:"},"883":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                if not id:"},"884":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    if duplicatestyle == \\"merge\\":"},"885":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                        addcomment(thepo)"},"886":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    else:"},"887":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                        thepo.msgctxt.append(\'\\"%s\\"\' % escapeforpo(\\" \\".join(thepo.getlocations())))"},"888":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                id_dict[id] = thepo"},"889":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                uniqueunits.append(thepo)"},"890":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        self.units = uniqueunits"},"891":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"892":{"hits":1,"time":0.000003337860107421875,"time_per_hit":0.000003337860107421875,"percent":0.00039959059089744053,"line":"    def serialize(self, out):"},"893":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Write to file\\"\\"\\""},"894":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        at_start = True"},"895":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        try:"},"896":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            for unit in self.units:"},"897":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                if not at_start:"},"898":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    out.write(b\'\\\\n\')"},"899":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                else:"},"900":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    at_start = False"},"901":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                out.write(unit._getoutput().encode(self.encoding))"},"902":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        except UnicodeEncodeError as e:"},"903":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if self.encoding == \'utf-8\':"},"904":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                raise"},"905":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            self.updateheader(add=True, Content_Type=\\"text/plain; charset=UTF-8\\")"},"906":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            self.encoding = \\"utf-8\\""},"907":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            out.seek(0)"},"908":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            self.serialize(out)"},"909":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"910":{"hits":1,"time":0.00000286102294921875,"time_per_hit":0.00000286102294921875,"percent":0.0003425062207692347,"line":"    def encode(self, lines):"},"911":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"encode any unicode strings in lines in self.encoding\\"\\"\\""},"912":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        newlines = []"},"913":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        for line in lines:"},"914":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if isinstance(line, six.text_type):"},"915":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                line = line.encode(self.encoding)"},"916":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            newlines.append(line)"},"917":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return newlines"},"918":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"919":{"hits":1,"time":0.0000035762786865234375,"time_per_hit":0.0000035762786865234375,"percent":0.0004281327759615434,"line":"    def decode(self, lines):"},"920":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"decode any non-unicode strings in lines with self.encoding\\"\\"\\""},"921":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        newlines = []"},"922":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        for line in lines:"},"923":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if isinstance(line, bytes):"},"924":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                try:"},"925":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    line = line.decode(self.encoding)"},"926":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                except UnicodeDecodeError as e:"},"927":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    raise UnicodeDecodeError(\\"Error decoding line with encoding %r: %s. Line is %r\\" %"},"928":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                                             (self.encoding, e, line))"},"929":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            newlines.append(line)"},"930":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return newlines"},"931":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"932":{"hits":1,"time":0.0000030994415283203125,"time_per_hit":0.0000030994415283203125,"percent":0.0003710484058333376,"line":"    def unit_iter(self):"},"933":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        for unit in self.units:"},"934":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if not (unit.isheader() or unit.isobsolete()):"},"935":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                yield unit"},"936":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"937":{"hits":13,"time":0.000018596649169921875,"time_per_hit":0.000001430511474609375,"percent":0.0022262904350000257,"line":"    def addunit(self, unit):"},"938":{"hits":12,"time":0.0000209808349609375,"time_per_hit":0.0000017484029134114583,"percent":0.002511712285641055,"line":"        unit.wrapper = self.wrapper"},"939":{"hits":12,"time":0.00006604194641113281,"time_per_hit":0.0000055034955342610674,"percent":0.007906185262756502,"line":"        super(pofile, self).addunit(unit)"},"file_total_time":0.009070396423339844,"file_total_time_percent":1.0858588885787306},"translate/storage/poparser.py":{"1":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# -*- coding: utf-8 -*-"},"2":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#"},"3":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# Copyright 2002-2007 Zuza Software Foundation"},"4":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# Copyright 2016 F Wolff"},"5":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#"},"6":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# This file is part of translate."},"7":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#"},"8":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# translate is free software; you can redistribute it and/or modify"},"9":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# it under the terms of the GNU General Public License as published by"},"10":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# the Free Software Foundation; either version 2 of the License, or"},"11":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# (at your option) any later version."},"12":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#"},"13":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# translate is distributed in the hope that it will be useful,"},"14":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# but WITHOUT ANY WARRANTY; without even the implied warranty of"},"15":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the"},"16":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# GNU General Public License for more details."},"17":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#"},"18":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# You should have received a copy of the GNU General Public License"},"19":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# along with this program; if not, see <http://www.gnu.org/licenses/>."},"20":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"21":{"hits":2,"time":0.000025510787963867188,"time_per_hit":0.000012755393981933594,"percent":0.0030540138018590097,"line":"import re"},"22":{"hits":1,"time":0.000004291534423828125,"time_per_hit":0.000004291534423828125,"percent":0.0005137593311538521,"line":"import six"},"23":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"24":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"25":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"\\"\\"\\""},"26":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"From the GNU gettext manual:"},"27":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"     WHITE-SPACE"},"28":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"     #  TRANSLATOR-COMMENTS"},"29":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"     #. AUTOMATIC-COMMENTS"},"30":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"     #| PREVIOUS MSGID                 (Gettext 0.16 - check if this is the correct position - not yet implemented)"},"31":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"     #: REFERENCE..."},"32":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"     #, FLAG..."},"33":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"     msgctxt CONTEXT                   (Gettext 0.15)"},"34":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"     msgid UNTRANSLATED-STRING"},"35":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"     msgstr TRANSLATED-STRING"},"36":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"\\"\\"\\""},"37":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"38":{"hits":1,"time":0.00000858306884765625,"time_per_hit":0.00000858306884765625,"percent":0.0010275186623077042,"line":"SINGLE_BYTE_ENCODING = \'iso-8859-1\'"},"39":{"hits":1,"time":0.000007152557373046875,"time_per_hit":0.000007152557373046875,"percent":0.0008562655519230868,"line":"isspace = six.text_type.isspace"},"40":{"hits":1,"time":0.000006198883056640625,"time_per_hit":0.000006198883056640625,"percent":0.0007420968116666752,"line":"find = six.text_type.find"},"41":{"hits":1,"time":0.000006198883056640625,"time_per_hit":0.000006198883056640625,"percent":0.0007420968116666752,"line":"rfind = six.text_type.rfind"},"42":{"hits":1,"time":0.0000059604644775390625,"time_per_hit":0.0000059604644775390625,"percent":0.0007135546266025724,"line":"startswith = six.text_type.startswith"},"43":{"hits":1,"time":0.000007867813110351562,"time_per_hit":0.000007867813110351562,"percent":0.0009418921071153955,"line":"append = list.append"},"44":{"hits":1,"time":0.00000762939453125,"time_per_hit":0.00000762939453125,"percent":0.0009133499220512926,"line":"decode = bytes.decode"},"45":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"46":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"47":{"hits":3,"time":0.00004863739013671875,"time_per_hit":0.00001621246337890625,"percent":0.00582260575307699,"line":"class ParseState(object):"},"48":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"49":{"hits":5,"time":0.00000858306884765625,"time_per_hit":0.00000171661376953125,"percent":0.0010275186623077042,"line":"    def __init__(self, input_iterator, UnitClass, encoding=SINGLE_BYTE_ENCODING):"},"50":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        # A single-byte encoding is first defined to be able to read the header"},"51":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        # without risking UnicodeDecodeErrors. As soon as the header is parsed,"},"52":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        # the encoding defined in the header is used for re-encoding the header"},"53":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        # and for decoding all further strings."},"54":{"hits":4,"time":0.000011682510375976562,"time_per_hit":0.0000029206275939941406,"percent":0.0013985670681410417,"line":"        self._input_iterator = input_iterator"},"55":{"hits":4,"time":0.0000064373016357421875,"time_per_hit":0.0000016093254089355469,"percent":0.0007706389967307781,"line":"        self.next_line = \'\'"},"56":{"hits":4,"time":0.0000057220458984375,"time_per_hit":0.000001430511474609375,"percent":0.0006850124415384694,"line":"        self.lineno = 0"},"57":{"hits":4,"time":0.0000054836273193359375,"time_per_hit":0.0000013709068298339844,"percent":0.0006564702564743665,"line":"        self.eof = False"},"58":{"hits":4,"time":0.0000057220458984375,"time_per_hit":0.000001430511474609375,"percent":0.0006850124415384694,"line":"        self.encoding = encoding"},"59":{"hits":4,"time":0.000023603439331054688,"time_per_hit":0.000005900859832763672,"percent":0.0028256763213461863,"line":"        self.read_line()"},"60":{"hits":4,"time":0.000007152557373046875,"time_per_hit":0.0000017881393432617188,"percent":0.0008562655519230868,"line":"        self.UnitClass = UnitClass"},"61":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"62":{"hits":29,"time":0.00002956390380859375,"time_per_hit":0.0000010194449589170258,"percent":0.003539230947948759,"line":"    def decode(self, string):"},"63":{"hits":28,"time":0.00003337860107421875,"time_per_hit":0.0000011920928955078125,"percent":0.003995905908974405,"line":"        if self.encoding is not None:"},"64":{"hits":28,"time":0.00004267692565917969,"time_per_hit":0.0000015241759163992746,"percent":0.005109051126474418,"line":"            return decode(string, self.encoding)"},"65":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        else:"},"66":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            return string"},"67":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"68":{"hits":54,"time":0.00007081031799316406,"time_per_hit":0.0000013113021850585938,"percent":0.00847702896403856,"line":"    def read_line(self):"},"69":{"hits":53,"time":0.00006914138793945312,"time_per_hit":0.000001304554489423644,"percent":0.00827723366858984,"line":"        current = self.next_line"},"70":{"hits":53,"time":0.00006246566772460938,"time_per_hit":0.0000011785975042379128,"percent":0.007478052486794958,"line":"        if self.eof:"},"71":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            return current"},"72":{"hits":53,"time":0.000058650970458984375,"time_per_hit":0.0000011066220841317807,"percent":0.007021377525769311,"line":"        try:"},"73":{"hits":53,"time":0.00007009506225585938,"time_per_hit":0.000001322548344450177,"percent":0.008391402408846251,"line":"            self.next_line = next(self._input_iterator)"},"74":{"hits":53,"time":0.000064849853515625,"time_per_hit":0.0000012235821418042452,"percent":0.007763474337435987,"line":"            self.lineno += 1"},"75":{"hits":65,"time":0.00009083747863769531,"time_per_hit":0.0000013974996713491586,"percent":0.010874572509423202,"line":"            while not self.eof and self.next_line.isspace():"},"76":{"hits":16,"time":0.000025033950805664062,"time_per_hit":0.000001564621925354004,"percent":0.0029969294317308036,"line":"                self.next_line = next(self._input_iterator)"},"77":{"hits":12,"time":0.000015497207641601562,"time_per_hit":0.0000012914339701334636,"percent":0.0018552420291666882,"line":"                self.lineno += 1"},"78":{"hits":4,"time":0.0000059604644775390625,"time_per_hit":0.0000014901161193847656,"percent":0.0007135546266025724,"line":"        except StopIteration:"},"79":{"hits":4,"time":0.0000057220458984375,"time_per_hit":0.000001430511474609375,"percent":0.0006850124415384694,"line":"            self.next_line = u\'\'"},"80":{"hits":4,"time":0.0000057220458984375,"time_per_hit":0.000001430511474609375,"percent":0.0006850124415384694,"line":"            self.eof = True"},"81":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        else:"},"82":{"hits":49,"time":0.00006842613220214844,"time_per_hit":0.000001396451677594866,"percent":0.008191607113397531,"line":"            if isinstance(self.next_line, bytes) and self.encoding is not None:"},"83":{"hits":49,"time":0.00008296966552734375,"time_per_hit":0.0000016932584801498724,"percent":0.009932680402307806,"line":"                self.next_line = decode(self.next_line, self.encoding)"},"84":{"hits":53,"time":0.00006556510925292969,"time_per_hit":0.0000012370775330741451,"percent":0.007849100892628295,"line":"        return current"},"85":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"86":{"hits":1,"time":0.0000021457672119140625,"time_per_hit":0.0000021457672119140625,"percent":0.00025687966557692604,"line":"    def new_input(self, _input):"},"87":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return ParseState(_input, self.UnitClass, self.encoding)"},"88":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"89":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"90":{"hits":1,"time":0.0000069141387939453125,"time_per_hit":0.0000069141387939453125,"percent":0.0008277233668589839,"line":"def read_prevmsgid_lines(parse_state):"},"91":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\"Read all the lines belonging starting with #|. These lines contain the"},"92":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    previous msgid and msgctxt info. We strip away the leading \'#| \' and read"},"93":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    until we stop seeing #|."},"94":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\""},"95":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    prevmsgid_lines = []"},"96":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    next_line = parse_state.next_line"},"97":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    while startswith(next_line, \'#| \') or startswith(next_line, \'| \'):"},"98":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        content = parse_state.read_line()"},"99":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        prefix_len = content.index(\'| \')"},"100":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        content = content[prefix_len+2:]"},"101":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        append(prevmsgid_lines, content)"},"102":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        next_line = parse_state.next_line"},"103":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    return prevmsgid_lines"},"104":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"105":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"106":{"hits":1,"time":0.000006198883056640625,"time_per_hit":0.000006198883056640625,"percent":0.0007420968116666752,"line":"def parse_prev_msgctxt(parse_state, unit):"},"107":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    parse_message(parse_state, \'msgctxt\', 7, unit.prev_msgctxt)"},"108":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    return len(unit.prev_msgctxt) > 0"},"109":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"110":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"111":{"hits":1,"time":0.0000073909759521484375,"time_per_hit":0.0000073909759521484375,"percent":0.0008848077369871897,"line":"def parse_prev_msgid(parse_state, unit):"},"112":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    parse_message(parse_state, \'msgid\', 5, unit.prev_msgid)"},"113":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    return len(unit.prev_msgid) > 0"},"114":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"115":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"116":{"hits":1,"time":0.0000069141387939453125,"time_per_hit":0.0000069141387939453125,"percent":0.0008277233668589839,"line":"def parse_prev_msgid_plural(parse_state, unit):"},"117":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    parse_message(parse_state, \'msgid_plural\', 12, unit.prev_msgid_plural)"},"118":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    return len(unit.prev_msgid_plural) > 0"},"119":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"120":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"121":{"hits":17,"time":0.00003314018249511719,"time_per_hit":0.0000019494224997127756,"percent":0.003967363723910302,"line":"def parse_comment(parse_state, unit):"},"122":{"hits":16,"time":0.00004172325134277344,"time_per_hit":0.00000260770320892334,"percent":0.004994882386218006,"line":"    next_line = parse_state.next_line.lstrip()"},"123":{"hits":16,"time":0.00003552436828613281,"time_per_hit":0.0000022202730178833008,"percent":0.004252785574551331,"line":"    if len(next_line) > 0 and next_line[0] in (\'#\', \'|\'):"},"124":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        next_char = next_line[1]"},"125":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if next_char == \'.\':"},"126":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            append(unit.automaticcomments, next_line)"},"127":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        elif next_line[0] == \'|\' or next_char == \'|\':"},"128":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            # Read all the lines starting with #|"},"129":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            prevmsgid_lines = read_prevmsgid_lines(parse_state)"},"130":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            # Create a parse state object that holds these lines"},"131":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            ps = parse_state.new_input(iter(prevmsgid_lines))"},"132":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            # Parse the msgctxt if any"},"133":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            parse_prev_msgctxt(ps, unit)"},"134":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            # Parse the msgid if any"},"135":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            parse_prev_msgid(ps, unit)"},"136":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            # Parse the msgid_plural if any"},"137":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            parse_prev_msgid_plural(ps, unit)"},"138":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            return parse_state.next_line"},"139":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        elif next_char == \':\':"},"140":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            append(unit.sourcecomments, next_line)"},"141":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        elif next_char == \',\':"},"142":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            append(unit.typecomments, next_line)"},"143":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        elif next_char == \'~\':"},"144":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            # Special case: we refuse to parse obsoletes: they are done"},"145":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            # elsewhere to ensure we reuse the normal unit parsing code"},"146":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            return None"},"147":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        else:"},"148":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            append(unit.othercomments, next_line)"},"149":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return parse_state.read_line()"},"150":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    else:"},"151":{"hits":16,"time":0.00002384185791015625,"time_per_hit":0.0000014901161193847656,"percent":0.0028542185064102895,"line":"        return None"},"152":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"153":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"154":{"hits":17,"time":0.00002574920654296875,"time_per_hit":0.0000015146592084099264,"percent":0.0030825559869231125,"line":"def parse_comments(parse_state, unit):"},"155":{"hits":16,"time":0.00007748603820800781,"time_per_hit":0.000004842877388000488,"percent":0.00927621014583344,"line":"    if not parse_comment(parse_state, unit):"},"156":{"hits":16,"time":0.000024318695068359375,"time_per_hit":0.000001519918441772461,"percent":0.002911302876538495,"line":"        return None"},"157":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    else:"},"158":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        while parse_comment(parse_state, unit):"},"159":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            pass"},"160":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return True"},"161":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"162":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"163":{"hits":17,"time":0.000028133392333984375,"time_per_hit":0.0000016549054314108456,"percent":0.0033679778375641416,"line":"def read_obsolete_lines(parse_state):"},"164":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\"Read all the lines belonging to the current unit if obsolete.\\"\\"\\""},"165":{"hits":16,"time":0.000024557113647460938,"time_per_hit":0.0000015348196029663086,"percent":0.002939845061602598,"line":"    obsolete_lines = []"},"166":{"hits":16,"time":0.00004172325134277344,"time_per_hit":0.00000260770320892334,"percent":0.004994882386218006,"line":"    next_line = parse_state.next_line"},"167":{"hits":16,"time":0.0000324249267578125,"time_per_hit":0.0000020265579223632812,"percent":0.0038817371687179937,"line":"    while startswith(next_line, \'#~\'):"},"168":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        content = parse_state.read_line()[2:].lstrip()"},"169":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        append(obsolete_lines, content)"},"170":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        next_line = parse_state.next_line"},"171":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if startswith(content, \'msgstr\'):"},"172":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            # now we saw a msgstr, so we need to become more conservative to"},"173":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            # avoid parsing into the following unit"},"174":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            while startswith(next_line, \'#~ \\"\') or startswith(next_line, \'#~ msgstr\'):"},"175":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                content = parse_state.read_line()[3:]"},"176":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                append(obsolete_lines, content)"},"177":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                next_line = parse_state.next_line"},"178":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            break"},"179":{"hits":16,"time":0.00002384185791015625,"time_per_hit":0.0000014901161193847656,"percent":0.0028542185064102895,"line":"    return obsolete_lines"},"180":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"181":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"182":{"hits":17,"time":0.000026226043701171875,"time_per_hit":0.0000015427084530101103,"percent":0.003139640357051318,"line":"def parse_obsolete(parse_state, unit):"},"183":{"hits":16,"time":0.00007176399230957031,"time_per_hit":0.0000044852495193481445,"percent":0.008591197704294971,"line":"    obsolete_lines = read_obsolete_lines(parse_state)"},"184":{"hits":16,"time":0.000022172927856445312,"time_per_hit":0.000001385807991027832,"percent":0.002654423210961569,"line":"    if obsolete_lines == []:"},"185":{"hits":16,"time":0.0000209808349609375,"time_per_hit":0.0000013113021850585938,"percent":0.002511712285641055,"line":"        return None"},"186":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    unit = parse_unit(parse_state.new_input(iter(obsolete_lines)), unit)"},"187":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    if unit is not None:"},"188":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        unit.makeobsolete()"},"189":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    return unit"},"190":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"191":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"192":{"hits":77,"time":0.00010156631469726562,"time_per_hit":0.0000013190430480164368,"percent":0.012158970837307832,"line":"def parse_quoted(parse_state, start_pos=0):"},"193":{"hits":76,"time":0.00010991096496582031,"time_per_hit":0.0000014461969074450041,"percent":0.013157947314551433,"line":"    line = parse_state.next_line"},"194":{"hits":76,"time":0.00011944770812988281,"time_per_hit":0.000001571680370130037,"percent":0.01429963471711555,"line":"    left = find(line, \'\\"\', start_pos)"},"195":{"hits":76,"time":0.00012111663818359375,"time_per_hit":0.0000015936399760999177,"percent":0.01449943001256427,"line":"    if left == start_pos or isspace(line[start_pos:left]):"},"196":{"hits":49,"time":0.000072479248046875,"time_per_hit":0.0000014791683274872448,"percent":0.00867682425948728,"line":"        right = rfind(line, \'\\"\')"},"197":{"hits":49,"time":0.00005936622619628906,"time_per_hit":0.0000012115556366589605,"percent":0.00710700408096162,"line":"        if left != right:"},"198":{"hits":49,"time":0.00021123886108398438,"time_per_hit":0.000004310997164979273,"percent":0.025288375966795163,"line":"            return parse_state.read_line()[left:right+1]"},"199":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        else:"},"200":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            # There is no terminating quote, so we append an extra quote, but"},"201":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            # we also ignore the newline at the end (therefore the -1)"},"202":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            return parse_state.read_line()[left:-1] + \'\\"\'"},"203":{"hits":27,"time":0.00003361701965332031,"time_per_hit":0.0000012450748019748264,"percent":0.004024448094038508,"line":"    return None"},"204":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"205":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"206":{"hits":3,"time":0.00001049041748046875,"time_per_hit":0.0000034968058268229165,"percent":0.0012558561428205274,"line":"def parse_msg_comment(parse_state, msg_comment_list, string):"},"207":{"hits":2,"time":0.00000667572021484375,"time_per_hit":0.000003337860107421875,"percent":0.0007991811817948811,"line":"    while string is not None:"},"208":{"hits":2,"time":0.000009775161743164062,"time_per_hit":0.000004887580871582031,"percent":0.0011702295876282187,"line":"        append(msg_comment_list, string)"},"209":{"hits":2,"time":0.0000040531158447265625,"time_per_hit":0.0000020265579223632812,"percent":0.0004852171460897492,"line":"        if find(string, \'\\\\\\\\n\') > -1:"},"210":{"hits":2,"time":0.000011682510375976562,"time_per_hit":0.000005841255187988281,"percent":0.0013985670681410417,"line":"            return parse_quoted(parse_state)"},"211":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        string = parse_quoted(parse_state)"},"212":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    return None"},"213":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"214":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"215":{"hits":28,"time":0.000042438507080078125,"time_per_hit":0.0000015156609671456472,"percent":0.005080508941410315,"line":"def parse_multiple_quoted(parse_state, msg_list, msg_comment_list, first_start_pos=0):"},"216":{"hits":27,"time":0.00011587142944335938,"time_per_hit":0.000004291534423828125,"percent":0.013871501941154007,"line":"    string = parse_quoted(parse_state, first_start_pos)"},"217":{"hits":76,"time":0.00009751319885253906,"time_per_hit":0.0000012830684059544614,"percent":0.011673753691218083,"line":"    while string is not None:"},"218":{"hits":49,"time":0.00006389617919921875,"time_per_hit":0.0000013040036571269132,"percent":0.007649305597179575,"line":"        if msg_comment_list is None or not startswith(string, \'\\"_:\'):"},"219":{"hits":47,"time":0.00006651878356933594,"time_per_hit":0.0000014152932674326795,"percent":0.007963269632884707,"line":"            append(msg_list, string)"},"220":{"hits":47,"time":0.00019598007202148438,"time_per_hit":0.000004169788766414561,"percent":0.02346167612269258,"line":"            string = parse_quoted(parse_state)"},"221":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        else:"},"222":{"hits":2,"time":0.000012874603271484375,"time_per_hit":0.0000064373016357421875,"percent":0.0015412779934615563,"line":"            string = parse_msg_comment(parse_state, msg_comment_list, string)"},"223":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"224":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"225":{"hits":47,"time":0.00006103515625,"time_per_hit":0.0000012986203457446808,"percent":0.0073067993764103405,"line":"def parse_message(parse_state, start_of_string, start_of_string_len, msg_list, msg_comment_list=None):"},"226":{"hits":46,"time":0.00007605552673339844,"time_per_hit":0.0000016533810159434443,"percent":0.009104957035448823,"line":"    if startswith(parse_state.next_line, start_of_string):"},"227":{"hits":27,"time":0.0001163482666015625,"time_per_hit":0.000004309195059317129,"percent":0.013928586311282212,"line":"        return parse_multiple_quoted(parse_state, msg_list, msg_comment_list, start_of_string_len)"},"228":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"229":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"230":{"hits":17,"time":0.00002384185791015625,"time_per_hit":0.0000014024622300091913,"percent":0.0028542185064102895,"line":"def parse_msgctxt(parse_state, unit):"},"231":{"hits":16,"time":0.00007367134094238281,"time_per_hit":0.000004604458808898926,"percent":0.008819535184807794,"line":"    parse_message(parse_state, \'msgctxt\', 7, unit.msgctxt)"},"232":{"hits":16,"time":0.000024080276489257812,"time_per_hit":0.0000015050172805786133,"percent":0.0028827606914743923,"line":"    return len(unit.msgctxt) > 0"},"233":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"234":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"235":{"hits":17,"time":0.000022649765014648438,"time_per_hit":0.0000013323391185087315,"percent":0.002711507581089775,"line":"def parse_msgid(parse_state, unit):"},"236":{"hits":16,"time":0.00006532669067382812,"time_per_hit":0.000004082918167114258,"percent":0.007820558707564193,"line":"    parse_message(parse_state, \'msgid\', 5, unit.msgid, unit.msgidcomments)"},"237":{"hits":16,"time":0.00003528594970703125,"time_per_hit":0.000002205371856689453,"percent":0.004224243389487228,"line":"    return len(unit.msgid) > 0 or len(unit.msgidcomments) > 0"},"238":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"239":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"240":{"hits":13,"time":0.00002288818359375,"time_per_hit":0.0000017606295072115386,"percent":0.002740049766153878,"line":"def parse_msgstr(parse_state, unit):"},"241":{"hits":12,"time":0.000048160552978515625,"time_per_hit":0.000004013379414876302,"percent":0.005765521382948785,"line":"    parse_message(parse_state, \'msgstr\', 6, unit.msgstr)"},"242":{"hits":12,"time":0.000017404556274414062,"time_per_hit":0.0000014503796895345051,"percent":0.002083579509679511,"line":"    return len(unit.msgstr) > 0"},"243":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"244":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"245":{"hits":2,"time":0.000007152557373046875,"time_per_hit":0.0000035762786865234375,"percent":0.0008562655519230868,"line":"def parse_msgid_plural(parse_state, unit):"},"246":{"hits":1,"time":0.000006198883056640625,"time_per_hit":0.000006198883056640625,"percent":0.0007420968116666752,"line":"    parse_message(parse_state, \'msgid_plural\', 12, unit.msgid_plural, unit.msgid_pluralcomments)"},"247":{"hits":1,"time":0.000008821487426757812,"time_per_hit":0.000008821487426757812,"percent":0.001056060847371807,"line":"    return len(unit.msgid_plural) > 0 or len(unit.msgid_pluralcomments) > 0"},"248":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"249":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"250":{"hits":1,"time":0.0000057220458984375,"time_per_hit":0.0000057220458984375,"percent":0.0006850124415384694,"line":"MSGSTR_ARRAY_ENTRY_LEN = len(\'msgstr[\')"},"251":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"252":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"253":{"hits":2,"time":0.000009298324584960938,"time_per_hit":0.000004649162292480469,"percent":0.0011131452175000129,"line":"def add_to_dict(msgstr_dict, line, right_bracket_pos, entry):"},"254":{"hits":1,"time":0.0000045299530029296875,"time_per_hit":0.0000045299530029296875,"percent":0.000542301516217955,"line":"    index = int(line[MSGSTR_ARRAY_ENTRY_LEN:right_bracket_pos])"},"255":{"hits":1,"time":0.000002384185791015625,"time_per_hit":0.000002384185791015625,"percent":0.0002854218506410289,"line":"    if index not in msgstr_dict:"},"256":{"hits":1,"time":0.0000019073486328125,"time_per_hit":0.0000019073486328125,"percent":0.00022833748051282314,"line":"        msgstr_dict[index] = []"},"257":{"hits":1,"time":0.000002384185791015625,"time_per_hit":0.000002384185791015625,"percent":0.0002854218506410289,"line":"    msgstr_dict[index].extend(entry)"},"258":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"259":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"260":{"hits":2,"time":0.00000858306884765625,"time_per_hit":0.000004291534423828125,"percent":0.0010275186623077042,"line":"def get_entry(parse_state, right_bracket_pos):"},"261":{"hits":1,"time":0.0000016689300537109375,"time_per_hit":0.0000016689300537109375,"percent":0.00019979529544872027,"line":"    entry = []"},"262":{"hits":1,"time":0.0000054836273193359375,"time_per_hit":0.0000054836273193359375,"percent":0.0006564702564743665,"line":"    parse_message(parse_state, \'msgstr[\', right_bracket_pos + 1, entry)"},"263":{"hits":1,"time":0.0000019073486328125,"time_per_hit":0.0000019073486328125,"percent":0.00022833748051282314,"line":"    return entry"},"264":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"265":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"266":{"hits":3,"time":0.000009298324584960938,"time_per_hit":0.0000030994415283203125,"percent":0.0011131452175000129,"line":"def parse_msgstr_array_entry(parse_state, msgstr_dict):"},"267":{"hits":2,"time":0.000003814697265625,"time_per_hit":0.0000019073486328125,"percent":0.0004566749610256463,"line":"    line = parse_state.next_line"},"268":{"hits":2,"time":0.0000040531158447265625,"time_per_hit":0.0000020265579223632812,"percent":0.0004852171460897492,"line":"    right_bracket_pos = find(line, \']\', MSGSTR_ARRAY_ENTRY_LEN)"},"269":{"hits":2,"time":0.000003814697265625,"time_per_hit":0.0000019073486328125,"percent":0.0004566749610256463,"line":"    if right_bracket_pos >= 0:"},"270":{"hits":1,"time":0.000006198883056640625,"time_per_hit":0.000006198883056640625,"percent":0.0007420968116666752,"line":"        entry = get_entry(parse_state, right_bracket_pos)"},"271":{"hits":1,"time":0.000002384185791015625,"time_per_hit":0.000002384185791015625,"percent":0.0002854218506410289,"line":"        if len(entry) > 0:"},"272":{"hits":1,"time":0.0000064373016357421875,"time_per_hit":0.0000064373016357421875,"percent":0.0007706389967307781,"line":"            add_to_dict(msgstr_dict, line, right_bracket_pos, entry)"},"273":{"hits":1,"time":0.0000021457672119140625,"time_per_hit":0.0000021457672119140625,"percent":0.00025687966557692604,"line":"            return True"},"274":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        else:"},"275":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            return False"},"276":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    else:"},"277":{"hits":1,"time":0.0000011920928955078125,"time_per_hit":0.0000011920928955078125,"percent":0.00014271092532051446,"line":"        return False"},"278":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"279":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"280":{"hits":2,"time":0.000008344650268554688,"time_per_hit":0.000004172325134277344,"percent":0.0009989764772436014,"line":"def parse_msgstr_array(parse_state, unit):"},"281":{"hits":1,"time":0.0000019073486328125,"time_per_hit":0.0000019073486328125,"percent":0.00022833748051282314,"line":"    msgstr_dict = {}"},"282":{"hits":1,"time":0.000006198883056640625,"time_per_hit":0.000006198883056640625,"percent":0.0007420968116666752,"line":"    result = parse_msgstr_array_entry(parse_state, msgstr_dict)"},"283":{"hits":1,"time":0.0000019073486328125,"time_per_hit":0.0000019073486328125,"percent":0.00022833748051282314,"line":"    if not result:  # We require at least one result"},"284":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return False"},"285":{"hits":1,"time":0.0000059604644775390625,"time_per_hit":0.0000059604644775390625,"percent":0.0007135546266025724,"line":"    while parse_msgstr_array_entry(parse_state, msgstr_dict):"},"286":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        pass"},"287":{"hits":1,"time":0.0000021457672119140625,"time_per_hit":0.0000021457672119140625,"percent":0.00025687966557692604,"line":"    unit.msgstr = msgstr_dict"},"288":{"hits":1,"time":0.0000016689300537109375,"time_per_hit":0.0000016689300537109375,"percent":0.00019979529544872027,"line":"    return True"},"289":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"290":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"291":{"hits":2,"time":0.0000095367431640625,"time_per_hit":0.00000476837158203125,"percent":0.0011416874025641157,"line":"def parse_plural(parse_state, unit):"},"292":{"hits":1,"time":0.000008821487426757812,"time_per_hit":0.000008821487426757812,"percent":0.001056060847371807,"line":"    if parse_msgid_plural(parse_state, unit) and \\\\"},"293":{"hits":1,"time":0.00000762939453125,"time_per_hit":0.00000762939453125,"percent":0.0009133499220512926,"line":"       (parse_msgstr_array(parse_state, unit) or parse_msgstr(parse_state, unit)):"},"294":{"hits":1,"time":0.0000019073486328125,"time_per_hit":0.0000019073486328125,"percent":0.00022833748051282314,"line":"        return True"},"295":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    else:"},"296":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return False"},"297":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"298":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"299":{"hits":17,"time":0.000026226043701171875,"time_per_hit":0.0000015427084530101103,"percent":0.003139640357051318,"line":"def parse_msg_entries(parse_state, unit):"},"300":{"hits":16,"time":0.00007939338684082031,"time_per_hit":0.0000049620866775512695,"percent":0.009504547626346263,"line":"    parse_msgctxt(parse_state, unit)"},"301":{"hits":16,"time":0.00006747245788574219,"time_per_hit":0.000004217028617858887,"percent":0.008077438373141118,"line":"    if parse_msgid(parse_state, unit) and \\\\"},"302":{"hits":12,"time":0.00005412101745605469,"time_per_hit":0.0000045100847880045576,"percent":0.0064790760095513565,"line":"       (parse_msgstr(parse_state, unit) or parse_plural(parse_state, unit)):"},"303":{"hits":12,"time":0.0000152587890625,"time_per_hit":0.0000012715657552083333,"percent":0.0018266998441025851,"line":"        return True"},"304":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    else:"},"305":{"hits":4,"time":0.0000050067901611328125,"time_per_hit":0.0000012516975402832031,"percent":0.0005993858863461608,"line":"        return False"},"306":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"307":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"308":{"hits":17,"time":0.00003337860107421875,"time_per_hit":0.0000019634471220128674,"percent":0.003995905908974405,"line":"def parse_unit(parse_state, unit=None):"},"309":{"hits":16,"time":0.0000743865966796875,"time_per_hit":0.000004649162292480469,"percent":0.008905161740000103,"line":"    unit = unit or parse_state.UnitClass()"},"310":{"hits":16,"time":0.00007390975952148438,"time_per_hit":0.0000046193599700927734,"percent":0.008848077369871896,"line":"    parsed_comments = parse_comments(parse_state, unit)"},"311":{"hits":16,"time":0.0000705718994140625,"time_per_hit":0.000004410743713378906,"percent":0.008448486778974456,"line":"    obsolete_unit = parse_obsolete(parse_state, unit)"},"312":{"hits":16,"time":0.0000247955322265625,"time_per_hit":0.0000015497207641601562,"percent":0.002968387246666701,"line":"    if obsolete_unit is not None:"},"313":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return obsolete_unit"},"314":{"hits":16,"time":0.00007724761962890625,"time_per_hit":0.000004827976226806641,"percent":0.009247667960769337,"line":"    parsed_msg_entries = parse_msg_entries(parse_state, unit)"},"315":{"hits":16,"time":0.000026702880859375,"time_per_hit":0.0000016689300537109375,"percent":0.0031967247271795242,"line":"    if parsed_comments or parsed_msg_entries:"},"316":{"hits":12,"time":0.00001811981201171875,"time_per_hit":0.0000015099843343098958,"percent":0.00216920606487182,"line":"        return unit"},"317":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    else:"},"318":{"hits":4,"time":0.0000054836273193359375,"time_per_hit":0.0000013709068298339844,"percent":0.0006564702564743665,"line":"        return None"},"319":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"320":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"321":{"hits":5,"time":0.000012874603271484375,"time_per_hit":0.000002574920654296875,"percent":0.0015412779934615563,"line":"def set_encoding(parse_state, store, unit):"},"322":{"hits":4,"time":0.000007152557373046875,"time_per_hit":0.0000017881393432617188,"percent":0.0008562655519230868,"line":"    charset = None"},"323":{"hits":4,"time":0.000010013580322265625,"time_per_hit":0.0000025033950805664062,"percent":0.0011987717726923215,"line":"    if isinstance(unit.msgstr, list) and len(unit.msgstr) and isinstance(unit.msgstr[0], six.string_types):"},"324":{"hits":4,"time":0.00004744529724121094,"time_per_hit":0.000011861324310302734,"percent":0.005679894827756476,"line":"        charset = re.search(\\"charset=([^\\\\\\\\s\\\\\\\\\\\\\\\\n]+)\\", \\"\\".join(unit.msgstr))"},"325":{"hits":4,"time":0.00000858306884765625,"time_per_hit":0.0000021457672119140625,"percent":0.0010275186623077042,"line":"    if charset:"},"326":{"hits":4,"time":0.000017404556274414062,"time_per_hit":0.000004351139068603516,"percent":0.002083579509679511,"line":"        encoding = charset.group(1)"},"327":{"hits":4,"time":0.0000069141387939453125,"time_per_hit":0.0000017285346984863281,"percent":0.0008277233668589839,"line":"        if encoding != \'CHARSET\':"},"328":{"hits":4,"time":0.00000858306884765625,"time_per_hit":0.0000021457672119140625,"percent":0.0010275186623077042,"line":"            store._encoding = encoding"},"329":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        else:"},"330":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            store._encoding = \'utf-8\'"},"331":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    else:"},"332":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        store._encoding = \'utf-8\'"},"333":{"hits":4,"time":0.000008344650268554688,"time_per_hit":0.000002086162567138672,"percent":0.0009989764772436014,"line":"    parse_state.encoding = store._encoding"},"334":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"335":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"336":{"hits":41,"time":0.00005412101745605469,"time_per_hit":0.0000013200248160013337,"percent":0.0064790760095513565,"line":"def decode_list(lst, decode):"},"337":{"hits":144,"time":0.0003695487976074219,"time_per_hit":0.0000025663110944959853,"percent":0.044240386849359485,"line":"    return [decode(item.encode(SINGLE_BYTE_ENCODING)) for item in lst]"},"338":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"339":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"340":{"hits":5,"time":0.000015497207641601562,"time_per_hit":0.0000030994415283203125,"percent":0.0018552420291666882,"line":"def decode_header(unit, decode):"},"341":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\""},"342":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    The header has been arbitrarily decoded with a single-byte encoding. We"},"343":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    re-encode it to decode values with the proper encoding defined in the header"},"344":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    (using decode_list above)."},"345":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\""},"346":{"hits":4,"time":0.0000095367431640625,"time_per_hit":0.000002384185791015625,"percent":0.0011416874025641157,"line":"    for attr in (\'msgctxt\', \'msgid\', \'msgid_pluralcomments\',"},"347":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                 \'msgid_plural\', \'msgstr\',"},"348":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                 \'othercomments\', \'automaticcomments\', \'sourcecomments\',"},"349":{"hits":44,"time":0.00007081031799316406,"time_per_hit":0.0000016093254089355469,"percent":0.00847702896403856,"line":"                 \'typecomments\', \'msgidcomments\'):"},"350":{"hits":40,"time":0.00006270408630371094,"time_per_hit":0.0000015676021575927735,"percent":0.007506594671859061,"line":"        element = getattr(unit, attr)"},"351":{"hits":40,"time":0.00005817413330078125,"time_per_hit":0.0000014543533325195312,"percent":0.006964293155641106,"line":"        if isinstance(element, list):"},"352":{"hits":40,"time":0.00019979476928710938,"time_per_hit":0.000004994869232177734,"percent":0.023918351083718224,"line":"            setattr(unit, attr, decode_list(element, decode))"},"353":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        else:"},"354":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            setattr(unit, attr, dict([(key, decode_list(value, decode)) for key, value in element.items()]))"},"355":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"356":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"357":{"hits":5,"time":0.000011920928955078125,"time_per_hit":0.000002384185791015625,"percent":0.0014271092532051448,"line":"def parse_header(parse_state, store):"},"358":{"hits":4,"time":0.000024557113647460938,"time_per_hit":0.000006139278411865234,"percent":0.002939845061602598,"line":"    first_unit = parse_unit(parse_state)"},"359":{"hits":4,"time":0.000006198883056640625,"time_per_hit":0.0000015497207641601562,"percent":0.0007420968116666752,"line":"    if first_unit is None:"},"360":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return None"},"361":{"hits":4,"time":0.000022649765014648438,"time_per_hit":0.000005662441253662109,"percent":0.002711507581089775,"line":"    set_encoding(parse_state, store, first_unit)"},"362":{"hits":4,"time":0.000027894973754882812,"time_per_hit":0.000006973743438720703,"percent":0.0033394356525000383,"line":"    decode_header(first_unit, parse_state.decode)"},"363":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    # Fix encoding of next line in parser"},"364":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    # It was originally parsed with  SINGLE_BYTE_ENCODING"},"365":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    # but we need to convert it to actual encoding"},"366":{"hits":4,"time":0.0000073909759521484375,"time_per_hit":0.0000018477439880371094,"percent":0.0008848077369871897,"line":"    parse_state.next_line = parse_state.decode("},"367":{"hits":4,"time":0.000021219253540039062,"time_per_hit":0.000005304813385009766,"percent":0.0025402544707051576,"line":"        parse_state.next_line.encode(SINGLE_BYTE_ENCODING)"},"368":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    )"},"369":{"hits":4,"time":0.0000064373016357421875,"time_per_hit":0.0000016093254089355469,"percent":0.0007706389967307781,"line":"    return first_unit"},"370":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"371":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"372":{"hits":5,"time":0.000015497207641601562,"time_per_hit":0.0000030994415283203125,"percent":0.0018552420291666882,"line":"def parse_units(parse_state, store):"},"373":{"hits":4,"time":0.000025987625122070312,"time_per_hit":0.000006496906280517578,"percent":0.0031110981719872153,"line":"    unit = parse_header(parse_state, store)"},"374":{"hits":16,"time":0.000026226043701171875,"time_per_hit":0.0000016391277313232422,"percent":0.003139640357051318,"line":"    while unit:"},"375":{"hits":12,"time":0.00005507469177246094,"time_per_hit":0.000004589557647705078,"percent":0.006593244749807769,"line":"        unit.infer_state()"},"376":{"hits":12,"time":0.000059604644775390625,"time_per_hit":0.000004967053731282552,"percent":0.007135546266025724,"line":"        store.addunit(unit)"},"377":{"hits":12,"time":0.00006151199340820312,"time_per_hit":0.000005125999450683594,"percent":0.007363883746538546,"line":"        unit = parse_unit(parse_state)"},"378":{"hits":4,"time":0.0000069141387939453125,"time_per_hit":0.0000017285346984863281,"percent":0.0008277233668589839,"line":"    if not parse_state.eof:"},"379":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        raise ValueError(\'Syntax error on line {}\'.format(parse_state.lineno))"},"file_total_time":0.005866289138793945,"file_total_time_percent":0.7022804635022517},"translate/storage/poheader.py":{"1":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# -*- coding: utf-8 -*-"},"2":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#"},"3":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# Copyright 2002-2011 Zuza Software Foundation"},"4":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#"},"5":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# This file is part of the Translate Toolkit."},"6":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#"},"7":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# This program is free software; you can redistribute it and/or modify"},"8":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# it under the terms of the GNU General Public License as published by"},"9":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# the Free Software Foundation; either version 2 of the License, or"},"10":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# (at your option) any later version."},"11":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#"},"12":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# This program is distributed in the hope that it will be useful,"},"13":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# but WITHOUT ANY WARRANTY; without even the implied warranty of"},"14":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the"},"15":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# GNU General Public License for more details."},"16":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#"},"17":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# You should have received a copy of the GNU General Public License"},"18":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# along with this program; if not, see <http://www.gnu.org/licenses/>."},"19":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"20":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"\\"\\"\\"class that handles all header functions for a header in a po file\\"\\"\\""},"21":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"22":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"import re"},"23":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"import six"},"24":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"import time"},"25":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"from collections import OrderedDict"},"26":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"27":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"from translate import __version__"},"28":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"from translate.misc.dictutils import cidict"},"29":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"30":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"31":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"author_re = re.compile(r\\".*<\\\\S+@\\\\S+>.*\\\\d{4,4}\\")"},"32":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"33":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"default_header = {"},"34":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"Project-Id-Version\\": \\"PACKAGE VERSION\\","},"35":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"PO-Revision-Date\\": \\"YEAR-MO-DA HO:MI+ZONE\\","},"36":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"Last-Translator\\": \\"FULL NAME <EMAIL@ADDRESS>\\","},"37":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"Language-Team\\": \\"LANGUAGE <LL@li.org>\\","},"38":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"Plural-Forms\\": \\"nplurals=INTEGER; plural=EXPRESSION;\\","},"39":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"}"},"40":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"41":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"42":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"def parseheaderstring(input):"},"43":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\"Parses an input string with the definition of a PO header and returns"},"44":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    the interpreted values as a dictionary."},"45":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\""},"46":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    headervalues = OrderedDict()"},"47":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    for line in input.split(\\"\\\\n\\"):"},"48":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if not line or \\":\\" not in line:"},"49":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            continue"},"50":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        key, value = line.split(\\":\\", 1)"},"51":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        key = key.strip()"},"52":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        headervalues[key] = value.strip()"},"53":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    return headervalues"},"54":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"55":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"56":{"hits":8,"time":0.00002193450927734375,"time_per_hit":0.0000027418136596679688,"percent":0.002625881025897466,"line":"def tzstring():"},"57":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\"Returns the timezone as a string in the format [+-]0000, eg +0200."},"58":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"59":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    :rtype: str"},"60":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\""},"61":{"hits":8,"time":0.000018835067749023438,"time_per_hit":0.0000023543834686279297,"percent":0.0022548326200641285,"line":"    if time.daylight:"},"62":{"hits":8,"time":0.000021696090698242188,"time_per_hit":0.0000027120113372802734,"percent":0.0025973388408333633,"line":"        tzoffset = time.altzone"},"63":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    else:"},"64":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        tzoffset = time.timezone"},"65":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"66":{"hits":8,"time":0.000047206878662109375,"time_per_hit":0.000005900859832763672,"percent":0.0056513526426923725,"line":"    hours, minutes = time.gmtime(abs(tzoffset))[3:5]"},"67":{"hits":8,"time":0.000014066696166992188,"time_per_hit":0.0000017583370208740234,"percent":0.0016839889187820708,"line":"    if tzoffset > 0:"},"68":{"hits":8,"time":0.00001239776611328125,"time_per_hit":0.0000015497207641601562,"percent":0.0014841936233333504,"line":"        hours *= -1"},"69":{"hits":8,"time":0.000040531158447265625,"time_per_hit":0.000005066394805908203,"percent":0.004852171460897492,"line":"    tz = str(\\"%+d\\" % hours).zfill(3) + str(minutes).zfill(2)"},"70":{"hits":8,"time":0.000012874603271484375,"time_per_hit":0.0000016093254089355469,"percent":0.0015412779934615563,"line":"    return tz"},"71":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"72":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"73":{"hits":8,"time":0.00002002716064453125,"time_per_hit":0.0000025033950805664062,"percent":0.002397543545384643,"line":"def update(existing, add=False, **kwargs):"},"74":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\"Update an existing header dictionary with the values in kwargs, adding"},"75":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    new values only if add is true."},"76":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"77":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    :return: Updated dictionary of header entries"},"78":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    :rtype: dict of strings"},"79":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\""},"80":{"hits":8,"time":0.000017881393432617188,"time_per_hit":0.0000022351741790771484,"percent":0.002140663879807717,"line":"    headerargs = OrderedDict()"},"81":{"hits":8,"time":0.000060558319091796875,"time_per_hit":0.000007569789886474609,"percent":0.007249715006282135,"line":"    fixedargs = cidict()"},"82":{"hits":48,"time":0.00008606910705566406,"time_per_hit":0.0000017931063969930012,"percent":0.010303728808141144,"line":"    for key, value in kwargs.items():"},"83":{"hits":40,"time":0.00006651878356933594,"time_per_hit":0.0000016629695892333984,"percent":0.007963269632884707,"line":"        key = key.replace(\\"_\\", \\"-\\")"},"84":{"hits":40,"time":0.00006389617919921875,"time_per_hit":0.0000015974044799804688,"percent":0.007649305597179575,"line":"        if key.islower():"},"85":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            key = key.title()"},"86":{"hits":40,"time":0.00018262863159179688,"time_per_hit":0.0000045657157897949215,"percent":0.021863313759102818,"line":"        fixedargs[key] = value"},"87":{"hits":8,"time":0.000015497207641601562,"time_per_hit":0.0000019371509552001953,"percent":0.0018552420291666882,"line":"    removed = []"},"88":{"hits":120,"time":0.00018310546875,"time_per_hit":0.00000152587890625,"percent":0.021920398129231022,"line":"    for key in poheader.header_order:"},"89":{"hits":112,"time":0.0001614093780517578,"time_per_hit":0.000001441155161176409,"percent":0.01932305928839766,"line":"        if key in existing:"},"90":{"hits":80,"time":0.0003848075866699219,"time_per_hit":0.000004810094833374024,"percent":0.04606708669346207,"line":"            if key in fixedargs:"},"91":{"hits":40,"time":0.00007462501525878906,"time_per_hit":0.0000018656253814697266,"percent":0.008933703925064205,"line":"                headerargs[key] = fixedargs.pop(key)"},"92":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            else:"},"93":{"hits":40,"time":0.00006508827209472656,"time_per_hit":0.000001627206802368164,"percent":0.00779201652250009,"line":"                headerargs[key] = existing[key]"},"94":{"hits":80,"time":0.00012040138244628906,"time_per_hit":0.0000015050172805786133,"percent":0.01441380345737196,"line":"            removed.append(key)"},"95":{"hits":32,"time":0.000133514404296875,"time_per_hit":0.000004172325134277344,"percent":0.01598362363589762,"line":"        elif add and key in fixedargs:"},"96":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            headerargs[key] = fixedargs.pop(key)"},"97":{"hits":88,"time":0.00017333030700683594,"time_per_hit":0.0000019696625796231357,"percent":0.020750168541602804,"line":"    for key, value in six.iteritems(existing):"},"98":{"hits":80,"time":0.00011348724365234375,"time_per_hit":0.000001418590545654297,"percent":0.013586080090512978,"line":"        if key not in removed:"},"99":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            headerargs[key] = value"},"100":{"hits":8,"time":0.000010251998901367188,"time_per_hit":0.0000012814998626708984,"percent":0.0012273139577564244,"line":"    if add:"},"101":{"hits":8,"time":0.000014066696166992188,"time_per_hit":0.0000017583370208740234,"percent":0.0016839889187820708,"line":"        for key in fixedargs:"},"102":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            headerargs[key] = fixedargs[key]"},"103":{"hits":8,"time":0.000011444091796875,"time_per_hit":0.000001430511474609375,"percent":0.001370024883076939,"line":"    return headerargs"},"104":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"105":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"106":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"class poheader(object):"},"107":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\"This class implements functionality for manipulation of po file headers."},"108":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    This class is a mix-in class and useless on its own. It must be used from"},"109":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    all classes which represent a po file"},"110":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\""},"111":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"112":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    x_generator = \\"Translate Toolkit %s\\" % __version__.sver"},"113":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"114":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    header_order = ["},"115":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"Project-Id-Version\\","},"116":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"Report-Msgid-Bugs-To\\","},"117":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"POT-Creation-Date\\","},"118":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"PO-Revision-Date\\","},"119":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"Last-Translator\\","},"120":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"Language-Team\\","},"121":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"Language\\","},"122":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"MIME-Version\\","},"123":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"Content-Type\\","},"124":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"Content-Transfer-Encoding\\","},"125":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"Plural-Forms\\","},"126":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"X-Accelerator-Marker\\","},"127":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"X-Generator\\","},"128":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"X-Merge-On\\","},"129":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    ]"},"130":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"131":{"hits":4,"time":0.000008344650268554688,"time_per_hit":0.000002086162567138672,"percent":0.0009989764772436014,"line":"    def init_headers(self, charset=\'UTF-8\', encoding=\'8bit\', **kwargs):"},"132":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"sets default values for po headers\\"\\"\\""},"133":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        #FIXME: we need to allow at least setting target language, pluralforms and generator"},"134":{"hits":4,"time":0.000046253204345703125,"time_per_hit":0.000011563301086425781,"percent":0.005537183902435961,"line":"        headerdict = self.makeheaderdict(charset=charset, encoding=encoding, **kwargs)"},"135":{"hits":4,"time":0.00005269050598144531,"time_per_hit":0.000013172626495361328,"percent":0.00630782289916674,"line":"        self.updateheader(add=True, **headerdict)"},"136":{"hits":4,"time":0.000019073486328125,"time_per_hit":0.00000476837158203125,"percent":0.0022833748051282314,"line":"        return self.header()"},"137":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"138":{"hits":8,"time":0.000029087066650390625,"time_per_hit":0.000003635883331298828,"percent":0.003482146577820553,"line":"    def makeheaderdict(self,"},"139":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                       charset=\\"CHARSET\\","},"140":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                       encoding=\\"ENCODING\\","},"141":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                       project_id_version=None,"},"142":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                       pot_creation_date=None,"},"143":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                       po_revision_date=None,"},"144":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                       last_translator=None,"},"145":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                       language_team=None,"},"146":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                       mime_version=None,"},"147":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                       plural_forms=None,"},"148":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                       report_msgid_bugs_to=None,"},"149":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                       **kwargs):"},"150":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Create a header dictionary with useful defaults."},"151":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"152":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        pot_creation_date can be None (current date) or a value (datetime or string)"},"153":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        po_revision_date can be None (form), False (=pot_creation_date), True (=now),"},"154":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        or a value (datetime or string)"},"155":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"156":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        :return: Dictionary with the header items"},"157":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        :rtype: dict of strings"},"158":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\""},"159":{"hits":8,"time":0.000018596649169921875,"time_per_hit":0.0000023245811462402344,"percent":0.0022262904350000257,"line":"        if project_id_version is None:"},"160":{"hits":8,"time":0.000014066696166992188,"time_per_hit":0.0000017583370208740234,"percent":0.0016839889187820708,"line":"            project_id_version = \\"PACKAGE VERSION\\""},"161":{"hits":8,"time":0.000017881393432617188,"time_per_hit":0.0000022351741790771484,"percent":0.002140663879807717,"line":"        if pot_creation_date is None or pot_creation_date is True:"},"162":{"hits":8,"time":0.0001361370086669922,"time_per_hit":0.000017017126083374023,"percent":0.01629758767160275,"line":"            pot_creation_date = time.strftime(\\"%Y-%m-%d %H:%M\\") + tzstring()"},"163":{"hits":8,"time":0.00001811981201171875,"time_per_hit":0.0000022649765014648438,"percent":0.00216920606487182,"line":"        if isinstance(pot_creation_date, time.struct_time):"},"164":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            pot_creation_date = time.strftime(\\"%Y-%m-%d %H:%M\\", pot_creation_date) + tzstring()"},"165":{"hits":8,"time":0.000015020370483398438,"time_per_hit":0.0000018775463104248047,"percent":0.0017981576590384823,"line":"        if po_revision_date is None:"},"166":{"hits":8,"time":0.000012636184692382812,"time_per_hit":0.0000015795230865478516,"percent":0.0015127358083974534,"line":"            po_revision_date = \\"YEAR-MO-DA HO:MI+ZONE\\""},"167":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        elif po_revision_date is False:"},"168":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            po_revision_date = pot_creation_date"},"169":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        elif po_revision_date is True:"},"170":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            po_revision_date = time.strftime(\\"%Y-%m-%d %H:%M\\") + tzstring()"},"171":{"hits":8,"time":0.000014781951904296875,"time_per_hit":0.0000018477439880371094,"percent":0.0017696154739743795,"line":"        if isinstance(po_revision_date, time.struct_time):"},"172":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            po_revision_date = time.strftime(\\"%Y-%m-%d %H:%M\\", po_revision_date) + tzstring()"},"173":{"hits":8,"time":0.000014066696166992188,"time_per_hit":0.0000017583370208740234,"percent":0.0016839889187820708,"line":"        if last_translator is None:"},"174":{"hits":8,"time":0.000015020370483398438,"time_per_hit":0.0000018775463104248047,"percent":0.0017981576590384823,"line":"            last_translator = \\"FULL NAME <EMAIL@ADDRESS>\\""},"175":{"hits":8,"time":0.00001239776611328125,"time_per_hit":0.0000015497207641601562,"percent":0.0014841936233333504,"line":"        if language_team is None:"},"176":{"hits":8,"time":0.000013589859008789062,"time_per_hit":0.0000016987323760986328,"percent":0.001626904548653865,"line":"            language_team = \\"LANGUAGE <LL@li.org>\\""},"177":{"hits":8,"time":0.000011920928955078125,"time_per_hit":0.0000014901161193847656,"percent":0.0014271092532051448,"line":"        if mime_version is None:"},"178":{"hits":8,"time":0.0000133514404296875,"time_per_hit":0.0000016689300537109375,"percent":0.0015983623635897621,"line":"            mime_version = \\"1.0\\""},"179":{"hits":8,"time":0.000012159347534179688,"time_per_hit":0.000001519918441772461,"percent":0.0014556514382692476,"line":"        if report_msgid_bugs_to is None:"},"180":{"hits":8,"time":0.00001239776611328125,"time_per_hit":0.0000015497207641601562,"percent":0.0014841936233333504,"line":"            report_msgid_bugs_to = \\"\\""},"181":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"182":{"hits":8,"time":0.000017404556274414062,"time_per_hit":0.000002175569534301758,"percent":0.002083579509679511,"line":"        defaultargs = OrderedDict()"},"183":{"hits":8,"time":0.000015735626220703125,"time_per_hit":0.0000019669532775878906,"percent":0.001883784214230791,"line":"        defaultargs[\\"Project-Id-Version\\"] = project_id_version"},"184":{"hits":8,"time":0.000013828277587890625,"time_per_hit":0.0000017285346984863281,"percent":0.0016554467337179678,"line":"        defaultargs[\\"Report-Msgid-Bugs-To\\"] = report_msgid_bugs_to"},"185":{"hits":8,"time":0.000012874603271484375,"time_per_hit":0.0000016093254089355469,"percent":0.0015412779934615563,"line":"        defaultargs[\\"POT-Creation-Date\\"] = pot_creation_date"},"186":{"hits":8,"time":0.0000133514404296875,"time_per_hit":0.0000016689300537109375,"percent":0.0015983623635897621,"line":"        defaultargs[\\"PO-Revision-Date\\"] = po_revision_date"},"187":{"hits":8,"time":0.000012636184692382812,"time_per_hit":0.0000015795230865478516,"percent":0.0015127358083974534,"line":"        defaultargs[\\"Last-Translator\\"] = last_translator"},"188":{"hits":8,"time":0.000016450881958007812,"time_per_hit":0.0000020563602447509766,"percent":0.0019694107694230994,"line":"        defaultargs[\\"Language-Team\\"] = language_team"},"189":{"hits":8,"time":0.000012874603271484375,"time_per_hit":0.0000016093254089355469,"percent":0.0015412779934615563,"line":"        defaultargs[\\"MIME-Version\\"] = mime_version"},"190":{"hits":8,"time":0.000016927719116210938,"time_per_hit":0.000002115964889526367,"percent":0.0020264951395513055,"line":"        defaultargs[\\"Content-Type\\"] = \\"text/plain; charset=%s\\" % charset"},"191":{"hits":8,"time":0.000014066696166992188,"time_per_hit":0.0000017583370208740234,"percent":0.0016839889187820708,"line":"        defaultargs[\\"Content-Transfer-Encoding\\"] = encoding"},"192":{"hits":8,"time":0.000011920928955078125,"time_per_hit":0.0000014901161193847656,"percent":0.0014271092532051448,"line":"        if plural_forms:"},"193":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            defaultargs[\\"Plural-Forms\\"] = plural_forms"},"194":{"hits":8,"time":0.000018835067749023438,"time_per_hit":0.0000023543834686279297,"percent":0.0022548326200641285,"line":"        defaultargs[\\"X-Generator\\"] = self.x_generator"},"195":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"196":{"hits":8,"time":0.00007677078247070312,"time_per_hit":0.00000959634780883789,"percent":0.009190583590641132,"line":"        return update(defaultargs, add=True, **kwargs)"},"197":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"198":{"hits":8,"time":0.000014781951904296875,"time_per_hit":0.0000018477439880371094,"percent":0.0017696154739743795,"line":"    def header(self):"},"199":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Returns the header element, or None. Only the first element is"},"200":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        allowed to be a header. Note that this could still return an empty"},"201":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        header element, if present."},"202":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\""},"203":{"hits":8,"time":0.000014543533325195312,"time_per_hit":0.000001817941665649414,"percent":0.0017410732889102764,"line":"        if len(self.units) == 0:"},"204":{"hits":4,"time":0.0000057220458984375,"time_per_hit":0.000001430511474609375,"percent":0.0006850124415384694,"line":"            return None"},"205":{"hits":4,"time":0.0000057220458984375,"time_per_hit":0.000001430511474609375,"percent":0.0006850124415384694,"line":"        candidate = self.units[0]"},"206":{"hits":4,"time":0.00002002716064453125,"time_per_hit":0.0000050067901611328125,"percent":0.002397543545384643,"line":"        if candidate.isheader():"},"207":{"hits":4,"time":0.0000095367431640625,"time_per_hit":0.000002384185791015625,"percent":0.0011416874025641157,"line":"            return candidate"},"208":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        else:"},"209":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            return None"},"210":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"211":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def parseheader(self):"},"212":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Parses the PO header and returns the interpreted values as a"},"213":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        dictionary."},"214":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\""},"215":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        header = self.header()"},"216":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if not header:"},"217":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            return {}"},"218":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return parseheaderstring(header.target)"},"219":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"220":{"hits":4,"time":0.000010967254638671875,"time_per_hit":0.0000027418136596679688,"percent":0.001312940512948733,"line":"    def updateheader(self, add=False, **kwargs):"},"221":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Updates the fields in the PO style header."},"222":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"223":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        This will create a header if add == True."},"224":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\""},"225":{"hits":4,"time":0.000026941299438476562,"time_per_hit":0.000006735324859619141,"percent":0.003225266912243627,"line":"        header = self.header()"},"226":{"hits":4,"time":0.000008344650268554688,"time_per_hit":0.000002086162567138672,"percent":0.0009989764772436014,"line":"        if not header:"},"227":{"hits":4,"time":0.000007867813110351562,"time_per_hit":0.0000019669532775878906,"percent":0.0009418921071153955,"line":"            if add:"},"228":{"hits":4,"time":0.00003910064697265625,"time_per_hit":0.000009775161743164062,"percent":0.004680918350512875,"line":"                header = self.makeheader(**kwargs)"},"229":{"hits":4,"time":0.000024080276489257812,"time_per_hit":0.000006020069122314453,"percent":0.0028827606914743923,"line":"                self._insert_header(header)"},"230":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        else:"},"231":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            headeritems = update(self.parseheader(), add, **kwargs)"},"232":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            keys = headeritems.keys()"},"233":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if \\"Content-Type\\" not in keys or \\"charset=CHARSET\\" in headeritems[\\"Content-Type\\"]:"},"234":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                headeritems[\\"Content-Type\\"] = \\"text/plain; charset=UTF-8\\""},"235":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if \\"Content-Transfer-Encoding\\" not in keys or \\"ENCODING\\" in headeritems[\\"Content-Transfer-Encoding\\"]:"},"236":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                headeritems[\\"Content-Transfer-Encoding\\"] = \\"8bit\\""},"237":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            headerString = \\"\\""},"238":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            for key, value in headeritems.items():"},"239":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                if value is not None:"},"240":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    headerString += \\"%s: %s\\\\n\\" % (key, value)"},"241":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            header.target = headerString"},"242":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            header.markfuzzy(False)    # TODO: check why we do this?"},"243":{"hits":4,"time":0.00000762939453125,"time_per_hit":0.0000019073486328125,"percent":0.0009133499220512926,"line":"        return header"},"244":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"245":{"hits":4,"time":0.0000069141387939453125,"time_per_hit":0.0000017285346984863281,"percent":0.0008277233668589839,"line":"    def _insert_header(self, header):"},"246":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        # we should be using .addunit() or some equivalent in case the"},"247":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        # unit needs to refer back to the store, etc. This might be"},"248":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        # subtly broken for POXLIFF, since we don\'t dupliate the code"},"249":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        # from lisa::addunit()."},"250":{"hits":4,"time":0.00000762939453125,"time_per_hit":0.0000019073486328125,"percent":0.0009133499220512926,"line":"        header._store = self"},"251":{"hits":4,"time":0.000015974044799804688,"time_per_hit":0.000003993511199951172,"percent":0.0019123263992948938,"line":"        self.units.insert(0, header)"},"252":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"253":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def getheaderplural(self):"},"254":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Returns the nplural and plural values from the header.\\"\\"\\""},"255":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        header = self.parseheader()"},"256":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        pluralformvalue = header.get(\'Plural-Forms\', None)"},"257":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if pluralformvalue is None:"},"258":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            return None, None"},"259":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        nplural = re.findall(\\"nplurals=(.+?);\\", pluralformvalue)"},"260":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        plural = re.findall(\\"plural=(.+?);?$\\", pluralformvalue)"},"261":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if not nplural or nplural[0] == \\"INTEGER\\":"},"262":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            nplural = None"},"263":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        else:"},"264":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            nplural = nplural[0]"},"265":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if not plural or plural[0] == \\"EXPRESSION\\":"},"266":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            plural = None"},"267":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        else:"},"268":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            plural = plural[0]"},"269":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return nplural, plural"},"270":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"271":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def updateheaderplural(self, nplurals, plural):"},"272":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Update the Plural-Form PO header.\\"\\"\\""},"273":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if isinstance(nplurals, six.string_types):"},"274":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            nplurals = int(nplurals)"},"275":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        self.updateheader(add=True, Plural_Forms=\\"nplurals=%d; plural=%s;\\" % (nplurals, plural))"},"276":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"277":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def gettargetlanguage(self):"},"278":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Return the target language based on information in the header."},"279":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"280":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        The target language is determined in the following sequence:"},"281":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"          1. Use the \'Language\' entry in the header."},"282":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"          2. Poedit\'s custom headers."},"283":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"          3. Analysing the \'Language-Team\' entry."},"284":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\""},"285":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        header = self.parseheader()"},"286":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        lang = header.get(\'Language\', None)"},"287":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if lang is not None:"},"288":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            from translate.lang.data import langcode_ire"},"289":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if langcode_ire.match(lang):"},"290":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                return lang"},"291":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            else:"},"292":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                lang = None"},"293":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if \'X-Poedit-Language\' in header:"},"294":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            from translate.lang import poedit"},"295":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            language = header.get(\'X-Poedit-Language\')"},"296":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            country = header.get(\'X-Poedit-Country\')"},"297":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            return poedit.isocode(language, country)"},"298":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if \'Language-Code\' in header:  # Used in Plone files"},"299":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            return header.get(\'Language-Code\')"},"300":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if \'Language-Team\' in header:"},"301":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            from translate.lang.team import guess_language"},"302":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            return guess_language(header.get(\'Language-Team\'))"},"303":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return None"},"304":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"305":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def settargetlanguage(self, lang):"},"306":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Set the target language in the header."},"307":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"308":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        This removes any custom Poedit headers if they exist."},"309":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"310":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        :param lang: the new target language code"},"311":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        :type lang: str"},"312":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\""},"313":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if isinstance(lang, six.string_types) and len(lang) > 1:"},"314":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            self.updateheader(add=True, Language=lang, X_Poedit_Language=None, X_Poedit_Country=None)"},"315":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"316":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def getprojectstyle(self):"},"317":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Return the project based on information in the header."},"318":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"319":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        The project is determined in the following sequence:"},"320":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"          1. Use the \'X-Project-Style\' entry in the header."},"321":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"          2. Use \'Report-Msgid-Bug-To\' entry"},"322":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"          3. Use the \'X-Accelerator\' entry"},"323":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"          4. Use the Project ID"},"324":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"          5. Analyse the file itself (not yet implemented)"},"325":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\""},"326":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        header = self.parseheader()"},"327":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        project = header.get(\'X-Project-Style\', None)"},"328":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if project is not None:"},"329":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            return project"},"330":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        bug_address = header.get(\'Report-Msgid-Bugs-To\', None)"},"331":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if bug_address is not None:"},"332":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if \'bugzilla.gnome.org\' in bug_address:"},"333":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                return \'gnome\'"},"334":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if \'bugs.kde.org\' in bug_address:"},"335":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                return \'kde\'"},"336":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        accelerator = header.get(\'X-Accelerator-Marker\', None)"},"337":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if accelerator is not None:"},"338":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if accelerator == \\"~\\":"},"339":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                return \\"openoffice\\""},"340":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            elif accelerator == \\"&\\":"},"341":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                return \\"mozilla\\""},"342":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        project_id = header.get(\'Project-Id-Version\', None)"},"343":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if project_id is not None:"},"344":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if \'gnome\' in project_id.lower():"},"345":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                return \\"gnome\\""},"346":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        # TODO Call some project guessing code and probably move all of the above there also"},"347":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return None"},"348":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"349":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def setprojectstyle(self, project_style):"},"350":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Set the project in the header."},"351":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"352":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        :param project_style: the new project"},"353":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        :type project_style: str"},"354":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\""},"355":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        self.updateheader(add=True, X_Project_Style=project_style)"},"356":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"357":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def mergeheaders(self, otherstore):"},"358":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Merges another header with this header."},"359":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"360":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        This header is assumed to be the template."},"361":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"362":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        :type otherstore: :class:`~translate.storage.base.TranslationStore`"},"363":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\""},"364":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"365":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        newvalues = otherstore.parseheader()"},"366":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        retain_list = (\\"Project-Id-Version\\", \\"PO-Revision-Date\\", \\"Last-Translator\\","},"367":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                       \\"Language-Team\\", \\"Plural-Forms\\")"},"368":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        retain = dict((key, newvalues[key]) for key in retain_list if newvalues.get(key, None) and newvalues[key] != default_header.get(key, None))"},"369":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        self.updateheader(**retain)"},"370":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"371":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def updatecontributor(self, name, email=None):"},"372":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Add contribution comments if necessary.\\"\\"\\""},"373":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        header = self.header()"},"374":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if not header:"},"375":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            return"},"376":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        prelines = []"},"377":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        contriblines = []"},"378":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        postlines = []"},"379":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        contribexists = False"},"380":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        incontrib = False"},"381":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        outcontrib = False"},"382":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        for line in header.getnotes(\\"translator\\").split(\'\\\\n\'):"},"383":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            line = line.strip()"},"384":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if line == u\\"FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.\\":"},"385":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                incontrib = True"},"386":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                continue"},"387":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if author_re.match(line):"},"388":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                incontrib = True"},"389":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                contriblines.append(line)"},"390":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                continue"},"391":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if line == \\"\\" and incontrib:"},"392":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                incontrib = False"},"393":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                outcontrib = True"},"394":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if incontrib:"},"395":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                contriblines.append(line)"},"396":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            elif not outcontrib:"},"397":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                prelines.append(line)"},"398":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            else:"},"399":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                postlines.append(line)"},"400":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"401":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        year = time.strftime(\\"%Y\\")"},"402":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        contribexists = False"},"403":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        for i in range(len(contriblines)):"},"404":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            line = contriblines[i]"},"405":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if name in line and (email is None or email in line):"},"406":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                contribexists = True"},"407":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                if year in line:"},"408":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    break"},"409":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                else:"},"410":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    #The contributor is there, but not for this year"},"411":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    if line[-1] == \'.\':"},"412":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                        line = line[:-1]"},"413":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    contriblines[i] = \\"%s, %s.\\" % (line, year)"},"414":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"415":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if not contribexists:"},"416":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            # Add a new contributor"},"417":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if email:"},"418":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                contriblines.append(\\"%s <%s>, %s.\\" % (name, email, year))"},"419":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            else:"},"420":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                contriblines.append(\\"%s, %s.\\" % (name, year))"},"421":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"422":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        header.removenotes()"},"423":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        header.addnote(\\"\\\\n\\".join(prelines))"},"424":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        header.addnote(\\"\\\\n\\".join(contriblines))"},"425":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        header.addnote(\\"\\\\n\\".join(postlines))"},"426":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"427":{"hits":4,"time":0.000013113021850585938,"time_per_hit":0.0000032782554626464844,"percent":0.001569820178525659,"line":"    def makeheader(self, **kwargs):"},"428":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Create a header for the given filename."},"429":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"430":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        Check .makeheaderdict() for information on parameters."},"431":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\""},"432":{"hits":4,"time":0.000038623809814453125,"time_per_hit":0.000009655952453613281,"percent":0.004623833980384668,"line":"        headerpo = self.UnitClass(\\"\\", encoding=self._encoding)"},"433":{"hits":4,"time":0.00003218650817871094,"time_per_hit":0.000008046627044677734,"percent":0.0038531949836538904,"line":"        headerpo.markfuzzy()"},"434":{"hits":4,"time":0.00004482269287109375,"time_per_hit":0.000011205673217773438,"percent":0.005365930792051344,"line":"        headeritems = self.makeheaderdict(**kwargs)"},"435":{"hits":4,"time":0.000010251998901367188,"time_per_hit":0.000002562999725341797,"percent":0.0012273139577564244,"line":"        headervalue = \\"\\""},"436":{"hits":44,"time":0.00006937980651855469,"time_per_hit":0.0000015768137845126065,"percent":0.008305775853653942,"line":"        for (key, value) in headeritems.items():"},"437":{"hits":40,"time":0.000053882598876953125,"time_per_hit":0.0000013470649719238282,"percent":0.006450533824487254,"line":"            if value is None:"},"438":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                continue"},"439":{"hits":40,"time":0.00009036064147949219,"time_per_hit":0.0000022590160369873046,"percent":0.010817488139294996,"line":"            headervalue += \\"%s: %s\\\\n\\" % (key, value)"},"440":{"hits":4,"time":0.00003457069396972656,"time_per_hit":0.00000864267349243164,"percent":0.00413861683429492,"line":"        headerpo.target = headervalue"},"441":{"hits":4,"time":0.00000762939453125,"time_per_hit":0.0000019073486328125,"percent":0.0009133499220512926,"line":"        return headerpo"},"file_total_time":0.0035300254821777344,"file_total_time_percent":0.42259559205910746},"translate/storage/test_mo.py":{"1":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"import os"},"2":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"import subprocess"},"3":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"import sys"},"4":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"from io import BytesIO"},"5":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"6":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"from translate.storage import factory, mo, test_base"},"7":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"8":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"9":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"class TestMOUnit(test_base.TestTranslationUnit):"},"10":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    UnitClass = mo.mounit"},"11":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"12":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def test_context(self):"},"13":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        unit = self.UnitClass(\\"Message\\")"},"14":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        unit.setcontext(\'context\')"},"15":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        assert unit.getcontext() == \'context\'"},"16":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"17":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"18":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"posources = ["},"19":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    r\'\'\'"},"20":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"msgid \\"\\""},"21":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"msgstr \\"\\""},"22":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"\\"PO-Revision-Date: 2006-02-09 23:33+0200\\\\n\\""},"23":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"\\"MIME-Version: 1.0\\\\n\\""},"24":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"\\"Content-Type: text/plain; charset=UTF-8\\\\n\\""},"25":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"\\"Content-Transfer-Encoding: 8-bit\\\\n\\""},"26":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"\'\'\',"},"27":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    r\'\'\'"},"28":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"msgid \\"\\""},"29":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"msgstr \\"\\""},"30":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"\\"PO-Revision-Date: 2006-02-09 23:33+0200\\\\n\\""},"31":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"\\"MIME-Version: 1.0\\\\n\\""},"32":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"\\"Content-Type: text/plain; charset=UTF-8\\\\n\\""},"33":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"\\"Content-Transfer-Encoding: 8-bit\\\\n\\""},"34":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"35":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"msgid \\"plant\\""},"36":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"msgstr \\"\\""},"37":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"\'\'\',"},"38":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    # The following test is commented out, because the hash-size is different"},"39":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    # compared to gettext, since we\'re not counting untranslated units."},"40":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    #r\'\'\'"},"41":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    #msgid \\"\\""},"42":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    #msgstr \\"\\""},"43":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    #\\"PO-Revision-Date: 2006-02-09 23:33+0200\\\\n\\""},"44":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    #\\"MIME-Version: 1.0\\\\n\\""},"45":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    #\\"Content-Type: text/plain; charset=UTF-8\\\\n\\""},"46":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    #\\"Content-Transfer-Encoding: 8-bit\\\\n\\""},"47":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    #"},"48":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    #msgid \\"plant\\""},"49":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    #msgstr \\"\\""},"50":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    #"},"51":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    #msgid \\"\\""},"52":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    #\\"_: Noun\\\\n\\""},"53":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    #\\"convert\\""},"54":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    #msgstr \\"bekeerling\\""},"55":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    #\'\'\',"},"56":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    r\'\'\'"},"57":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"msgid \\"\\""},"58":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"msgstr \\"\\""},"59":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"\\"PO-Revision-Date: 2006-02-09 23:33+0200\\\\n\\""},"60":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"\\"MIME-Version: 1.0\\\\n\\""},"61":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"\\"Content-Type: text/plain; charset=UTF-8\\\\n\\""},"62":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"\\"Content-Transfer-Encoding: 8-bit\\\\n\\""},"63":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"64":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"msgid \\"plant\\""},"65":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"msgstr \\"\\""},"66":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"67":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"msgid \\"\\""},"68":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"\\"_: Noun\\\\n\\""},"69":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"\\"convert\\""},"70":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"msgstr \\"bekeerling\\""},"71":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"72":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"msgctxt \\"verb\\""},"73":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"msgid \\"\\""},"74":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"\\"convert\\""},"75":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"msgstr \\"omskakel\\""},"76":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"\'\'\',"},"77":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    r\'\'\'"},"78":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"msgid \\"\\""},"79":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"msgstr \\"\\""},"80":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"\\"PO-Revision-Date: 2006-02-09 23:33+0200\\\\n\\""},"81":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"\\"MIME-Version: 1.0\\\\n\\""},"82":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"\\"Content-Type: text/plain; charset=UTF-8\\\\n\\""},"83":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"\\"Content-Transfer-Encoding: 8-bit\\\\n\\""},"84":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"85":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"msgid \\"plant\\""},"86":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"msgstr \\"\\""},"87":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"88":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"msgid \\"\\""},"89":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"\\"_: Noun\\\\n\\""},"90":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"\\"convert\\""},"91":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"msgstr \\"bekeerling\\""},"92":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"93":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"msgctxt \\"verb\\""},"94":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"msgid \\"\\""},"95":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"\\"convert\\""},"96":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"msgstr \\"omskakel\\""},"97":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"98":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"msgid \\"tree\\""},"99":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"msgid_plural \\"trees\\""},"100":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"msgstr[0] \\"\\""},"101":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"\'\'\',"},"102":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"]"},"103":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"104":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"105":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"class TestMOFile(test_base.TestTranslationStore):"},"106":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    StoreClass = mo.mofile"},"107":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"108":{"hits":4,"time":0.000008106231689453125,"time_per_hit":0.0000020265579223632812,"percent":0.0009704342921794984,"line":"    def get_mo_and_po(self):"},"109":{"hits":4,"time":0.000029087066650390625,"time_per_hit":0.000007271766662597656,"percent":0.003482146577820553,"line":"        return (os.path.abspath(self.filename + \'.po\'),"},"110":{"hits":4,"time":0.00002193450927734375,"time_per_hit":0.0000054836273193359375,"percent":0.002625881025897466,"line":"                os.path.abspath(self.filename + \'.msgfmt.mo\'),"},"111":{"hits":4,"time":0.000019550323486328125,"time_per_hit":0.000004887580871582031,"percent":0.0023404591752564374,"line":"                os.path.abspath(self.filename + \'.pocompile.mo\'))"},"112":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"113":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def remove_po_and_mo(self):"},"114":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        for file in self.get_mo_and_po():"},"115":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if os.path.exists(file):"},"116":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                os.remove(file)"},"117":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"118":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def setup_method(self, method):"},"119":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        test_base.TestTranslationStore.setup_method(self, method)"},"120":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        self.remove_po_and_mo()"},"121":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"122":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def teardown_method(self, method):"},"123":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        test_base.TestTranslationStore.teardown_method(self, method)"},"124":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        self.remove_po_and_mo()"},"125":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"126":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def test_language(self):"},"127":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Test that we can return the target language correctly.\\"\\"\\""},"128":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        store = self.StoreClass()"},"129":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        store.updateheader(add=True, Language=\\"zu\\")"},"130":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        assert store.gettargetlanguage() == \\"zu\\""},"131":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"132":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def test_context(self):"},"133":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        store = self.StoreClass()"},"134":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        unit = self.StoreClass.UnitClass(\'source\')"},"135":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        unit.target = \'target\'"},"136":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        unit.setcontext(\'context\')"},"137":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        store.addunit(unit)"},"138":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        assert b\'context\' in store.__bytes__()"},"139":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"140":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    from HeatMapProfiler import heat_map"},"141":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"142":{"hits":1,"time":0.000010967254638671875,"time_per_hit":0.000010967254638671875,"percent":0.001312940512948733,"line":"    @heat_map()"},"143":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def test_output(self):"},"144":{"hits":5,"time":0.00002765655517578125,"time_per_hit":0.00000553131103515625,"percent":0.0033108934674359355,"line":"        for posource in posources:"},"145":{"hits":4,"time":0.00006270408630371094,"time_per_hit":0.000015676021575927734,"percent":0.007506594671859061,"line":"            print(\\"PO source file\\")"},"146":{"hits":4,"time":0.0000438690185546875,"time_per_hit":0.000010967254638671875,"percent":0.005251762051794932,"line":"            print(posource)"},"147":{"hits":4,"time":0.000035762786865234375,"time_per_hit":0.000008940696716308594,"percent":0.004281327759615434,"line":"            PO_FILE, MO_MSGFMT, MO_POCOMPILE = self.get_mo_and_po()"},"148":{"hits":4,"time":0.000012874603271484375,"time_per_hit":0.0000032186508178710938,"percent":0.0015412779934615563,"line":"            posource = posource.encode(\'utf-8\')"},"149":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"150":{"hits":4,"time":0.00020265579223632812,"time_per_hit":0.00005066394805908203,"percent":0.02426085730448746,"line":"            with open(PO_FILE, \'wb\') as out_file:"},"151":{"hits":4,"time":0.0001785755157470703,"time_per_hit":0.00004464387893676758,"percent":0.021378096613013067,"line":"                out_file.write(posource)"},"152":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"153":{"hits":4,"time":0.00016045570373535156,"time_per_hit":0.00004011392593383789,"percent":0.019208890548141247,"line":"            subprocess.call([\'msgfmt\', PO_FILE, \'-o\', MO_MSGFMT])"},"154":{"hits":4,"time":0.00017213821411132812,"time_per_hit":0.00004303455352783203,"percent":0.020607457616282288,"line":"            subprocess.call([\'pocompile\', \'--errorlevel=traceback\', PO_FILE, MO_POCOMPILE])"},"155":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"156":{"hits":4,"time":0.00012135505676269531,"time_per_hit":0.000030338764190673828,"percent":0.014527972197628372,"line":"            store = factory.getobject(BytesIO(posource))"},"157":{"hits":4,"time":0.00003719329833984375,"time_per_hit":0.000009298324584960938,"percent":0.004452580870000051,"line":"            if store.isempty() and not os.path.exists(MO_POCOMPILE):"},"158":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                # pocompile doesn\'t create MO files for empty PO files, so we"},"159":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                # can skip the checks here."},"160":{"hits":1,"time":0.0000040531158447265625,"time_per_hit":0.0000040531158447265625,"percent":0.0004852171460897492,"line":"                continue"},"161":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"162":{"hits":3,"time":0.00011658668518066406,"time_per_hit":0.00003886222839355469,"percent":0.013957128496346316,"line":"            with open(MO_MSGFMT, \'rb\') as mo_msgfmt_f:"},"163":{"hits":3,"time":0.00007939338684082031,"time_per_hit":0.000026464462280273438,"percent":0.009504547626346263,"line":"                mo_msgfmt = mo_msgfmt_f.read()"},"164":{"hits":3,"time":0.0000743865966796875,"time_per_hit":0.0000247955322265625,"percent":0.008905161740000103,"line":"            print(\\"msgfmt output:\\")"},"165":{"hits":3,"time":0.000038623809814453125,"time_per_hit":0.000012874603271484375,"percent":0.004623833980384668,"line":"            print(repr(mo_msgfmt))"},"166":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"167":{"hits":3,"time":0.00004172325134277344,"time_per_hit":0.000013907750447591146,"percent":0.004994882386218006,"line":"            with open(MO_POCOMPILE, \'rb\') as mo_pocompile_f:"},"168":{"hits":3,"time":0.00003600120544433594,"time_per_hit":0.000012000401814778646,"percent":0.004309869944679537,"line":"                mo_pocompile = mo_pocompile_f.read()"},"169":{"hits":3,"time":0.00003361701965332031,"time_per_hit":0.000011205673217773438,"percent":0.004024448094038508,"line":"            print(\\"pocompile output:\\")"},"170":{"hits":3,"time":0.00003457069396972656,"time_per_hit":0.000011523564656575521,"percent":0.00413861683429492,"line":"            print(repr(mo_pocompile))"},"171":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"172":{"hits":3,"time":0.000008821487426757812,"time_per_hit":0.000002940495808919271,"percent":0.001056060847371807,"line":"            assert mo_msgfmt == mo_pocompile"},"file_total_time":0.0016126632690429688,"file_total_time_percent":0.19305933977359196},"translate/misc/dictutils.py":{"1":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# -*- coding: utf-8 -*-"},"2":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"3":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# Copyright 2002, 2003 St James Software"},"4":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#"},"5":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# This file is part of translate."},"6":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#"},"7":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# translate is free software; you can redistribute it and/or modify"},"8":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# it under the terms of the GNU General Public License as published by"},"9":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# the Free Software Foundation; either version 2 of the License, or"},"10":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# (at your option) any later version."},"11":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#"},"12":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# translate is distributed in the hope that it will be useful,"},"13":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# but WITHOUT ANY WARRANTY; without even the implied warranty of"},"14":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the"},"15":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# GNU General Public License for more details."},"16":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#"},"17":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# You should have received a copy of the GNU General Public License"},"18":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# along with this program; if not, see <http://www.gnu.org/licenses/>."},"19":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"20":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"\\"\\"\\"Implements a case-insensitive (on keys) dictionary and order-sensitive"},"21":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"dictionary"},"22":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"\\"\\"\\""},"23":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"24":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"import six"},"25":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"26":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"27":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"class cidict(dict):"},"28":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"29":{"hits":8,"time":0.000014781951904296875,"time_per_hit":0.0000018477439880371094,"percent":0.0017696154739743795,"line":"    def __init__(self, fromdict=None):"},"30":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"constructs the cidict, optionally using another dict to do so\\"\\"\\""},"31":{"hits":8,"time":0.000017404556274414062,"time_per_hit":0.000002175569534301758,"percent":0.002083579509679511,"line":"        if fromdict is not None:"},"32":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            self.update(fromdict)"},"33":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"34":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def __getitem__(self, key):"},"35":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if not isinstance(key, six.string_types):"},"36":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            raise TypeError(\\"cidict can only have str or unicode as key (got %r)\\" %"},"37":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                            type(key))"},"38":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        for akey in self.keys():"},"39":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if akey.lower() == key.lower():"},"40":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                return dict.__getitem__(self, akey)"},"41":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        raise IndexError"},"42":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"43":{"hits":40,"time":0.00004935264587402344,"time_per_hit":0.000001233816146850586,"percent":0.005908232308269299,"line":"    def __setitem__(self, key, value):"},"44":{"hits":40,"time":0.00006222724914550781,"time_per_hit":0.0000015556812286376954,"percent":0.007449510301730855,"line":"        if not isinstance(key, six.string_types):"},"45":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            raise TypeError(\\"cidict can only have str or unicode as key (got %r)\\" %"},"46":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                            type(key))"},"47":{"hits":220,"time":0.000278472900390625,"time_per_hit":0.0000012657859108664774,"percent":0.03333727215487218,"line":"        for akey in self.keys():"},"48":{"hits":180,"time":0.0002536773681640625,"time_per_hit":0.0000014093187120225695,"percent":0.03036888490820548,"line":"            if akey.lower() == key.lower():"},"49":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                return dict.__setitem__(self, akey, value)"},"50":{"hits":40,"time":0.000072479248046875,"time_per_hit":0.000001811981201171875,"percent":0.00867682425948728,"line":"        return dict.__setitem__(self, key, value)"},"51":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"52":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def update(self, updatedict):"},"53":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"D.update(E) -> None."},"54":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        Update D from E: for k in E.keys(): D[k] = E[k]"},"55":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\""},"56":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        for key, value in six.iteritems(updatedict):"},"57":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            self[key] = value"},"58":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"59":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def __delitem__(self, key):"},"60":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if not isinstance(key, six.string_types):"},"61":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            raise TypeError(\\"cidict can only have str or unicode as key (got %r)\\" %"},"62":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                            type(key))"},"63":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        for akey in self.keys():"},"64":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if akey.lower() == key.lower():"},"65":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                return dict.__delitem__(self, akey)"},"66":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        raise IndexError"},"67":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"68":{"hits":112,"time":0.0001289844512939453,"time_per_hit":0.0000011516468865530832,"percent":0.015441322119679666,"line":"    def __contains__(self, key):"},"69":{"hits":112,"time":0.00016117095947265625,"time_per_hit":0.0000014390264238630022,"percent":0.019294517103333558,"line":"        if not isinstance(key, six.string_types):"},"70":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            raise TypeError(\\"cidict can only have str or unicode as key (got %r)\\" %"},"71":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                            type(key))"},"72":{"hits":136,"time":0.00019216537475585938,"time_per_hit":0.0000014129806967342602,"percent":0.02300500116166693,"line":"        for akey in self.keys():"},"73":{"hits":64,"time":0.00010013580322265625,"time_per_hit":0.000001564621925354004,"percent":0.011987717726923214,"line":"            if akey.lower() == key.lower():"},"74":{"hits":40,"time":0.00005316734313964844,"time_per_hit":0.000001329183578491211,"percent":0.006364907269294945,"line":"                return 1"},"75":{"hits":72,"time":0.00009822845458984375,"time_per_hit":0.0000013642840915256077,"percent":0.011759380246410392,"line":"        return 0"},"76":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"77":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def get(self, key, default=None):"},"78":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if key in self:"},"79":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            return self[key]"},"80":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        else:"},"81":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            return default"},"file_total_time":0.001482248306274414,"file_total_time_percent":0.1774467645435277},"translate/misc/quote.py":{"1":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# -*- coding: utf-8 -*-"},"2":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#"},"3":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# Copyright 2002-2006 Zuza Software Foundation"},"4":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#"},"5":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# This file is part of translate."},"6":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#"},"7":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# translate is free software; you can redistribute it and/or modify"},"8":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# it under the terms of the GNU General Public License as published by"},"9":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# the Free Software Foundation; either version 2 of the License, or"},"10":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# (at your option) any later version."},"11":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#"},"12":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# translate is distributed in the hope that it will be useful,"},"13":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# but WITHOUT ANY WARRANTY; without even the implied warranty of"},"14":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the"},"15":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# GNU General Public License for more details."},"16":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#"},"17":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# You should have received a copy of the GNU General Public License"},"18":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# along with this program; if not, see <http://www.gnu.org/licenses/>."},"19":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"20":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"\\"\\"\\"String processing utilities for extracting strings with various kinds of"},"21":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"delimiters"},"22":{"hits":2,"time":0.00002574920654296875,"time_per_hit":0.000012874603271484375,"percent":0.0030825559869231125,"line":"\\"\\"\\""},"23":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"24":{"hits":1,"time":0.0000045299530029296875,"time_per_hit":0.0000045299530029296875,"percent":0.000542301516217955,"line":"import logging"},"25":{"hits":1,"time":0.0000064373016357421875,"time_per_hit":0.0000064373016357421875,"percent":0.0007706389967307781,"line":"import six"},"26":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"27":{"hits":1,"time":0.000040531158447265625,"time_per_hit":0.000040531158447265625,"percent":0.004852171460897492,"line":"from six.moves import html_entities"},"28":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"29":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"30":{"hits":73,"time":0.00010251998901367188,"time_per_hit":0.00000140438341114619,"percent":0.012273139577564244,"line":"def find_all(searchin, substr):"},"31":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\"Returns a list of locations where substr occurs in searchin locations"},"32":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    are not allowed to overlap"},"33":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\""},"34":{"hits":72,"time":0.00011467933654785156,"time_per_hit":0.000001592768563164605,"percent":0.013728791015833491,"line":"    location = 0"},"35":{"hits":72,"time":0.00010013580322265625,"time_per_hit":0.0000013907750447591145,"percent":0.011987717726923214,"line":"    locations = []"},"36":{"hits":72,"time":0.00009775161743164062,"time_per_hit":0.000001357661353217231,"percent":0.011702295876282187,"line":"    substr_len = len(substr)"},"37":{"hits":200,"time":0.00024509429931640625,"time_per_hit":0.0000012254714965820312,"percent":0.029341366245897775,"line":"    while location != -1:"},"38":{"hits":128,"time":0.00017786026000976562,"time_per_hit":0.000001389533281326294,"percent":0.02129247005782076,"line":"        location = searchin.find(substr, location)"},"39":{"hits":128,"time":0.0001571178436279297,"time_per_hit":0.0000012274831533432007,"percent":0.018809299957243807,"line":"        if location != -1:"},"40":{"hits":56,"time":0.00006914138793945312,"time_per_hit":0.0000012346676417759487,"percent":0.00827723366858984,"line":"            locations.append(location)"},"41":{"hits":56,"time":0.00006747245788574219,"time_per_hit":0.0000012048653193882534,"percent":0.008077438373141118,"line":"            location += substr_len"},"42":{"hits":72,"time":0.00008106231689453125,"time_per_hit":0.0000011258655124240452,"percent":0.009704342921794984,"line":"    return locations"},"43":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"44":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"45":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"def extract(source, startdelim, enddelim,"},"46":{"hits":1,"time":0.0000059604644775390625,"time_per_hit":0.0000059604644775390625,"percent":0.0007135546266025724,"line":"            escape=None, startinstring=False, allowreentry=True):"},"47":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\"Extracts a doublequote-delimited string from a string, allowing for"},"48":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    backslash-escaping returns tuple of (quoted string with quotes, still in"},"49":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    string at end)."},"50":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\""},"51":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    # Note that this returns the quote characters as well... even internally"},"52":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    instring = startinstring"},"53":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    enteredonce = False"},"54":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    lenstart = len(startdelim)"},"55":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    lenend = len(enddelim)"},"56":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    startdelim_places = find_all(source, startdelim)"},"57":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    if startdelim == enddelim:"},"58":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        enddelim_places = startdelim_places[:]"},"59":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    else:"},"60":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        enddelim_places = find_all(source, enddelim)"},"61":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    if escape is not None:"},"62":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        lenescape = len(escape)"},"63":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        escape_places = find_all(source, escape)"},"64":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        # Filter escaped escapes"},"65":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        true_escape = False"},"66":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        true_escape_places = []"},"67":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        for escape_pos in escape_places:"},"68":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if escape_pos - lenescape in escape_places:"},"69":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                true_escape = not true_escape"},"70":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            else:"},"71":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                true_escape = True"},"72":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if true_escape:"},"73":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                true_escape_places.append(escape_pos)"},"74":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        startdelim_places = [pos for pos in startdelim_places if pos - lenescape not in true_escape_places]"},"75":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        enddelim_places = [pos + lenend for pos in enddelim_places if pos - lenescape not in true_escape_places]"},"76":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    else:"},"77":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        enddelim_places = [pos + lenend for pos in enddelim_places]"},"78":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    # Get a unique sorted list of the significant places in the string"},"79":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    significant_places = [0] + startdelim_places + enddelim_places + [len(source)-1]"},"80":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    significant_places.sort()"},"81":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    extracted = \\"\\""},"82":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    lastpos = None"},"83":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    for pos in significant_places:"},"84":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if instring and pos in enddelim_places:"},"85":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            # Make sure that if startdelim == enddelim we don\'t get confused"},"86":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            # and count the same string as start and end."},"87":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if lastpos == pos - lenstart and lastpos in startdelim_places:"},"88":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                continue"},"89":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            extracted += source[lastpos:pos]"},"90":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            instring = False"},"91":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            lastpos = pos"},"92":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if ((not instring) and pos in startdelim_places and"},"93":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            not (enteredonce and not allowreentry)):"},"94":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            instring = True"},"95":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            enteredonce = True"},"96":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            lastpos = pos"},"97":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    if instring:"},"98":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        extracted += source[lastpos:]"},"99":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    return (extracted, instring)"},"100":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"101":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"102":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"def extractwithoutquotes(source, startdelim, enddelim, escape=None,"},"103":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                         startinstring=False, includeescapes=True,"},"104":{"hits":1,"time":0.0000059604644775390625,"time_per_hit":0.0000059604644775390625,"percent":0.0007135546266025724,"line":"                         allowreentry=True):"},"105":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\"Extracts a doublequote-delimited string from a string, allowing for"},"106":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    backslash-escaping includeescapes can also be a function that takes the"},"107":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    whole escaped string and returns the replaced version."},"108":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\""},"109":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    instring = startinstring"},"110":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    enteredonce = False"},"111":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    lenstart = len(startdelim)"},"112":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    lenend = len(enddelim)"},"113":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    startdelim_places = find_all(source, startdelim)"},"114":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    if startdelim == enddelim:"},"115":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        enddelim_places = startdelim_places[:]"},"116":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    else:"},"117":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        enddelim_places = find_all(source, enddelim)"},"118":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    #hell slow because it is called far too often"},"119":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    if escape is not None:"},"120":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        lenescape = len(escape)"},"121":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        escape_places = find_all(source, escape)"},"122":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        # filter escaped escapes"},"123":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        true_escape = False"},"124":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        true_escape_places = []"},"125":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        for escape_pos in escape_places:"},"126":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if escape_pos - lenescape in escape_places:"},"127":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                true_escape = not true_escape"},"128":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            else:"},"129":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                true_escape = True"},"130":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if true_escape:"},"131":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                true_escape_places.append(escape_pos)"},"132":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        startdelim_places = [pos for pos in startdelim_places if pos - lenescape not in true_escape_places]"},"133":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        enddelim_places = [pos + lenend for pos in enddelim_places if pos - lenescape not in true_escape_places]"},"134":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    else:"},"135":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        enddelim_places = [pos + lenend for pos in enddelim_places]"},"136":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    # get a unique sorted list of the significant places in the string"},"137":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    significant_places = [0] + startdelim_places + enddelim_places + [len(source)-1]"},"138":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    significant_places.sort()"},"139":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    extracted = \\"\\""},"140":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    lastpos = 0"},"141":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    callable_includeescapes = callable(includeescapes)"},"142":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    checkescapes = callable_includeescapes or not includeescapes"},"143":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    for pos in significant_places:"},"144":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if instring and pos in enddelim_places and lastpos != pos - lenstart:"},"145":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            section_start, section_end = lastpos + len(startdelim), pos - len(enddelim)"},"146":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            section = source[section_start:section_end]"},"147":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if escape is not None and checkescapes:"},"148":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                escape_list = [epos - section_start for epos in true_escape_places if section_start <= epos <= section_end]"},"149":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                new_section = \\"\\""},"150":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                last_epos = 0"},"151":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                for epos in escape_list:"},"152":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    new_section += section[last_epos:epos]"},"153":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    if callable_includeescapes:"},"154":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                        replace_escape = includeescapes(section[epos:epos + lenescape + 1])"},"155":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                        # TODO: deprecate old method of returning boolean from"},"156":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                        # includeescape, by removing this if block"},"157":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                        if not isinstance(replace_escape, six.string_types):"},"158":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                            if replace_escape:"},"159":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                                replace_escape = section[epos:epos + lenescape + 1]"},"160":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                            else:"},"161":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                                replace_escape = section[epos + lenescape:epos + lenescape + 1]"},"162":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                        new_section += replace_escape"},"163":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                        last_epos = epos + lenescape + 1"},"164":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    else:"},"165":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                        last_epos = epos + lenescape"},"166":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                section = new_section + section[last_epos:]"},"167":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            extracted += section"},"168":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            instring = False"},"169":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            lastpos = pos"},"170":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if ((not instring) and pos in startdelim_places and"},"171":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            not (enteredonce and not allowreentry)):"},"172":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            instring = True"},"173":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            enteredonce = True"},"174":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            lastpos = pos"},"175":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    if instring:"},"176":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        section_start = lastpos + len(startdelim)"},"177":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        section = source[section_start:]"},"178":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if escape is not None and not includeescapes:"},"179":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            escape_list = [epos - section_start for epos in true_escape_places if section_start <= epos]"},"180":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            new_section = \\"\\""},"181":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            last_epos = 0"},"182":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            for epos in escape_list:"},"183":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                new_section += section[last_epos:epos]"},"184":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                if (callable_includeescapes and"},"185":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    includeescapes(section[epos:epos + lenescape + 1])):"},"186":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    last_epos = epos"},"187":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                else:"},"188":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    last_epos = epos + lenescape"},"189":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            section = new_section + section[last_epos:]"},"190":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        extracted += section"},"191":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    return (extracted, instring)"},"192":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"193":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"194":{"hits":1,"time":0.000005245208740234375,"time_per_hit":0.000005245208740234375,"percent":0.0006279280714102637,"line":"def _encode_entity_char(char, codepoint2name):"},"195":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    charnum = ord(char)"},"196":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    if charnum in codepoint2name:"},"197":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return u\\"&%s;\\" % codepoint2name[charnum]"},"198":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    else:"},"199":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return char"},"200":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"201":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"202":{"hits":1,"time":0.0000054836273193359375,"time_per_hit":0.0000054836273193359375,"percent":0.0006564702564743665,"line":"def entityencode(source, codepoint2name):"},"203":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\"Encode ``source`` using entities from ``codepoint2name``."},"204":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"205":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    :param unicode source: Source string to encode"},"206":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    :param codepoint2name: Dictionary mapping code points to entity names"},"207":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"           (without the the leading ``&`` or the trailing ``;``)"},"208":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    :type codepoint2name: :meth:`dict`"},"209":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\""},"210":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    output = u\\"\\""},"211":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    inentity = False"},"212":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    for char in source:"},"213":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if char == \\"&\\":"},"214":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            inentity = True"},"215":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            possibleentity = \\"\\""},"216":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            continue"},"217":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if inentity:"},"218":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if char == \\";\\":"},"219":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                output += \\"&\\" + possibleentity + \\";\\""},"220":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                inentity = False"},"221":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            elif char == \\" \\":"},"222":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                output += (_encode_entity_char(\\"&\\", codepoint2name) +"},"223":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                           entityencode(possibleentity + char, codepoint2name))"},"224":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                inentity = False"},"225":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            else:"},"226":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                possibleentity += char"},"227":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        else:"},"228":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            output += _encode_entity_char(char, codepoint2name)"},"229":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    if inentity:"},"230":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        # Handle nonentities at end of string."},"231":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        output += (_encode_entity_char(\\"&\\", codepoint2name) +"},"232":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                   entityencode(possibleentity, codepoint2name))"},"233":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"234":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    return output"},"235":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"236":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"237":{"hits":1,"time":0.000005245208740234375,"time_per_hit":0.000005245208740234375,"percent":0.0006279280714102637,"line":"def _has_entity_end(source):"},"238":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    for char in source:"},"239":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if char == \\";\\":"},"240":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            return True"},"241":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        elif char == \\" \\":"},"242":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            return False"},"243":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    return False"},"244":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"245":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"246":{"hits":1,"time":0.0000057220458984375,"time_per_hit":0.0000057220458984375,"percent":0.0006850124415384694,"line":"def entitydecode(source, name2codepoint):"},"247":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\"Decode ``source`` using entities from ``name2codepoint``."},"248":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"249":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    :param unicode source: Source string to decode"},"250":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    :param name2codepoint: Dictionary mapping entity names (without the"},"251":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"           the leading ``&`` or the trailing ``;``) to code points"},"252":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    :type name2codepoint: :meth:`dict`"},"253":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\""},"254":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    output = u\\"\\""},"255":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    inentity = False"},"256":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    for i, char in enumerate(source):"},"257":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        char = source[i]"},"258":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if char == \\"&\\":"},"259":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            inentity = True"},"260":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            possibleentity = \\"\\""},"261":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            continue"},"262":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if inentity:"},"263":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if char == \\";\\":"},"264":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                if (len(possibleentity) > 0 and"},"265":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    possibleentity in name2codepoint):"},"266":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    entchar = six.unichr(name2codepoint[possibleentity])"},"267":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    if entchar == u\'&\' and _has_entity_end(source[i+1:]):"},"268":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                        output += \\"&\\" + possibleentity + \\";\\""},"269":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    else:"},"270":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                        output += entchar"},"271":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    inentity = False"},"272":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                else:"},"273":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    output += \\"&\\" + possibleentity + \\";\\""},"274":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    inentity = False"},"275":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            elif char == \\" \\":"},"276":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                output += \\"&\\" + possibleentity + char"},"277":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                inentity = False"},"278":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            else:"},"279":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                possibleentity += char"},"280":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        else:"},"281":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            output += char"},"282":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    if inentity:"},"283":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        # Handle nonentities at end of string."},"284":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        output += \\"&\\" + possibleentity"},"285":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    return output"},"286":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"287":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"288":{"hits":1,"time":0.0000054836273193359375,"time_per_hit":0.0000054836273193359375,"percent":0.0006564702564743665,"line":"def htmlentityencode(source):"},"289":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    u\\"\\"\\"Encode ``source`` using HTML entities e.g. \xa9 -> ``&copy;``"},"290":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"291":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    :param unicode source: Source string to encode"},"292":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\""},"293":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    return entityencode(source, html_entities.codepoint2name)"},"294":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"295":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"296":{"hits":1,"time":0.0000054836273193359375,"time_per_hit":0.0000054836273193359375,"percent":0.0006564702564743665,"line":"def htmlentitydecode(source):"},"297":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    u\\"\\"\\"Decode source using HTML entities e.g. ``&copy;`` -> \xa9."},"298":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"299":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    :param unicode source: Source string to decode"},"300":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\""},"301":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    return entitydecode(source, html_entities.name2codepoint)"},"302":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"303":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"304":{"hits":1,"time":0.0000054836273193359375,"time_per_hit":0.0000054836273193359375,"percent":0.0006564702564743665,"line":"def javapropertiesencode(source):"},"305":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\"Encodes source in the escaped-unicode encoding used by Java"},"306":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    .properties files"},"307":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\""},"308":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    output = u\\"\\""},"309":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    if source and source[0] == u\\" \\":"},"310":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        output = u\\"\\\\\\\\\\""},"311":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    for char in source:"},"312":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        charnum = ord(char)"},"313":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if char in controlchars:"},"314":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            output += controlchars[char]"},"315":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        elif 0 <= charnum < 128:"},"316":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            output += str(char)"},"317":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        else:"},"318":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            output += u\\"\\\\\\\\u%04X\\" % charnum"},"319":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    return output"},"320":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"321":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"322":{"hits":1,"time":0.0000057220458984375,"time_per_hit":0.0000057220458984375,"percent":0.0006850124415384694,"line":"def java_utf8_properties_encode(source):"},"323":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\"Encodes source in the escaped-unicode encoding used by java utf-8"},"324":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    .properties files."},"325":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\""},"326":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    output = u\\"\\""},"327":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    for char in source:"},"328":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if char in controlchars:"},"329":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            output += controlchars[char]"},"330":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        else:"},"331":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            output += char"},"332":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    return output"},"333":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"334":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"335":{"hits":1,"time":0.0000057220458984375,"time_per_hit":0.0000057220458984375,"percent":0.0006850124415384694,"line":"def escapespace(char):"},"336":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    assert(len(char) == 1)"},"337":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    if char.isspace():"},"338":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return u\\"\\\\\\\\u%04X\\" % ord(char)"},"339":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    return char"},"340":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"341":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"342":{"hits":1,"time":0.000005245208740234375,"time_per_hit":0.000005245208740234375,"percent":0.0006279280714102637,"line":"def mozillaescapemarginspaces(source):"},"343":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\"Escape leading and trailing spaces for Mozilla .properties files.\\"\\"\\""},"344":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    if not source:"},"345":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return u\\"\\""},"346":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"347":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    if len(source) == 1 and source.isspace():"},"348":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        # FIXME: This is hack for people using white-space to mark empty"},"349":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        # Mozilla strings translated, drop this once we have better way to"},"350":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        # handle this in Pootle."},"351":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return u\\"\\""},"352":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"353":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    if len(source) == 1:"},"354":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return escapespace(source)"},"355":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    else:"},"356":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return escapespace(source[0]) + source[1:-1] + escapespace(source[-1])"},"357":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"358":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"359":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"propertyescapes = {"},"360":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    # escapes that are self-escaping"},"361":{"hits":1,"time":0.0000069141387939453125,"time_per_hit":0.0000069141387939453125,"percent":0.0008277233668589839,"line":"    \\"\\\\\\\\\\": \\"\\\\\\\\\\", \\"\'\\": \\"\'\\", \'\\"\': \'\\"\',"},"362":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    # control characters that we keep"},"363":{"hits":1,"time":0.0000059604644775390625,"time_per_hit":0.0000059604644775390625,"percent":0.0007135546266025724,"line":"    \\"f\\": \\"\\\\f\\", \\"n\\": \\"\\\\n\\", \\"r\\": \\"\\\\r\\", \\"t\\": \\"\\\\t\\","},"364":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"}"},"365":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"366":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"controlchars = {"},"367":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    # the reverse of the above..."},"368":{"hits":1,"time":0.0000054836273193359375,"time_per_hit":0.0000054836273193359375,"percent":0.0006564702564743665,"line":"    \\"\\\\\\\\\\": \\"\\\\\\\\\\\\\\\\\\","},"369":{"hits":1,"time":0.000008106231689453125,"time_per_hit":0.000008106231689453125,"percent":0.0009704342921794984,"line":"    \\"\\\\f\\": \\"\\\\\\\\f\\", \\"\\\\n\\": \\"\\\\\\\\n\\", \\"\\\\r\\": \\"\\\\\\\\r\\", \\"\\\\t\\": \\"\\\\\\\\t\\","},"370":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"}"},"371":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"372":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"373":{"hits":1,"time":0.0000057220458984375,"time_per_hit":0.0000057220458984375,"percent":0.0006850124415384694,"line":"def escapecontrols(source):"},"374":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\"escape control characters in the given string\\"\\"\\""},"375":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    for key, value in six.iteritems(controlchars):"},"376":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        source = source.replace(key, value)"},"377":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    return source"},"378":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"379":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"380":{"hits":1,"time":0.0000057220458984375,"time_per_hit":0.0000057220458984375,"percent":0.0006850124415384694,"line":"def propertiesdecode(source):"},"381":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\"Decodes source from the escaped-unicode encoding used by .properties"},"382":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    files."},"383":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"384":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    Java uses Latin1 by default, and Mozilla uses UTF-8 by default."},"385":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"386":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    Since the .decode(\\"unicode-escape\\") routine decodes everything, and we"},"387":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    don\'t want to we reimplemented the algorithm from Python Objects/unicode.c"},"388":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    in Python and modify it to retain escaped control characters."},"389":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\""},"390":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    output = u\\"\\""},"391":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    s = 0"},"392":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"393":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def unichr2(i):"},"394":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Returns a Unicode string of one character with ordinal 32 <= i,"},"395":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        otherwise an escaped control character."},"396":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\""},"397":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if 32 <= i:"},"398":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            return six.unichr(i)"},"399":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        elif six.unichr(i) in controlchars:"},"400":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            # we just return the character, unescaped"},"401":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            # if people want to escape them they can use escapecontrols"},"402":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            return six.unichr(i)"},"403":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return \\"\\\\\\\\u%04x\\" % i"},"404":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"405":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    while s < len(source):"},"406":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        c = source[s]"},"407":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if c != \'\\\\\\\\\':"},"408":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            output += c"},"409":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            s += 1"},"410":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            continue"},"411":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        s += 1"},"412":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if s >= len(source):"},"413":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            # this is an escape at the end of the line, which implies"},"414":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            # a continuation..., return the escape to inform the parser"},"415":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            output += c"},"416":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            continue"},"417":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        c = source[s]"},"418":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        s += 1"},"419":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if c == \'\\\\n\':"},"420":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            pass"},"421":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        # propertyescapes lookups"},"422":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        elif c in propertyescapes:"},"423":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            output += propertyescapes[c]"},"424":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        # \\\\uXXXX escapes"},"425":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        # \\\\UXXXX escapes"},"426":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        elif c in \\"uU\\":"},"427":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            digits = 4"},"428":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            x = 0"},"429":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            for digit in range(digits):"},"430":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                if s + digit >= len(source):"},"431":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    digits = digit"},"432":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    break"},"433":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                c = source[s + digit].lower()"},"434":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                if c.isdigit() or c in \\"abcdef\\":"},"435":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    x <<= 4"},"436":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    if c.isdigit():"},"437":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                        x += ord(c) - ord(\'0\')"},"438":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    else:"},"439":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                        x += ord(c) - ord(\'a\') + 10"},"440":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                else:"},"441":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    digits = digit"},"442":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    break"},"443":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            s += digits"},"444":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            output += unichr2(x)"},"445":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        elif c == \\"N\\":"},"446":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if source[s] != \\"{\\":"},"447":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                logging.warn(\\"Invalid named unicode escape: no { after \\\\\\\\N\\")"},"448":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                output += \\"\\\\\\\\\\" + c"},"449":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                continue"},"450":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            s += 1"},"451":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            e = source.find(\\"}\\", s)"},"452":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if e == -1:"},"453":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                logging.warn(\\"Invalid named unicode escape: no } after \\\\\\\\N{\\")"},"454":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                output += \\"\\\\\\\\\\" + c"},"455":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                continue"},"456":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            import unicodedata"},"457":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            name = source[s:e]"},"458":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            output += unicodedata.lookup(name)"},"459":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            s = e + 1"},"460":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        else:"},"461":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            output += c  # Drop any \\\\ that we don\'t specifically handle"},"462":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    return output"},"463":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"464":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"465":{"hits":1,"time":0.0000054836273193359375,"time_per_hit":0.0000054836273193359375,"percent":0.0006564702564743665,"line":"def findend(string, substring):"},"466":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    s = string.find(substring)"},"467":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    if s != -1:"},"468":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        s += len(substring)"},"469":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    return s"},"470":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"471":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"472":{"hits":1,"time":0.000005245208740234375,"time_per_hit":0.000005245208740234375,"percent":0.0006279280714102637,"line":"def rstripeol(string):"},"473":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    return string.rstrip(\\"\\\\r\\\\n\\")"},"474":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"475":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"476":{"hits":1,"time":0.0000057220458984375,"time_per_hit":0.0000057220458984375,"percent":0.0006850124415384694,"line":"def stripcomment(comment, startstring=\\"\x3c!--\\", endstring=\\"--\x3e\\"):"},"477":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    cstart = comment.find(startstring)"},"478":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    if cstart == -1:"},"479":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        cstart = 0"},"480":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    else:"},"481":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        cstart += len(startstring)"},"482":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    cend = comment.find(endstring, cstart)"},"483":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    return comment[cstart:cend].strip()"},"484":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"485":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"486":{"hits":1,"time":0.0000054836273193359375,"time_per_hit":0.0000054836273193359375,"percent":0.0006564702564743665,"line":"def unstripcomment(comment, startstring=\\"\x3c!-- \\", endstring=\\" --\x3e\\\\n\\"):"},"487":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    return startstring + comment.strip() + endstring"},"file_total_time":0.0014166831970214844,"file_total_time_percent":0.1695976636508994},"translate/storage/factory.py":{"1":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# -*- coding: utf-8 -*-"},"2":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#"},"3":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# Copyright 2006-2010 Zuza Software Foundation"},"4":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#"},"5":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# This file is part of translate."},"6":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#"},"7":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# translate is free software; you can redistribute it and/or modify"},"8":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# it under the terms of the GNU General Public License as published by"},"9":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# the Free Software Foundation; either version 2 of the License, or"},"10":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# (at your option) any later version."},"11":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#"},"12":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# translate is distributed in the hope that it will be useful,"},"13":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# but WITHOUT ANY WARRANTY; without even the implied warranty of"},"14":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the"},"15":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# GNU General Public License for more details."},"16":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#"},"17":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# You should have received a copy of the GNU General Public License"},"18":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# along with this program; if not, see <http://www.gnu.org/licenses/>."},"19":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"20":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"\\"\\"\\"factory methods to build real storage objects that conform to base.py\\"\\"\\""},"21":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"22":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"import os"},"23":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"import six"},"24":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"25":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"26":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#TODO: Monolingual formats (with template?)"},"27":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"28":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"decompressclass = {"},"29":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \'gz\': (\\"gzip\\", \\"GzipFile\\"),"},"30":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \'bz2\': (\\"bz2\\", \\"BZ2File\\"),"},"31":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"}"},"32":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"33":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"34":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"_classes_str = {"},"35":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"csv\\": (\\"csvl10n\\", \\"csvfile\\"),"},"36":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"tab\\": (\\"omegat\\", \\"OmegaTFileTab\\"), \\"utf8\\": (\\"omegat\\", \\"OmegaTFile\\"),"},"37":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"po\\": (\\"po\\", \\"pofile\\"), \\"pot\\": (\\"po\\", \\"pofile\\"),"},"38":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"mo\\": (\\"mo\\", \\"mofile\\"), \\"gmo\\": (\\"mo\\", \\"mofile\\"),"},"39":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"qm\\": (\\"qm\\", \\"qmfile\\"),"},"40":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"lang\\": (\\"mozilla_lang\\", \\"LangStore\\"),"},"41":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"utx\\": (\\"utx\\", \\"UtxFile\\"),"},"42":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"_wftm\\": (\\"wordfast\\", \\"WordfastTMFile\\"),"},"43":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"_trados_txt_tm\\": (\\"trados\\", \\"TradosTxtTmFile\\"),"},"44":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"catkeys\\": (\\"catkeys\\", \\"CatkeysFile\\"),"},"45":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"46":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"qph\\": (\\"qph\\", \\"QphFile\\"),"},"47":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"tbx\\": (\\"tbx\\", \\"tbxfile\\"),"},"48":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"tmx\\": (\\"tmx\\", \\"tmxfile\\"),"},"49":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"ts\\": (\\"ts2\\", \\"tsfile\\"),"},"50":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"xliff\\": (\\"xliff\\", \\"xlifffile\\"), \\"xlf\\": (\\"xliff\\", \\"xlifffile\\"),"},"51":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"sdlxliff\\": (\\"xliff\\", \\"xlifffile\\"),"},"52":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"53":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    # Monolingual formats"},"54":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"ftl\\": (\\"l20n\\", \\"l20nfile\\"),"},"55":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"}"},"56":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"###  XXX:  if you add anything here, you must also add it to translate.storage."},"57":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"58":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"\\"\\"\\"Dictionary of file extensions and the names of their associated class."},"59":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"60":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"Used for dynamic lazy loading of modules."},"61":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"_ext is a pseudo extension, that is their is no real extension by that name."},"62":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"\\"\\"\\""},"63":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"64":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"65":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"def _examine_txt(storefile):"},"66":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\"Determine the true filetype for a .txt file\\"\\"\\""},"67":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    if isinstance(storefile, six.string_types) and os.path.exists(storefile):"},"68":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        storefile = open(storefile, \'rb\')"},"69":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    try:"},"70":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        start = storefile.read(600).strip()"},"71":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    except AttributeError:"},"72":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        raise ValueError(\\"Need to read object to determine type\\")"},"73":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    # Some encoding magic for Wordfast"},"74":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    from translate.storage import wordfast"},"75":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    if wordfast.TAB_UTF16 in start.split(b\\"\\\\n\\")[0]:"},"76":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        encoding = \'utf-16\'"},"77":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    else:"},"78":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        encoding = \'iso-8859-1\'"},"79":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    start = start.decode(encoding)"},"80":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    if \'%Wordfast TM\' in start:"},"81":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        pseudo_extension = \'_wftm\'"},"82":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    elif \'<RTF Preamble>\' in start:"},"83":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        pseudo_extension = \'_trados_txt_tm\'"},"84":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    else:"},"85":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        raise ValueError(\\"Failed to guess file type.\\")"},"86":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    storefile.seek(0)"},"87":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    return pseudo_extension"},"88":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"89":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"90":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"_hiddenclasses = {\\"txt\\": _examine_txt}"},"91":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"92":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"93":{"hits":8,"time":0.000019788742065429688,"time_per_hit":0.000002473592758178711,"percent":0.0023690013603205403,"line":"def _guessextention(storefile):"},"94":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\"Guesses the type of a file object by looking at the first few"},"95":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    characters.  The return value is a file extention."},"96":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\""},"97":{"hits":8,"time":0.00004124641418457031,"time_per_hit":0.000005155801773071289,"percent":0.004937798016089801,"line":"    start = storefile.read(300).strip()"},"98":{"hits":8,"time":0.000051975250244140625,"time_per_hit":0.000006496906280517578,"percent":0.006222196343974431,"line":"    if b\'<xliff \' in start:"},"99":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        extention = \'xlf\'"},"100":{"hits":8,"time":0.000015974044799804688,"time_per_hit":0.000001996755599975586,"percent":0.0019123263992948938,"line":"    elif b\'msgid \\"\' in start:"},"101":{"hits":8,"time":0.0000133514404296875,"time_per_hit":0.0000016689300537109375,"percent":0.0015983623635897621,"line":"        extention = \'po\'"},"102":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    elif b\'%Wordfast TM\' in start:"},"103":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        extention = \'txt\'"},"104":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    elif b\'<!DOCTYPE TS>\' in start:"},"105":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        extention = \'ts\'"},"106":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    elif b\'<tmx \' in start:"},"107":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        extention = \'tmx\'"},"108":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    elif b\'#UTX\' in start:"},"109":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        extention = \'utx\'"},"110":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    else:"},"111":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        raise ValueError(\\"Failed to guess file type.\\")"},"112":{"hits":8,"time":0.000026464462280273438,"time_per_hit":0.0000033080577850341797,"percent":0.003168182542115421,"line":"    storefile.seek(0)"},"113":{"hits":8,"time":0.000010967254638671875,"time_per_hit":0.0000013709068298339844,"percent":0.001312940512948733,"line":"    return extention"},"114":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"115":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"116":{"hits":8,"time":0.000013589859008789062,"time_per_hit":0.0000016987323760986328,"percent":0.001626904548653865,"line":"def _getdummyname(storefile):"},"117":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\"Provides a dummy name for a file object without a name attribute, by"},"118":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    guessing the file type."},"119":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\""},"120":{"hits":8,"time":0.00005030632019042969,"time_per_hit":0.000006288290023803711,"percent":0.0060224010485257105,"line":"    return \'dummy.\' + _guessextention(storefile)"},"121":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"122":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"123":{"hits":8,"time":0.000015974044799804688,"time_per_hit":0.000001996755599975586,"percent":0.0019123263992948938,"line":"def _getname(storefile):"},"124":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\"returns the filename\\"\\"\\""},"125":{"hits":8,"time":0.000012636184692382812,"time_per_hit":0.0000015795230865478516,"percent":0.0015127358083974534,"line":"    if storefile is None:"},"126":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        raise ValueError(\\"This method cannot magically produce a filename when given None as input.\\")"},"127":{"hits":8,"time":0.000014543533325195312,"time_per_hit":0.000001817941665649414,"percent":0.0017410732889102764,"line":"    if not isinstance(storefile, six.string_types):"},"128":{"hits":8,"time":0.000023126602172851562,"time_per_hit":0.0000028908252716064453,"percent":0.0027685919512179806,"line":"        if not hasattr(storefile, \\"name\\"):"},"129":{"hits":8,"time":0.00004220008850097656,"time_per_hit":0.00000527501106262207,"percent":0.005051966756346212,"line":"            storefilename = _getdummyname(storefile)"},"130":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        else:"},"131":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            storefilename = storefile.name"},"132":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    else:"},"133":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        storefilename = storefile"},"134":{"hits":8,"time":0.000011205673217773438,"time_per_hit":0.0000014007091522216797,"percent":0.001341482698012836,"line":"    return storefilename"},"135":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"136":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"137":{"hits":4,"time":0.000014543533325195312,"time_per_hit":0.000003635883331298828,"percent":0.0017410732889102764,"line":"def getclass(storefile, localfiletype=None, ignore=None, classes=None,"},"138":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"             classes_str=None, hiddenclasses=None):"},"139":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\"Factory that returns the applicable class for the type of file"},"140":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    presented.  Specify ignore to ignore some part at the back of the name"},"141":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    (like .gz)."},"142":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\""},"143":{"hits":4,"time":0.000026464462280273438,"time_per_hit":0.000006616115570068359,"percent":0.003168182542115421,"line":"    storefilename = _getname(storefile)"},"144":{"hits":4,"time":0.000012636184692382812,"time_per_hit":0.000003159046173095703,"percent":0.0015127358083974534,"line":"    if classes_str is None:"},"145":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        classes_str = _classes_str"},"146":{"hits":4,"time":0.000009775161743164062,"time_per_hit":0.0000024437904357910156,"percent":0.0011702295876282187,"line":"    if hiddenclasses is None:"},"147":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        hiddenclasses = _hiddenclasses"},"148":{"hits":4,"time":0.000008821487426757812,"time_per_hit":0.000002205371856689453,"percent":0.001056060847371807,"line":"    if ignore and storefilename.endswith(ignore):"},"149":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        storefilename = storefilename[:-len(ignore)]"},"150":{"hits":4,"time":0.000009298324584960938,"time_per_hit":0.0000023245811462402344,"percent":0.0011131452175000129,"line":"    ext = localfiletype"},"151":{"hits":4,"time":0.0000095367431640625,"time_per_hit":0.000002384185791015625,"percent":0.0011416874025641157,"line":"    if ext is None:"},"152":{"hits":4,"time":0.000060558319091796875,"time_per_hit":0.000015139579772949219,"percent":0.007249715006282135,"line":"        root, ext = os.path.splitext(storefilename)"},"153":{"hits":4,"time":0.000026702880859375,"time_per_hit":0.00000667572021484375,"percent":0.0031967247271795242,"line":"        ext = ext[len(os.path.extsep):].lower()"},"154":{"hits":4,"time":0.00001049041748046875,"time_per_hit":0.0000026226043701171875,"percent":0.0012558561428205274,"line":"        decomp = None"},"155":{"hits":4,"time":0.00007772445678710938,"time_per_hit":0.000019431114196777344,"percent":0.009304752330897543,"line":"        if ext in decompressclass:"},"156":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            decomp = ext"},"157":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            root, ext = os.path.splitext(root)"},"158":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            ext = ext[len(os.path.extsep):].lower()"},"159":{"hits":4,"time":0.000010967254638671875,"time_per_hit":0.0000027418136596679688,"percent":0.001312940512948733,"line":"        if ext in hiddenclasses:"},"160":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            guesserfn = hiddenclasses[ext]"},"161":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if decomp:"},"162":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                _module, _class = decompressclass[decomp]"},"163":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                module = __import__(_module, globals(), {}, [])"},"164":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                _file = getattr(module, _class)"},"165":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                ext = guesserfn(_file(storefile))"},"166":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            else:"},"167":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                ext = guesserfn(storefile)"},"168":{"hits":4,"time":0.000008821487426757812,"time_per_hit":0.000002205371856689453,"percent":0.001056060847371807,"line":"    try:"},"169":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        # we prefer classes (if given) since that is the older API that Pootle uses"},"170":{"hits":4,"time":0.000008106231689453125,"time_per_hit":0.0000020265579223632812,"percent":0.0009704342921794984,"line":"        if classes:"},"171":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            storeclass = classes[ext]"},"172":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        else:"},"173":{"hits":4,"time":0.000019788742065429688,"time_per_hit":0.000004947185516357422,"percent":0.0023690013603205403,"line":"            _module, _class = classes_str[ext]"},"174":{"hits":4,"time":0.00010180473327636719,"time_per_hit":0.000025451183319091797,"percent":0.012187513022371935,"line":"            module = __import__(\\"translate.storage.%s\\" % _module, globals(), {}, _module)"},"175":{"hits":4,"time":0.000019311904907226562,"time_per_hit":0.000004827976226806641,"percent":0.002311916990192334,"line":"            storeclass = getattr(module, _class)"},"176":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    except KeyError:"},"177":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        raise ValueError(\\"Unknown filetype (%s)\\" % storefilename)"},"178":{"hits":4,"time":0.000012159347534179688,"time_per_hit":0.000003039836883544922,"percent":0.0014556514382692476,"line":"    return storeclass"},"179":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"180":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"181":{"hits":4,"time":0.000030040740966796875,"time_per_hit":0.000007510185241699219,"percent":0.0035963153180769646,"line":"def getobject(storefile, localfiletype=None, ignore=None, classes=None,"},"182":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"              classes_str=None, hiddenclasses=None):"},"183":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\"Factory that returns a usable object for the type of file presented."},"184":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"185":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    :type storefile: file or str"},"186":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    :param storefile: File object or file name."},"187":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"188":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    Specify ignore to ignore some part at the back of the name (like .gz)."},"189":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\""},"190":{"hits":4,"time":0.00003743171691894531,"time_per_hit":0.000009357929229736328,"percent":0.004481123055064155,"line":"    if classes_str is None:"},"191":{"hits":4,"time":0.000010967254638671875,"time_per_hit":0.0000027418136596679688,"percent":0.001312940512948733,"line":"        classes_str = _classes_str"},"192":{"hits":4,"time":0.000010013580322265625,"time_per_hit":0.0000025033950805664062,"percent":0.0011987717726923215,"line":"    if hiddenclasses is None:"},"193":{"hits":4,"time":0.000009775161743164062,"time_per_hit":0.0000024437904357910156,"percent":0.0011702295876282187,"line":"        hiddenclasses = _hiddenclasses"},"194":{"hits":4,"time":0.0000286102294921875,"time_per_hit":0.000007152557373046875,"percent":0.0034250622076923472,"line":"    if isinstance(storefile, six.string_types):"},"195":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if os.path.isdir(storefile) or storefile.endswith(os.path.sep):"},"196":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            from translate.storage import directory"},"197":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            return directory.Directory(storefile)"},"198":{"hits":4,"time":0.00003170967102050781,"time_per_hit":0.000007927417755126953,"percent":0.003796110613525685,"line":"    storefilename = _getname(storefile)"},"199":{"hits":4,"time":0.000011920928955078125,"time_per_hit":0.0000029802322387695312,"percent":0.0014271092532051448,"line":"    storeclass = getclass(storefile, localfiletype, ignore, classes=classes,"},"200":{"hits":4,"time":0.00004935264587402344,"time_per_hit":0.00001233816146850586,"percent":0.005908232308269299,"line":"                          classes_str=classes_str, hiddenclasses=hiddenclasses)"},"201":{"hits":4,"time":0.00004458427429199219,"time_per_hit":0.000011146068572998047,"percent":0.005337388606987241,"line":"    if os.path.exists(storefilename) or not getattr(storefile, \\"closed\\", True):"},"202":{"hits":4,"time":0.000028133392333984375,"time_per_hit":0.000007033348083496094,"percent":0.0033679778375641416,"line":"        name, ext = os.path.splitext(storefilename)"},"203":{"hits":4,"time":0.000014543533325195312,"time_per_hit":0.000003635883331298828,"percent":0.0017410732889102764,"line":"        ext = ext[len(os.path.extsep):].lower()"},"204":{"hits":4,"time":0.000011205673217773438,"time_per_hit":0.0000028014183044433594,"percent":0.001341482698012836,"line":"        if ext in decompressclass:"},"205":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            _module, _class = decompressclass[ext]"},"206":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            module = __import__(_module, globals(), {}, [])"},"207":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            _file = getattr(module, _class)"},"208":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            storefile = _file(storefilename)"},"209":{"hits":4,"time":0.00005459785461425781,"time_per_hit":0.000013649463653564453,"percent":0.006536160379679563,"line":"        store = storeclass.parsefile(storefile)"},"210":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    else:"},"211":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        store = storeclass()"},"212":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        store.filename = storefilename"},"213":{"hits":4,"time":0.00001049041748046875,"time_per_hit":0.0000026226043701171875,"percent":0.0012558561428205274,"line":"    return store"},"214":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"215":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"216":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"supported = ["},"217":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    (\'Gettext PO file\', [\'po\', \'pot\'], [\\"text/x-gettext-catalog\\", \\"text/x-gettext-translation\\", \\"text/x-po\\", \\"text/x-pot\\"]),"},"218":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    (\'XLIFF Translation File\', [\'xlf\', \'xliff\', \'sdlxliff\'], [\\"application/x-xliff\\", \\"application/x-xliff+xml\\"]),"},"219":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    (\'Gettext MO file\', [\'mo\', \'gmo\'], [\\"application/x-gettext-catalog\\", \\"application/x-mo\\"]),"},"220":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    (\'Qt .qm file\', [\'qm\'], [\\"application/x-qm\\"]),"},"221":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    (\'TBX Glossary\', [\'tbx\'], [\'application/x-tbx\']),"},"222":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    (\'TMX Translation Memory\', [\'tmx\'], [\\"application/x-tmx\\"]),"},"223":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    (\'Qt Linguist Translation File\', [\'ts\'], [\\"application/x-linguist\\"]),"},"224":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    (\'Qt Phrase Book\', [\'qph\'], [\\"application/x-qph\\"]),"},"225":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    (\'OmegaT Glossary\', [\'utf8\', \'tab\'], [\\"application/x-omegat-glossary\\"]),"},"226":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    (\'UTX Dictionary\', [\'utx\'], [\\"text/x-utx\\"]),"},"227":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    (\'Haiku catkeys file\', [\'catkeys\'], [\\"application/x-catkeys\\"]),"},"228":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"]"},"229":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"230":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"231":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"def supported_files():"},"232":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\"Returns data about all supported files"},"233":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"234":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    :return: list of type that include (name, extensions, mimetypes)"},"235":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    :rtype: list"},"236":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\""},"237":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    return supported[:]"},"file_total_time":0.0011942386627197266,"file_total_time_percent":0.1429678049860914},"translate/storage/pocommon.py":{"1":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# -*- coding: utf-8 -*-"},"2":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#"},"3":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# Copyright 2002-2011 Zuza Software Foundation"},"4":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#"},"5":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# This file is part of translate."},"6":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#"},"7":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# translate is free software; you can redistribute it and/or modify"},"8":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# it under the terms of the GNU General Public License as published by"},"9":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# the Free Software Foundation; either version 2 of the License, or"},"10":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# (at your option) any later version."},"11":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#"},"12":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# translate is distributed in the hope that it will be useful,"},"13":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# but WITHOUT ANY WARRANTY; without even the implied warranty of"},"14":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the"},"15":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# GNU General Public License for more details."},"16":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#"},"17":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# You should have received a copy of the GNU General Public License"},"18":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# along with this program; if not, see <http://www.gnu.org/licenses/>."},"19":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"20":{"hits":2,"time":0.000024318695068359375,"time_per_hit":0.000012159347534179688,"percent":0.002911302876538495,"line":"import re"},"21":{"hits":1,"time":0.000003814697265625,"time_per_hit":0.000003814697265625,"percent":0.0004566749610256463,"line":"import six"},"22":{"hits":1,"time":0.000027179718017578125,"time_per_hit":0.000027179718017578125,"percent":0.00325380909730773,"line":"from six.moves.urllib import parse"},"23":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"24":{"hits":1,"time":0.000014781951904296875,"time_per_hit":0.000014781951904296875,"percent":0.0017696154739743795,"line":"from translate.storage import base, poheader"},"25":{"hits":1,"time":0.000016689300537109375,"time_per_hit":0.000016689300537109375,"percent":0.0019979529544872027,"line":"from translate.storage.workflow import StateEnum as state"},"26":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"27":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"28":{"hits":1,"time":0.000015735626220703125,"time_per_hit":0.000015735626220703125,"percent":0.001883784214230791,"line":"msgid_comment_re = re.compile(\\"_: (.*?)\\\\n\\")"},"29":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"30":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"31":{"hits":1,"time":0.0000057220458984375,"time_per_hit":0.0000057220458984375,"percent":0.0006850124415384694,"line":"def extract_msgid_comment(text):"},"32":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\"The one definitive way to extract a msgid comment out of an unescaped"},"33":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    unicode string that might contain it."},"34":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"35":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    :rtype: unicode"},"36":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\""},"37":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    msgidcomment = msgid_comment_re.match(text)"},"38":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    if msgidcomment:"},"39":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return msgidcomment.group(1)"},"40":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    return u\\"\\""},"41":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"42":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"43":{"hits":1,"time":0.0000050067901611328125,"time_per_hit":0.0000050067901611328125,"percent":0.0005993858863461608,"line":"def quote_plus(text):"},"44":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\"Quote the query fragment of a URL; replacing \' \' with \'+\'\\"\\"\\""},"45":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    return parse.quote_plus(text.encode(\\"utf-8\\"), safe=\'[]()/:,@\')"},"46":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"47":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"48":{"hits":1,"time":0.00000476837158203125,"time_per_hit":0.00000476837158203125,"percent":0.0005708437012820578,"line":"def unquote_plus(text):"},"49":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\"unquote(\'%7e/abc+def\') -> \'~/abc def\'\\"\\"\\""},"50":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    try:"},"51":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if six.PY2 and isinstance(text, six.text_type):"},"52":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            text = text.encode(\'utf-8\')"},"53":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if six.PY2:"},"54":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            result = parse.unquote_plus(text).decode(\'utf-8\')"},"55":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        else:"},"56":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            # Enforce utf-8 validation"},"57":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            result = parse.unquote_plus(text, errors=\\"strict\\")"},"58":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return result"},"59":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    except (UnicodeEncodeError, UnicodeDecodeError) as e:"},"60":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        # for some reason there is a non-ascii character here. Let\'s assume it"},"61":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        # is already unicode (because of originally decoding the file)"},"62":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return text"},"63":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"64":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"65":{"hits":3,"time":0.00006008148193359375,"time_per_hit":0.00002002716064453125,"percent":0.007192630636153929,"line":"class pounit(base.TranslationUnit):"},"66":{"hits":1,"time":0.0000040531158447265625,"time_per_hit":0.0000040531158447265625,"percent":0.0004852171460897492,"line":"    S_FUZZY_OBSOLETE = state.OBSOLETE - 1"},"67":{"hits":1,"time":0.000003814697265625,"time_per_hit":0.000003814697265625,"percent":0.0004566749610256463,"line":"    S_OBSOLETE = state.OBSOLETE"},"68":{"hits":1,"time":0.0000035762786865234375,"time_per_hit":0.0000035762786865234375,"percent":0.0004281327759615434,"line":"    S_UNTRANSLATED = state.EMPTY"},"69":{"hits":1,"time":0.00000476837158203125,"time_per_hit":0.00000476837158203125,"percent":0.0005708437012820578,"line":"    S_FUZZY = state.NEEDS_WORK"},"70":{"hits":1,"time":0.0000035762786865234375,"time_per_hit":0.0000035762786865234375,"percent":0.0004281327759615434,"line":"    S_TRANSLATED = state.UNREVIEWED"},"71":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"72":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    STATE = {"},"73":{"hits":1,"time":0.0000035762786865234375,"time_per_hit":0.0000035762786865234375,"percent":0.0004281327759615434,"line":"        S_FUZZY_OBSOLETE: (S_FUZZY_OBSOLETE, state.OBSOLETE),"},"74":{"hits":1,"time":0.000003337860107421875,"time_per_hit":0.000003337860107421875,"percent":0.00039959059089744053,"line":"        S_OBSOLETE: (state.OBSOLETE, state.EMPTY),"},"75":{"hits":1,"time":0.0000035762786865234375,"time_per_hit":0.0000035762786865234375,"percent":0.0004281327759615434,"line":"        S_UNTRANSLATED: (state.EMPTY, state.NEEDS_WORK),"},"76":{"hits":1,"time":0.000003337860107421875,"time_per_hit":0.000003337860107421875,"percent":0.00039959059089744053,"line":"        S_FUZZY: (state.NEEDS_WORK, state.UNREVIEWED),"},"77":{"hits":1,"time":0.0000040531158447265625,"time_per_hit":0.0000040531158447265625,"percent":0.0004852171460897492,"line":"        S_TRANSLATED: (state.UNREVIEWED, state.MAX),"},"78":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    }"},"79":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"80":{"hits":1,"time":0.000003814697265625,"time_per_hit":0.000003814697265625,"percent":0.0004566749610256463,"line":"    def adderror(self, errorname, errortext):"},"81":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Adds an error message to this unit.\\"\\"\\""},"82":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        text = u\'(pofilter) %s: %s\' % (errorname, errortext)"},"83":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        # Don\'t add the same error twice:"},"84":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if text not in self.getnotes(origin=\'translator\'):"},"85":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            self.addnote(text, origin=\\"translator\\")"},"86":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"87":{"hits":1,"time":0.0000030994415283203125,"time_per_hit":0.0000030994415283203125,"percent":0.0003710484058333376,"line":"    def geterrors(self):"},"88":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Get all error messages.\\"\\"\\""},"89":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        notes = self.getnotes(origin=\\"translator\\").split(\'\\\\n\')"},"90":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        errordict = {}"},"91":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        for note in notes:"},"92":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if \'(pofilter) \' in note:"},"93":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                error = note.replace(\'(pofilter) \', \'\')"},"94":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                errorname, errortext = error.split(\': \', 1)"},"95":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                errordict[errorname] = errortext"},"96":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return errordict"},"97":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"98":{"hits":1,"time":0.0000057220458984375,"time_per_hit":0.0000057220458984375,"percent":0.0006850124415384694,"line":"    def markreviewneeded(self, needsreview=True, explanation=None):"},"99":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Marks the unit to indicate whether it needs review. Adds an optional explanation as a note.\\"\\"\\""},"100":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if needsreview:"},"101":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            reviewnote = \\"(review)\\""},"102":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if explanation:"},"103":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                reviewnote += \\" \\" + explanation"},"104":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            self.addnote(reviewnote, origin=\\"translator\\")"},"105":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        else:"},"106":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            # Strip (review) notes."},"107":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            notestring = self.getnotes(origin=\\"translator\\")"},"108":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            notes = notestring.split(\'\\\\n\')"},"109":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            newnotes = []"},"110":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            for note in notes:"},"111":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                if \'(review)\' not in note:"},"112":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    newnotes.append(note)"},"113":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            newnotes = \'\\\\n\'.join(newnotes)"},"114":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            self.removenotes()"},"115":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            self.addnote(newnotes, origin=\\"translator\\")"},"116":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"117":{"hits":1,"time":0.000003814697265625,"time_per_hit":0.000003814697265625,"percent":0.0004566749610256463,"line":"    def istranslated(self):"},"118":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return super(pounit, self).istranslated() and not self.isobsolete() and not self.isheader()"},"119":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"120":{"hits":8,"time":0.000014781951904296875,"time_per_hit":0.0000018477439880371094,"percent":0.0017696154739743795,"line":"    def istranslatable(self):"},"121":{"hits":7,"time":0.00004839897155761719,"time_per_hit":0.0000069141387939453125,"percent":0.005794063568012887,"line":"        return not (self.isheader() or self.isblank() or self.isobsolete())"},"122":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"123":{"hits":1,"time":0.0000050067901611328125,"time_per_hit":0.0000050067901611328125,"percent":0.0005993858863461608,"line":"    def hasmarkedcomment(self, commentmarker):"},"124":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        raise NotImplementedError"},"125":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"126":{"hits":1,"time":0.000003337860107421875,"time_per_hit":0.000003337860107421875,"percent":0.00039959059089744053,"line":"    def isreview(self):"},"127":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return self.hasmarkedcomment(\\"review\\") or self.hasmarkedcomment(\\"pofilter\\")"},"128":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"129":{"hits":1,"time":0.0000030994415283203125,"time_per_hit":0.0000030994415283203125,"percent":0.0003710484058333376,"line":"    def isobsolete(self):"},"130":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return self.STATE[self.S_FUZZY_OBSOLETE][0] <= self.get_state_n() < self.STATE[self.S_OBSOLETE][1]"},"131":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"132":{"hits":1,"time":0.000003814697265625,"time_per_hit":0.000003814697265625,"percent":0.0004566749610256463,"line":"    def isfuzzy(self):"},"133":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        # implementation specific fuzzy detection, must not use get_state_n()"},"134":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        raise NotImplementedError()"},"135":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"136":{"hits":1,"time":0.0000030994415283203125,"time_per_hit":0.0000030994415283203125,"percent":0.0003710484058333376,"line":"    def markfuzzy(self, present=True):"},"137":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if present:"},"138":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            self.set_state_n(self.STATE[self.S_FUZZY][0])"},"139":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        else:"},"140":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            self.set_state_n(self.STATE[self.S_TRANSLATED][0])"},"141":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        # set_state_n will check if target exists"},"142":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"143":{"hits":1,"time":0.000003337860107421875,"time_per_hit":0.000003337860107421875,"percent":0.00039959059089744053,"line":"    def makeobsolete(self):"},"144":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if self.isfuzzy():"},"145":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            self.set_state_n(self.STATE[self.S_FUZZY_OBSOLETE][0])"},"146":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        else:"},"147":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            self.set_state_n(self.STATE[self.S_OBSOLETE][0])"},"148":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"149":{"hits":1,"time":0.0000035762786865234375,"time_per_hit":0.0000035762786865234375,"percent":0.0004281327759615434,"line":"    def resurrect(self):"},"150":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        self.set_state_n(self.STATE[self.S_TRANSLATED][0])"},"151":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if not self.target:"},"152":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            self.set_state_n(self.STATE[self.S_UNTRANSLATED][0])"},"153":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"154":{"hits":1,"time":0.00000476837158203125,"time_per_hit":0.00000476837158203125,"percent":0.0005708437012820578,"line":"    def _domarkfuzzy(self, present=True):"},"155":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        raise NotImplementedError()"},"156":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"157":{"hits":1,"time":0.000008344650268554688,"time_per_hit":0.000008344650268554688,"percent":0.0009989764772436014,"line":"    def get_state_n(self):"},"158":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        value = super(pounit, self).get_state_n()"},"159":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if value <= self.S_OBSOLETE:"},"160":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            return value"},"161":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if self.target:"},"162":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if self.isfuzzy():"},"163":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                return self.S_FUZZY"},"164":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            else:"},"165":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                return self.S_TRANSLATED"},"166":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        else:"},"167":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            return self.S_UNTRANSLATED"},"168":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"169":{"hits":17,"time":0.000031948089599609375,"time_per_hit":0.0000018792993882123163,"percent":0.0038246527985897876,"line":"    def set_state_n(self, value):"},"170":{"hits":16,"time":0.00009655952453613281,"time_per_hit":0.000006034970283508301,"percent":0.011559584950961672,"line":"        super(pounit, self).set_state_n(value)"},"171":{"hits":16,"time":0.000026941299438476562,"time_per_hit":0.0000016838312149047852,"percent":0.003225266912243627,"line":"        has_target = False"},"172":{"hits":16,"time":0.00007796287536621094,"time_per_hit":0.000004872679710388184,"percent":0.009333294515961646,"line":"        if self.hasplural():"},"173":{"hits":2,"time":0.000009059906005859375,"time_per_hit":0.0000045299530029296875,"percent":0.00108460303243591,"line":"            for string in self.target.strings:"},"174":{"hits":1,"time":0.0000026226043701171875,"time_per_hit":0.0000026226043701171875,"percent":0.00031396403570513185,"line":"                if string:"},"175":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    has_target = True"},"176":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    break"},"177":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        else:"},"178":{"hits":15,"time":0.00008630752563476562,"time_per_hit":0.000005753835042317708,"percent":0.010332270993205248,"line":"            has_target = bool(self.target)"},"179":{"hits":16,"time":0.000026464462280273438,"time_per_hit":0.0000016540288925170898,"percent":0.003168182542115421,"line":"        if has_target:"},"180":{"hits":8,"time":0.000016689300537109375,"time_per_hit":0.000002086162567138672,"percent":0.0019979529544872027,"line":"            isfuzzy = self.STATE[self.S_FUZZY][0] <= value < self.STATE[self.S_FUZZY][1] or \\\\"},"181":{"hits":8,"time":0.0000209808349609375,"time_per_hit":0.0000026226043701171875,"percent":0.002511712285641055,"line":"                self.STATE[self.S_FUZZY_OBSOLETE][0] <= value < self.STATE[self.S_FUZZY_OBSOLETE][1]"},"182":{"hits":8,"time":0.000051975250244140625,"time_per_hit":0.000006496906280517578,"percent":0.006222196343974431,"line":"            self._domarkfuzzy(isfuzzy)  # Implementation specific fuzzy-marking"},"183":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        else:"},"184":{"hits":8,"time":0.000043392181396484375,"time_per_hit":0.000005424022674560547,"percent":0.0051946776816667265,"line":"            super(pounit, self).set_state_n(self.S_UNTRANSLATED)"},"185":{"hits":8,"time":0.00003814697265625,"time_per_hit":0.00000476837158203125,"percent":0.004566749610256463,"line":"            self._domarkfuzzy(False)"},"186":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"187":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"188":{"hits":3,"time":0.00005745887756347656,"time_per_hit":0.00001915295918782552,"percent":0.006878666600448798,"line":"class pofile(poheader.poheader, base.TranslationStore):"},"189":{"hits":1,"time":0.000001430511474609375,"time_per_hit":0.000001430511474609375,"percent":0.00017125311038461736,"line":"    Name = \\"Gettext PO file\\"  # pylint: disable=E0602"},"190":{"hits":1,"time":0.0000021457672119140625,"time_per_hit":0.0000021457672119140625,"percent":0.00025687966557692604,"line":"    Mimetypes = [\\"text/x-gettext-catalog\\", \\"text/x-gettext-translation\\", \\"text/x-po\\", \\"text/x-pot\\"]"},"191":{"hits":1,"time":0.0000021457672119140625,"time_per_hit":0.0000021457672119140625,"percent":0.00025687966557692604,"line":"    Extensions = [\\"po\\", \\"pot\\"]"},"192":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    # We don\'t want windows line endings on Windows:"},"193":{"hits":1,"time":0.000003814697265625,"time_per_hit":0.000003814697265625,"percent":0.0004566749610256463,"line":"    _binary = True"},"194":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"195":{"hits":5,"time":0.000012636184692382812,"time_per_hit":0.0000025272369384765624,"percent":0.0015127358083974534,"line":"    def __init__(self, inputfile=None, **kwargs):"},"196":{"hits":4,"time":0.00005817413330078125,"time_per_hit":0.000014543533325195312,"percent":0.006964293155641106,"line":"        super(pofile, self).__init__(**kwargs)"},"197":{"hits":4,"time":0.00001239776611328125,"time_per_hit":0.0000030994415283203125,"percent":0.0014841936233333504,"line":"        self.filename = \'\'"},"198":{"hits":4,"time":0.0000069141387939453125,"time_per_hit":0.0000017285346984863281,"percent":0.0008277233668589839,"line":"        if inputfile is not None:"},"199":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            self.parse(inputfile)"},"200":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        else:"},"201":{"hits":4,"time":0.000051021575927734375,"time_per_hit":0.000012755393981933594,"percent":0.006108027603718019,"line":"            self.init_headers()"},"202":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"203":{"hits":1,"time":0.00000286102294921875,"time_per_hit":0.00000286102294921875,"percent":0.0003425062207692347,"line":"    @property"},"204":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def merge_on(self):"},"205":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"The matching criterion to use when merging on.\\"\\"\\""},"206":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return self.parseheader().get(\'X-Merge-On\', \'id\')"},"file_total_time":0.0010738372802734375,"file_total_time_percent":0.12855400152871943},"translate/storage/base.py":{"1":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# -*- coding: utf-8 -*-"},"2":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#"},"3":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# Copyright 2006-2009 Zuza Software Foundation"},"4":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#"},"5":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# This file is part of the Translate Toolkit."},"6":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#"},"7":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# This program is free software; you can redistribute it and/or modify"},"8":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# it under the terms of the GNU General Public License as published by"},"9":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# the Free Software Foundation; either version 2 of the License, or"},"10":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# (at your option) any later version."},"11":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#"},"12":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# This program is distributed in the hope that it will be useful,"},"13":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# but WITHOUT ANY WARRANTY; without even the implied warranty of"},"14":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the"},"15":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# GNU General Public License for more details."},"16":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#"},"17":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# You should have received a copy of the GNU General Public License"},"18":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# along with this program; if not, see <http://www.gnu.org/licenses/>."},"19":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"20":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"\\"\\"\\"Base classes for storage interfaces.\\"\\"\\""},"21":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"22":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"import codecs"},"23":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"import logging"},"24":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"import six"},"25":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"try:"},"26":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    import cPickle as pickle"},"27":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"except ImportError:"},"28":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    import pickle"},"29":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"from io import BytesIO"},"30":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"31":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"from translate.misc.deprecation import deprecated"},"32":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"from translate.misc.multistring import multistring"},"33":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"from translate.storage.placeables import StringElem, parse as rich_parse"},"34":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"from translate.storage.workflow import StateEnum as states"},"35":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"36":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# Simple BOM based encoding detection"},"37":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"ENCODING_BOMS = ("},"38":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    (codecs.BOM_UTF8, \'utf-8-sig\'),"},"39":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    (codecs.BOM_UTF16, \'utf-16\'),"},"40":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    (codecs.BOM_UTF16_BE, \'utf-16-be\'),"},"41":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    (codecs.BOM_UTF16_LE, \'utf-16-le\'),"},"42":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    (codecs.BOM_UTF32, \'utf-32\'),"},"43":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    (codecs.BOM_UTF32_BE, \'utf-32-be\'),"},"44":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    (codecs.BOM_UTF32_LE, \'utf-32-le\'),"},"45":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":")"},"46":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"47":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"48":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"class ParseError(Exception):"},"49":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"50":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def __init__(self, inner_exc):"},"51":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        self.inner_exc = inner_exc"},"52":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"53":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def __str__(self):"},"54":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return repr(self.inner_exc)"},"55":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"56":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"57":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"@six.python_2_unicode_compatible"},"58":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"class TranslationUnit(object):"},"59":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\"Base class for translation units."},"60":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"61":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    Our concept of a *translation unit* is influenced heavily by `XLIFF"},"62":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    <http://docs.oasis-open.org/xliff/xliff-core/xliff-core.html>`_."},"63":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"64":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    As such most of the method- and variable names borrows from XLIFF"},"65":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    terminology."},"66":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"67":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    A translation unit consists of the following:"},"68":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"69":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    - A *source* string. This is the original translatable text."},"70":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    - A *target* string. This is the translation of the *source*."},"71":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    - Zero or more *notes* on the unit. Notes would typically be some comments"},"72":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"      from a translator on the unit, or some comments originating from the"},"73":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"      source code."},"74":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    - Zero or more *locations*. Locations indicate where in the original source"},"75":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"      code this unit came from."},"76":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    - Zero or more *errors*. Some tools (eg."},"77":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"      :mod:`~translate.filters.pofilter`) can run checks on translations and"},"78":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"      produce error messages."},"79":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"80":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\""},"81":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"82":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    rich_parsers = []"},"83":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\"A list of functions to use for parsing a string into a rich string"},"84":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    tree.\\"\\"\\""},"85":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"86":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    # State constants"},"87":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    S_OBSOLETE = states.OBSOLETE"},"88":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    S_EMPTY = states.EMPTY"},"89":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    S_NEEDS_WORK = states.NEEDS_WORK"},"90":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    S_REJECTED = states.REJECTED"},"91":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    S_NEEDS_REVIEW = states.NEEDS_REVIEW"},"92":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    S_UNREVIEWED = states.UNREVIEWED"},"93":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    S_FINAL = states.FINAL"},"94":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"95":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    # Elaborate state support could look something like this:"},"96":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    # STATE = {"},"97":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    #     S_OBSOLETE: (states.OBSOLETE, states.EMPTY),"},"98":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    #     S_EMPTY: (states.EMPTY, states.NEEDS_WORK),"},"99":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    #     S_NEEDS_WORK: (states.NEEDS_WORK, states.REJECTED),"},"100":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    #     S_REJECTED: (states.REJECTED, states.NEEDS_REVIEW),"},"101":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    #     S_NEEDS_REVIEW: (states.NEEDS_REVIEW, states.UNREVIEWED),"},"102":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    #     S_UNREVIEWED: (states.UNREVIEWED, states.FINAL),"},"103":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    #     S_FINAL: (states.FINAL, states.MAX),"},"104":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    # }"},"105":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    # \\"\\"\\""},"106":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    # Default supported states:"},"107":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    #     * obsolete: The unit is not to be used."},"108":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    #     * empty: The unit has not been translated before."},"109":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    #     * needs work: Some translation has been done, but is not complete."},"110":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    #     * rejected: The unit has been reviewed, but was rejected."},"111":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    #     * needs review: The unit has been translated, but review was requested."},"112":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    #     * unreviewed: The unit has been translated, but not reviewed."},"113":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    #     * final: The unit is translated, reviewed and accepted."},"114":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    # \\"\\"\\""},"115":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    #"},"116":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    # ... but by default a format will not support state:"},"117":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    STATE = {}"},"118":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"119":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    _store = None"},"120":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    _source = None"},"121":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    _target = None"},"122":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    _rich_source = None"},"123":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    _rich_target = None"},"124":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    _state_n = 0"},"125":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    notes = \\"\\""},"126":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"127":{"hits":20,"time":0.000024318695068359375,"time_per_hit":0.0000012159347534179687,"percent":0.002911302876538495,"line":"    def __init__(self, source=None):"},"128":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Constructs a TranslationUnit containing the given source string.\\"\\"\\""},"129":{"hits":20,"time":0.000030040740966796875,"time_per_hit":0.0000015020370483398437,"percent":0.0035963153180769646,"line":"        if source is not None:"},"130":{"hits":4,"time":0.000034809112548828125,"time_per_hit":0.000008702278137207031,"percent":0.004167159019359022,"line":"            self.source = source"},"131":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"132":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def __eq__(self, other):"},"133":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Compares two TranslationUnits."},"134":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"135":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        :type other: :class:`TranslationUnit`"},"136":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        :param other: Another :class:`TranslationUnit`"},"137":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        :rtype: Boolean"},"138":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        :return: Returns *True* if the supplied :class:`TranslationUnit`"},"139":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                 equals this unit."},"140":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\""},"141":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return self.source == other.source and self.target == other.target"},"142":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"143":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def __ne__(self, other):"},"144":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return not self.__eq__(other)"},"145":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"146":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def __hash__(self):"},"147":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return None"},"148":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"149":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def __str__(self):"},"150":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Converts to a string representation. Most often overriden by subclasses.\\"\\"\\""},"151":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        # no point in showing store object."},"152":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return \\", \\".join(["},"153":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            \\"%s: %s\\" % (k, self.__dict__[k]) for k in sorted(self.__dict__.keys()) if k != \'_store\'"},"154":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        ])"},"155":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"156":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    @classmethod"},"157":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def rich_to_multistring(cls, elem_list):"},"158":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Convert a \\"rich\\" string tree to a ``multistring``:"},"159":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"160":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        >>> from translate.storage.placeables.interfaces import X"},"161":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        >>> rich = [StringElem([\'foo\', X(id=\'xxx\', sub=[\' \']), \'bar\'])]"},"162":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        >>> TranslationUnit.rich_to_multistring(rich)"},"163":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        multistring(u\'foo bar\')"},"164":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\""},"165":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return multistring([six.text_type(elem) for elem in elem_list])"},"166":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"167":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def multistring_to_rich(self, mulstring):"},"168":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Convert a multistring to a list of \\"rich\\" string trees:"},"169":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"170":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        >>> target = multistring([u\'foo\', u\'bar\', u\'baz\'])"},"171":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        >>> TranslationUnit.multistring_to_rich(target)"},"172":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        [<StringElem([<StringElem([u\'foo\'])>])>,"},"173":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"         <StringElem([<StringElem([u\'bar\'])>])>,"},"174":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"         <StringElem([<StringElem([u\'baz\'])>])>]"},"175":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\""},"176":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if isinstance(mulstring, multistring):"},"177":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            return [rich_parse(s, self.rich_parsers) for s in mulstring.strings]"},"178":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return [rich_parse(mulstring, self.rich_parsers)]"},"179":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"180":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    @property"},"181":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def source(self):"},"182":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return self._source"},"183":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"184":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    @source.setter"},"185":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def source(self, source):"},"186":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Set the source string to the given value.\\"\\"\\""},"187":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        self._rich_source = None"},"188":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        self._source = source"},"189":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"190":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    # Deprecated on 2.3.1"},"191":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    @deprecated(\\"Use `source` property instead\\")"},"192":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def setsource(self, source):"},"193":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        self.source = source"},"194":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"195":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    @property"},"196":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def target(self):"},"197":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return self._target"},"198":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"199":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    @target.setter"},"200":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def target(self, target):"},"201":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Set the target string to the given value.\\"\\"\\""},"202":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        self._rich_target = None"},"203":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        self._target = target"},"204":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"205":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    # Deprecated on 2.3.1"},"206":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    @deprecated(\\"Use `target` property instead\\")"},"207":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def settarget(self, target):"},"208":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        self.target = target"},"209":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"210":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    @property"},"211":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def rich_source(self):"},"212":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\""},"213":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        .. seealso:: :meth:`.rich_to_multistring`, :meth:`multistring_to_rich`"},"214":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\""},"215":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if self._rich_source is None:"},"216":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            self._rich_source = self.multistring_to_rich(self.source)"},"217":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return self._rich_source"},"218":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"219":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    @rich_source.setter"},"220":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def rich_source(self, value):"},"221":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if not hasattr(value, \'__iter__\'):"},"222":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            raise ValueError(\'value must be iterable\')"},"223":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if len(value) < 1:"},"224":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            raise ValueError(\'value must have at least one element.\')"},"225":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if not isinstance(value[0], StringElem):"},"226":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            raise ValueError(\'value[0] must be of type StringElem.\')"},"227":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        self._rich_source = list(value)"},"228":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        multi = self.rich_to_multistring(value)"},"229":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if self.source != multi:"},"230":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            self.source = multi"},"231":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"232":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    @property"},"233":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def rich_target(self):"},"234":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\""},"235":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        .. seealso:: :meth:`.rich_to_multistring`, :meth:`.multistring_to_rich`"},"236":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\""},"237":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if self._rich_target is None:"},"238":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            self._rich_target = self.multistring_to_rich(self.target)"},"239":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return self._rich_target"},"240":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"241":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    @rich_target.setter"},"242":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def rich_target(self, value):"},"243":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if not hasattr(value, \'__iter__\'):"},"244":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            raise ValueError(\'value must be iterable\')"},"245":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if len(value) < 1:"},"246":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            raise ValueError(\'value must have at least one element.\')"},"247":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if not isinstance(value[0], StringElem):"},"248":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            raise ValueError(\'value[0] must be of type StringElem.\')"},"249":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        self._rich_target = list(value)"},"250":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        self.target = self.rich_to_multistring(value)"},"251":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"252":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def gettargetlen(self):"},"253":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Returns the length of the target string."},"254":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"255":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        :rtype: Integer"},"256":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"257":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        .. note::"},"258":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"259":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"           Plural forms might be combined."},"260":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\""},"261":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        length = len(self.target or \\"\\")"},"262":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        strings = getattr(self.target, \\"strings\\", [])"},"263":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if strings:"},"264":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            length += sum([len(pluralform) for pluralform in strings[1:]])"},"265":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return length"},"266":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"267":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def getid(self):"},"268":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"A unique identifier for this unit."},"269":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"270":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        :rtype: string"},"271":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        :return: an identifier for this unit that is unique in the store"},"272":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"273":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        Derived classes should override this in a way that guarantees a unique"},"274":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        identifier for each unit in the store."},"275":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\""},"276":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return self.source"},"277":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"278":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def setid(self, value):"},"279":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Sets the unique identified for this unit."},"280":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"281":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        only implemented if format allows ids independant from other unit"},"282":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        properties like source or context"},"283":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\""},"284":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        pass"},"285":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"286":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def getlocations(self):"},"287":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"A list of source code locations."},"288":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"289":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        :rtype: List"},"290":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"291":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        .. note::"},"292":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"293":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"           Shouldn\'t be implemented if the format doesn\'t support it."},"294":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\""},"295":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return []"},"296":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"297":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def addlocation(self, location):"},"298":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Add one location to the list of locations."},"299":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"300":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        .. note::"},"301":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"302":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"           Shouldn\'t be implemented if the format doesn\'t support it."},"303":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\""},"304":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        pass"},"305":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"306":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def addlocations(self, location):"},"307":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Add a location or a list of locations."},"308":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"309":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        .. note::"},"310":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"311":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"           Most classes shouldn\'t need to implement this, but should rather"},"312":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"           implement :meth:`TranslationUnit.addlocation`."},"313":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"314":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        .. warning::"},"315":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"316":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"           This method might be removed in future."},"317":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\""},"318":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if isinstance(location, list):"},"319":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            for item in location:"},"320":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                self.addlocation(item)"},"321":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        else:"},"322":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            self.addlocation(location)"},"323":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"324":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def getcontext(self):"},"325":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Get the message context.\\"\\"\\""},"326":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return \\"\\""},"327":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"328":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def setcontext(self, context):"},"329":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Set the message context\\"\\"\\""},"330":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        pass"},"331":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"332":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def getnotes(self, origin=None):"},"333":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Returns all notes about this unit."},"334":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"335":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        It will probably be freeform text or something reasonable that can be"},"336":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        synthesised by the format."},"337":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        It should not include location comments (see"},"338":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        :meth:`~.TranslationUnit.getlocations`)."},"339":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\""},"340":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return getattr(self, \\"notes\\", \\"\\")"},"341":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"342":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def addnote(self, text, origin=None, position=\\"append\\"):"},"343":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Adds a note (comment)."},"344":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"345":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        :type text: string"},"346":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        :param text: Usually just a sentence or two."},"347":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        :type origin: string"},"348":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        :param origin: Specifies who/where the comment comes from."},"349":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                       Origin can be one of the following text strings:"},"350":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                       - \'translator\'"},"351":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                       - \'developer\', \'programmer\', \'source code\' (synonyms)"},"352":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\""},"353":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if position == \\"append\\" and getattr(self, \\"notes\\", None):"},"354":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            self.notes += \'\\\\n\' + text"},"355":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        else:"},"356":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            self.notes = text"},"357":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"358":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def removenotes(self, origin=None):"},"359":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Remove all the translator\'s notes.\\"\\"\\""},"360":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        self.notes = u\'\'"},"361":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"362":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def adderror(self, errorname, errortext):"},"363":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Adds an error message to this unit."},"364":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"365":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        :type errorname: string"},"366":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        :param errorname: A single word to id the error."},"367":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        :type errortext: string"},"368":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        :param errortext: The text describing the error."},"369":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\""},"370":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        pass"},"371":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"372":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def geterrors(self):"},"373":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Get all error messages."},"374":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"375":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        :rtype: Dictionary"},"376":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\""},"377":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return {}"},"378":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"379":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def markreviewneeded(self, needsreview=True, explanation=None):"},"380":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Marks the unit to indicate whether it needs review."},"381":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"382":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        :keyword needsreview: Defaults to True."},"383":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        :keyword explanation: Adds an optional explanation as a note."},"384":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\""},"385":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        pass"},"386":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"387":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def istranslated(self):"},"388":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Indicates whether this unit is translated."},"389":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"390":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        This should be used rather than deducing it from .target,"},"391":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        to ensure that other classes can implement more functionality"},"392":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        (as XLIFF does)."},"393":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\""},"394":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return bool(self.target) and not self.isfuzzy()"},"395":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"396":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def istranslatable(self):"},"397":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Indicates whether this unit can be translated."},"398":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"399":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        This should be used to distinguish real units for translation from"},"400":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        header, obsolete, binary or other blank units."},"401":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\""},"402":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return bool(self.source)"},"403":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"404":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def isfuzzy(self):"},"405":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Indicates whether this unit is fuzzy.\\"\\"\\""},"406":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return False"},"407":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"408":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def markfuzzy(self, value=True):"},"409":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Marks the unit as fuzzy or not.\\"\\"\\""},"410":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        pass"},"411":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"412":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def isobsolete(self):"},"413":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"indicate whether a unit is obsolete\\"\\"\\""},"414":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return False"},"415":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"416":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def makeobsolete(self):"},"417":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Make a unit obsolete\\"\\"\\""},"418":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        pass"},"419":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"420":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def isheader(self):"},"421":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Indicates whether this unit is a header.\\"\\"\\""},"422":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return False"},"423":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"424":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def isreview(self):"},"425":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Indicates whether this unit needs review.\\"\\"\\""},"426":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return False"},"427":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"428":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def isblank(self):"},"429":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Used to see if this unit has no source or target string."},"430":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"431":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        .. note::"},"432":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"433":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"           This is probably used more to find translatable units,"},"434":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"           and we might want to move in that direction rather and"},"435":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"           get rid of this."},"436":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\""},"437":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return not (self.source or self.target)"},"438":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"439":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def hasplural(self):"},"440":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Tells whether or not this specific unit has plural strings.\\"\\"\\""},"441":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        #TODO: Reconsider"},"442":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return False"},"443":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"444":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def getsourcelanguage(self):"},"445":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return self._store.getsourcelanguage()"},"446":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"447":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def gettargetlanguage(self):"},"448":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return self._store.gettargetlanguage()"},"449":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"450":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def merge(self, otherunit, overwrite=False, comments=True,"},"451":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"              authoritative=False):"},"452":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Do basic format agnostic merging.\\"\\"\\""},"453":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if not self.target or overwrite:"},"454":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            self.rich_target = otherunit.rich_target"},"455":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"456":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def unit_iter(self):"},"457":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Iterator that only returns this unit.\\"\\"\\""},"458":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        yield self"},"459":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"460":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def getunits(self):"},"461":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"This unit in a list.\\"\\"\\""},"462":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return [self]"},"463":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"464":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    @classmethod"},"465":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def buildfromunit(cls, unit):"},"466":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Build a native unit from a foreign unit, preserving as much"},"467":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        information as possible."},"468":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\""},"469":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if type(unit) == cls and hasattr(unit, \\"copy\\") and callable(unit.copy):"},"470":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            return unit.copy()"},"471":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        newunit = cls(unit.source)"},"472":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        newunit.target = unit.target"},"473":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        newunit.markfuzzy(unit.isfuzzy())"},"474":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        locations = unit.getlocations()"},"475":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if locations:"},"476":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            newunit.addlocations(locations)"},"477":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        notes = unit.getnotes()"},"478":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if notes:"},"479":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            newunit.addnote(notes)"},"480":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return newunit"},"481":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"482":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    xid = property(lambda self: None, lambda self, value: None)"},"483":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    rid = property(lambda self: None, lambda self, value: None)"},"484":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"485":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def get_state_id(self, n=None):"},"486":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if n is None:"},"487":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            n = self.get_state_n()"},"488":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        for state_id, state_range in six.iteritems(self.STATE):"},"489":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if state_range[0] <= n < state_range[1]:"},"490":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                return state_id"},"491":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if self.STATE:"},"492":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            raise ValueError(\'No state containing value %s\' % (n))"},"493":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        else:"},"494":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            return n"},"495":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"496":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def get_state_n(self):"},"497":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if self.STATE:"},"498":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            return self._state_n"},"499":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        else:"},"500":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            return self.istranslated() and self.S_UNREVIEWED or self.S_EMPTY"},"501":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"502":{"hits":24,"time":0.000029802322387695312,"time_per_hit":0.000001241763432820638,"percent":0.003567773133012862,"line":"    def set_state_n(self, value):"},"503":{"hits":24,"time":0.00004100799560546875,"time_per_hit":0.000001708666483561198,"percent":0.004909255831025697,"line":"        self._state_n = value"},"504":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"505":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def infer_state(self):"},"506":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Empty method that should be overridden in sub-classes to infer the"},"507":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        current state(_n) of the unit from its current state."},"508":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\""},"509":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        pass"},"510":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"511":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"512":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"class TranslationStore(object):"},"513":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\"Base class for stores for multiple translation units of type UnitClass."},"514":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\""},"515":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"516":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    UnitClass = TranslationUnit"},"517":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\"The class of units that will be instantiated and used by this class\\"\\"\\""},"518":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    Name = \\"Base translation store\\""},"519":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\"The human usable name of this store type\\"\\"\\""},"520":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    Mimetypes = None"},"521":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\"A list of MIME types associated with this store type\\"\\"\\""},"522":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    Extensions = None"},"523":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\"A list of file extentions associated with this store type\\"\\"\\""},"524":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    _binary = False"},"525":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\"Indicates whether a file should be accessed as a binary file.\\"\\"\\""},"526":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    suggestions_in_format = False"},"527":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\"Indicates if format can store suggestions and alternative translation"},"528":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    for a unit\\"\\"\\""},"529":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"530":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    default_encoding = \'utf-8\'"},"531":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    sourcelanguage = None"},"532":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    targetlanguage = None"},"533":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"534":{"hits":4,"time":0.0000073909759521484375,"time_per_hit":0.0000018477439880371094,"percent":0.0008848077369871897,"line":"    def __init__(self, unitclass=None, encoding=None):"},"535":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Construct a blank TranslationStore.\\"\\"\\""},"536":{"hits":4,"time":0.000010728836059570312,"time_per_hit":0.000002682209014892578,"percent":0.0012843983278846302,"line":"        self.units = []"},"537":{"hits":4,"time":0.000006198883056640625,"time_per_hit":0.0000015497207641601562,"percent":0.0007420968116666752,"line":"        if unitclass:"},"538":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            self.UnitClass = unitclass"},"539":{"hits":4,"time":0.000008821487426757812,"time_per_hit":0.000002205371856689453,"percent":0.001056060847371807,"line":"        self._encoding = encoding"},"540":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"541":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    @property"},"542":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def encoding(self):"},"543":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        # self._encoding is either defined by __init__ or auto-detected from parsed file"},"544":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if self._encoding == \'auto\':"},"545":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            return \'utf-8\'"},"546":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return self._encoding or self.default_encoding"},"547":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"548":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    @encoding.setter"},"549":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def encoding(self, value):"},"550":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if value == \\"CHARSET\\" or value is None:"},"551":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            return"},"552":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if value == \'ascii\':"},"553":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            value = \'utf-8\'"},"554":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        self._encoding = value"},"555":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"556":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def getsourcelanguage(self):"},"557":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Get the source language for this store.\\"\\"\\""},"558":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return self.sourcelanguage"},"559":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"560":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def setsourcelanguage(self, sourcelanguage):"},"561":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Set the source language for this store.\\"\\"\\""},"562":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        self.sourcelanguage = sourcelanguage"},"563":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"564":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def gettargetlanguage(self):"},"565":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Get the target language for this store.\\"\\"\\""},"566":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return self.targetlanguage"},"567":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"568":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def settargetlanguage(self, targetlanguage):"},"569":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Set the target language for this store.\\"\\"\\""},"570":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        self.targetlanguage = targetlanguage"},"571":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"572":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def getprojectstyle(self):"},"573":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Get the project type for this store.\\"\\"\\""},"574":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return getattr(self, \'_project_style\', None)"},"575":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"576":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def setprojectstyle(self, project_style):"},"577":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Set the project type for this store.\\"\\"\\""},"578":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        self._project_style = project_style"},"579":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"580":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def unit_iter(self):"},"581":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Iterator over all the units in this store.\\"\\"\\""},"582":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        for unit in self.units:"},"583":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            yield unit"},"584":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"585":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def getunits(self):"},"586":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Return a list of all units in this store.\\"\\"\\""},"587":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return [unit for unit in self.unit_iter()]"},"588":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"589":{"hits":12,"time":0.000014781951904296875,"time_per_hit":0.000001231829325358073,"percent":0.0017696154739743795,"line":"    def addunit(self, unit):"},"590":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Append the given unit to the object\'s list of units."},"591":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"592":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        This method should always be used rather than trying to modify the"},"593":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        list manually."},"594":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"595":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        :type unit: :class:`TranslationUnit`"},"596":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        :param unit: The unit that will be added."},"597":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\""},"598":{"hits":12,"time":0.000019788742065429688,"time_per_hit":0.0000016490618387858074,"percent":0.0023690013603205403,"line":"        unit._store = self"},"599":{"hits":12,"time":0.000019073486328125,"time_per_hit":0.0000015894571940104167,"percent":0.0022833748051282314,"line":"        self.units.append(unit)"},"600":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"601":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def addsourceunit(self, source):"},"602":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Add and returns a new unit with the given source string."},"603":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"604":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        :rtype: :class:`TranslationUnit`"},"605":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\""},"606":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        unit = self.UnitClass(source)"},"607":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        self.addunit(unit)"},"608":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return unit"},"609":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"610":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def findid(self, id):"},"611":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"find unit with matching id by checking id_index\\"\\"\\""},"612":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        self.require_index()"},"613":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return self.id_index.get(id, None)"},"614":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"615":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def findunit(self, source):"},"616":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Find the unit with the given source string."},"617":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"618":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        :rtype: :class:`TranslationUnit` or None"},"619":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\""},"620":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if len(getattr(self, \\"sourceindex\\", [])):"},"621":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if source in self.sourceindex:"},"622":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                return self.sourceindex[source][0]"},"623":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        else:"},"624":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            for unit in self.units:"},"625":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                if unit.source == source:"},"626":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    return unit"},"627":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return None"},"628":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"629":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def findunits(self, source):"},"630":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Find the units with the given source string."},"631":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"632":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        :rtype: :class:`TranslationUnit` or None"},"633":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\""},"634":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if len(getattr(self, \\"sourceindex\\", [])):"},"635":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if source in self.sourceindex:"},"636":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                return self.sourceindex[source]"},"637":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        else:"},"638":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            #FIXME: maybe we should generate index here instead since"},"639":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            #we\'ll scan all units anyway"},"640":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            result = []"},"641":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            for unit in self.units:"},"642":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                if unit.source == source:"},"643":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    result.append(unit)"},"644":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            return result"},"645":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return None"},"646":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"647":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def translate(self, source):"},"648":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Return the translated string for a given source string."},"649":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"650":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        :rtype: String or None"},"651":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\""},"652":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        unit = self.findunit(source)"},"653":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if unit and unit.target:"},"654":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            return unit.target"},"655":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        else:"},"656":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            return None"},"657":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"658":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def remove_unit_from_index(self, unit):"},"659":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Remove a unit from source and locaton indexes\\"\\"\\""},"660":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"661":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        def remove_unit(source):"},"662":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if source in self.sourceindex:"},"663":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                try:"},"664":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    self.sourceindex[source].remove(unit)"},"665":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    if len(self.sourceindex[source]) == 0:"},"666":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                        del(self.sourceindex[source])"},"667":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                except ValueError:"},"668":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    pass"},"669":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"670":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if unit.hasplural():"},"671":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            for source in unit.source.strings:"},"672":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                remove_unit(source)"},"673":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        else:"},"674":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            remove_unit(unit.source)"},"675":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"676":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        for location in unit.getlocations():"},"677":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if (location in self.locationindex and"},"678":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                self.locationindex[location] is not None and"},"679":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                self.locationindex[location] == unit):"},"680":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                del(self.locationindex[location])"},"681":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"682":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def add_unit_to_index(self, unit):"},"683":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Add a unit to source and location idexes\\"\\"\\""},"684":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        self.id_index[unit.getid()] = unit"},"685":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"686":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        def insert_unit(source):"},"687":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if source not in self.sourceindex:"},"688":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                self.sourceindex[source] = [unit]"},"689":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            else:"},"690":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                self.sourceindex[source].append(unit)"},"691":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"692":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if unit.hasplural():"},"693":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            for source in unit.source.strings:"},"694":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                insert_unit(source)"},"695":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        else:"},"696":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            insert_unit(unit.source)"},"697":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"698":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        for location in unit.getlocations():"},"699":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            # If locations aren\'t unique, keep the first unit."},"700":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if location not in self.locationindex:"},"701":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                #FIXME: maybe better store a list of units like sourceindex in"},"702":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                # case there are several units with the same location."},"703":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                self.locationindex[location] = unit"},"704":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"705":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def makeindex(self):"},"706":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Indexes the items in this store. At least .sourceindex should be"},"707":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        useful."},"708":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\""},"709":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        self.locationindex = {}"},"710":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        self.sourceindex = {}"},"711":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        self.id_index = {}"},"712":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        for index, unit in enumerate(self.units):"},"713":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            unit.index = index"},"714":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if not (unit.isheader() or unit.isblank()):"},"715":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                self.add_unit_to_index(unit)"},"716":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"717":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def require_index(self):"},"718":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"make sure source index exists\\"\\"\\""},"719":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if not hasattr(self, \\"id_index\\"):"},"720":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            self.makeindex()"},"721":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"722":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def getids(self, filename=None):"},"723":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"return a list of unit ids\\"\\"\\""},"724":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        self.require_index()"},"725":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return self.id_index.keys()"},"726":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"727":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def __getstate__(self):"},"728":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        odict = self.__dict__.copy()"},"729":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        # fileobj is generally not picklable"},"730":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        odict[\'fileobj\'] = None"},"731":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return odict"},"732":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"733":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def __str__(self):"},"734":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        # This allows the old str(store) method for serialization to be kept"},"735":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        # for compatibility purpose."},"736":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if six.PY2:"},"737":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            return self.__bytes__()"},"738":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return super(TranslationStore, self).__str__()"},"739":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"740":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def __bytes__(self):"},"741":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        out = BytesIO()"},"742":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        self.serialize(out)"},"743":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return out.getvalue()"},"744":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"745":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def serialize(self, out):"},"746":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Converts to a bytes representation that can be parsed back using"},"747":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        :meth:`~.TranslationStore.parsestring`."},"748":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        `out` should be an open file-like objects to write to."},"749":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\""},"750":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        out.write(pickle.dumps(self))"},"751":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"752":{"hits":4,"time":0.000013113021850585938,"time_per_hit":0.0000032782554626464844,"percent":0.001569820178525659,"line":"    def isempty(self):"},"753":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Return True if the object doesn\'t contain any translation units.\\"\\"\\""},"754":{"hits":4,"time":0.00000762939453125,"time_per_hit":0.0000019073486328125,"percent":0.0009133499220512926,"line":"        if len(self.units) == 0:"},"755":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            return True"},"756":{"hits":8,"time":0.00001430511474609375,"time_per_hit":0.0000017881393432617188,"percent":0.0017125311038461736,"line":"        for unit in self.units:"},"757":{"hits":7,"time":0.000037670135498046875,"time_per_hit":0.000005381447928292411,"percent":0.004509665240128257,"line":"            if unit.istranslatable():"},"758":{"hits":3,"time":0.000004291534423828125,"time_per_hit":0.000001430511474609375,"percent":0.0005137593311538521,"line":"                return False"},"759":{"hits":1,"time":0.0000011920928955078125,"time_per_hit":0.0000011920928955078125,"percent":0.00014271092532051446,"line":"        return True"},"760":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"761":{"hits":4,"time":0.000008821487426757812,"time_per_hit":0.000002205371856689453,"percent":0.001056060847371807,"line":"    def _assignname(self):"},"762":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Tries to work out what the name of the filesystem file is and"},"763":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        assigns it to .filename."},"764":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\""},"765":{"hits":4,"time":0.00000858306884765625,"time_per_hit":0.0000021457672119140625,"percent":0.0010275186623077042,"line":"        fileobj = getattr(self, \\"fileobj\\", None)"},"766":{"hits":4,"time":0.000006198883056640625,"time_per_hit":0.0000015497207641601562,"percent":0.0007420968116666752,"line":"        if fileobj:"},"767":{"hits":4,"time":0.000012874603271484375,"time_per_hit":0.0000032186508178710938,"percent":0.0015412779934615563,"line":"            filename = getattr(fileobj, \\"name\\", None)"},"768":{"hits":4,"time":0.0000059604644775390625,"time_per_hit":0.0000014901161193847656,"percent":0.0007135546266025724,"line":"            if not filename:"},"769":{"hits":4,"time":0.000008106231689453125,"time_per_hit":0.0000020265579223632812,"percent":0.0009704342921794984,"line":"                filename = getattr(fileobj, \\"filename\\", None)"},"770":{"hits":4,"time":0.0000054836273193359375,"time_per_hit":0.0000013709068298339844,"percent":0.0006564702564743665,"line":"            if filename:"},"771":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                self.filename = filename"},"772":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"773":{"hits":4,"time":0.000013828277587890625,"time_per_hit":0.0000034570693969726562,"percent":0.0016554467337179678,"line":"    @classmethod"},"774":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def parsestring(cls, storestring):"},"775":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Convert the string representation back to an object.\\"\\"\\""},"776":{"hits":4,"time":0.00004839897155761719,"time_per_hit":0.000012099742889404297,"percent":0.005794063568012887,"line":"        newstore = cls()"},"777":{"hits":4,"time":0.00001049041748046875,"time_per_hit":0.0000026226043701171875,"percent":0.0012558561428205274,"line":"        if isinstance(storestring, six.text_type):"},"778":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            # parse() is expecting bytes"},"779":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            storestring = storestring.encode(cls.default_encoding)"},"780":{"hits":4,"time":0.000026226043701171875,"time_per_hit":0.000006556510925292969,"percent":0.003139640357051318,"line":"        newstore.parse(storestring)"},"781":{"hits":4,"time":0.0000069141387939453125,"time_per_hit":0.0000017285346984863281,"percent":0.0008277233668589839,"line":"        return newstore"},"782":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"783":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def fallback_detection(self, text):"},"784":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\""},"785":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        Simple detection based on BOM in case chardet is not available."},"786":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\""},"787":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        for bom, encoding in ENCODING_BOMS:"},"788":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if text.startswith(bom):"},"789":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                return {"},"790":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    \'encoding\': encoding,"},"791":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    \'confidence\': 1.0"},"792":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                }"},"793":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return None"},"794":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"795":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def detect_encoding(self, text, default_encodings=None):"},"796":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\""},"797":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        Try to detect a file encoding from `text`, using either the chardet lib"},"798":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        or by trying to decode the file."},"799":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\""},"800":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if not default_encodings:"},"801":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            default_encodings = [\'utf-8\']"},"802":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        try:"},"803":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            import chardet"},"804":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        except ImportError:"},"805":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            detected_encoding = self.fallback_detection(text)"},"806":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        else:"},"807":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            # many false complaints with ellipse (\u2026) (see bug 1825)"},"808":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            detected_encoding = chardet.detect(text.replace(b\\"\\\\xe2\\\\x80\\\\xa6\\", b\\"\\"))"},"809":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if detected_encoding[\'confidence\'] < 0.48:"},"810":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                detected_encoding = None"},"811":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            elif detected_encoding[\'encoding\'] == \'ascii\':"},"812":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                detected_encoding[\'encoding\'] = self.encoding"},"813":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            else:"},"814":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                detected_encoding[\'encoding\'] = detected_encoding[\'encoding\'].lower()"},"815":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"816":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        encodings = []"},"817":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        # Purposefully accessed the internal _encoding, as encoding is never \'auto\'"},"818":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if self._encoding == \'auto\':"},"819":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if detected_encoding and detected_encoding[\'encoding\'] not in encodings:"},"820":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                encodings.append(detected_encoding[\'encoding\'])"},"821":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            for encoding in default_encodings:"},"822":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                if encoding not in encodings:"},"823":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                    encodings.append(encoding)"},"824":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        elif detected_encoding:"},"825":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if \'-\' in detected_encoding[\'encoding\']:"},"826":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                encoding, suffix = detected_encoding[\'encoding\'].rsplit(\'-\', 1)"},"827":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            else:"},"828":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                encoding = detected_encoding[\'encoding\']"},"829":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                suffix = None"},"830":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"831":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            # Different charset, just with BOM"},"832":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if encoding == self.encoding and suffix == \'sig\':"},"833":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                encodings.append(detected_encoding[\'encoding\'])"},"834":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            elif detected_encoding[\'encoding\'] != self.encoding:"},"835":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                logging.warn(\\"trying to parse %s with encoding: %s but \\""},"836":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                             \\"detected encoding is %s (confidence: %s)\\","},"837":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                             self.filename, self.encoding,"},"838":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                             detected_encoding[\'encoding\'],"},"839":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                             detected_encoding[\'confidence\'])"},"840":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            encodings.append(self.encoding)"},"841":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        else:"},"842":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            encodings.append(self.encoding)"},"843":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"844":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        for encoding in encodings:"},"845":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            try:"},"846":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                r_text = six.text_type(text, encoding)"},"847":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                r_encoding = encoding"},"848":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                break"},"849":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            except UnicodeDecodeError:"},"850":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                r_text = None"},"851":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                r_encoding = None"},"852":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if r_encoding == \'ascii\':"},"853":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            r_encoding = \'utf-8\'"},"854":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return r_text, r_encoding"},"855":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"856":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def parse(self, data):"},"857":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"parser to process the given source string\\"\\"\\""},"858":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        self.units = pickle.loads(data).units"},"859":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"860":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def savefile(self, storefile):"},"861":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Write the string representation to the given file (or filename).\\"\\"\\""},"862":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if isinstance(storefile, six.string_types):"},"863":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            storefile = open(storefile, \'wb\')"},"864":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        self.fileobj = storefile"},"865":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        self._assignname()"},"866":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        self.serialize(storefile)"},"867":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        storefile.close()"},"868":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"869":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def save(self):"},"870":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Save to the file that data was originally read from, if available."},"871":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\""},"872":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        fileobj = getattr(self, \\"fileobj\\", None)"},"873":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if not fileobj:"},"874":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if hasattr(self, \\"filename\\"):"},"875":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                fileobj = open(self.filename, \'wb\')"},"876":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        else:"},"877":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            fileobj.close()"},"878":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            filename = getattr(fileobj, \\"name\\","},"879":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                               getattr(fileobj, \\"filename\\", None))"},"880":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if not filename:"},"881":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                raise ValueError(\\"No file or filename to save to\\")"},"882":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            fileobj = open(filename, \'wb\')"},"883":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        self.savefile(fileobj)"},"884":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"885":{"hits":4,"time":0.000012874603271484375,"time_per_hit":0.0000032186508178710938,"percent":0.0015412779934615563,"line":"    @classmethod"},"886":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def parsefile(cls, storefile):"},"887":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"Reads the given file (or opens the given filename) and parses back"},"888":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        to an object."},"889":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\""},"890":{"hits":4,"time":0.000016927719116210938,"time_per_hit":0.000004231929779052734,"percent":0.0020264951395513055,"line":"        if isinstance(storefile, six.string_types):"},"891":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            storefile = open(storefile, \'rb\')"},"892":{"hits":4,"time":0.000011444091796875,"time_per_hit":0.00000286102294921875,"percent":0.001370024883076939,"line":"        mode = getattr(storefile, \\"mode\\", \'rb\')"},"893":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        #For some reason GzipFile returns 1, so we have to test for that here"},"894":{"hits":4,"time":0.000011920928955078125,"time_per_hit":0.0000029802322387695312,"percent":0.0014271092532051448,"line":"        if mode == 1 or \\"r\\" in mode:"},"895":{"hits":4,"time":0.000008106231689453125,"time_per_hit":0.0000020265579223632812,"percent":0.0009704342921794984,"line":"            storestring = storefile.read()"},"896":{"hits":4,"time":0.000010013580322265625,"time_per_hit":0.0000025033950805664062,"percent":0.0011987717726923215,"line":"            storefile.close()"},"897":{"hits":4,"time":0.000037670135498046875,"time_per_hit":0.000009417533874511719,"percent":0.004509665240128257,"line":"            newstore = cls.parsestring(storestring)"},"898":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        else:"},"899":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            storestring = \\"\\""},"900":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            newstore = cls()"},"901":{"hits":4,"time":0.000008344650268554688,"time_per_hit":0.000002086162567138672,"percent":0.0009989764772436014,"line":"        newstore.fileobj = storefile"},"902":{"hits":4,"time":0.000025033950805664062,"time_per_hit":0.000006258487701416016,"percent":0.0029969294317308036,"line":"        newstore._assignname()"},"903":{"hits":4,"time":0.0000059604644775390625,"time_per_hit":0.0000014901161193847656,"percent":0.0007135546266025724,"line":"        return newstore"},"904":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"905":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    @property"},"906":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def merge_on(self):"},"907":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\"The matching criterion to use when merging on."},"908":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"909":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        :return: The default matching criterion for all the subclasses."},"910":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        :rtype: string"},"911":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \\"\\"\\""},"912":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return \\"id\\""},"file_total_time":0.0006351470947265625,"file_total_time_percent":0.07603638101077011},"translate/misc/multistring.py":{"1":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# -*- coding: utf-8 -*-"},"2":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#"},"3":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# Copyright 2006 Zuza Software Foundation"},"4":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#"},"5":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# This file is part of translate."},"6":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#"},"7":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# translate is free software; you can redistribute it and/or modify"},"8":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# it under the terms of the GNU General Public License as published by"},"9":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# the Free Software Foundation; either version 2 of the License, or"},"10":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# (at your option) any later version."},"11":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#"},"12":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# translate is distributed in the hope that it will be useful,"},"13":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# but WITHOUT ANY WARRANTY; without even the implied warranty of"},"14":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the"},"15":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# GNU General Public License for more details."},"16":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#"},"17":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# You should have received a copy of the GNU General Public License"},"18":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# along with this program; if not, see <http://www.gnu.org/licenses/>."},"19":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"20":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"\\"\\"\\"Supports a hybrid Unicode string that can also have a list of alternate"},"21":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"strings in the strings attribute"},"22":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"\\"\\"\\""},"23":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"from __future__ import unicode_literals"},"24":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"25":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"import warnings"},"26":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"27":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"import six"},"28":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"29":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"from .deprecation import RemovedInTTK2Warning"},"30":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"31":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"32":{"hits":1,"time":0.0000050067901611328125,"time_per_hit":0.0000050067901611328125,"percent":0.0005993858863461608,"line":"def _create_text_type(newtype, string, encoding):"},"33":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\"Helper to construct a text type out of characters or bytes. Required to"},"34":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    temporarily preserve backwards compatibility. Must be removed in TTK2."},"35":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\""},"36":{"hits":1,"time":0.0000021457672119140625,"time_per_hit":0.0000021457672119140625,"percent":0.00025687966557692604,"line":"    if string is None:"},"37":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        string = \'\'"},"38":{"hits":1,"time":0.0000026226043701171875,"time_per_hit":0.0000026226043701171875,"percent":0.00031396403570513185,"line":"    if isinstance(string, six.text_type):"},"39":{"hits":1,"time":0.000049591064453125,"time_per_hit":0.000049591064453125,"percent":0.005936774493333402,"line":"        return six.text_type.__new__(newtype, string)"},"40":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"41":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    warnings.warn("},"42":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \'Passing non-ASCII bytes as well as the `encoding` argument to \'"},"43":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        \'`multistring` is deprecated. Always pass unicode characters instead.\',"},"44":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        RemovedInTTK2Warning, stacklevel=2,"},"45":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    )"},"46":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    return six.text_type.__new__(newtype, string, encoding)"},"47":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"48":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"49":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"class multistring(six.text_type):"},"50":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"51":{"hits":1,"time":0.000005245208740234375,"time_per_hit":0.000005245208740234375,"percent":0.0006279280714102637,"line":"    def __new__(newtype, string=u\\"\\", *args, **kwargs):"},"52":{"hits":1,"time":0.000015974044799804688,"time_per_hit":0.000015974044799804688,"percent":0.0019123263992948938,"line":"        encoding = kwargs.pop(\'encoding\', \'utf-8\')"},"53":{"hits":1,"time":0.0000026226043701171875,"time_per_hit":0.0000026226043701171875,"percent":0.00031396403570513185,"line":"        if isinstance(string, list):"},"54":{"hits":1,"time":0.0000021457672119140625,"time_per_hit":0.0000021457672119140625,"percent":0.00025687966557692604,"line":"            if not string:"},"55":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                raise ValueError(\\"multistring must contain at least one string\\")"},"56":{"hits":1,"time":0.000011682510375976562,"time_per_hit":0.000011682510375976562,"percent":0.0013985670681410417,"line":"            newstring = _create_text_type(newtype, string[0], encoding)"},"57":{"hits":3,"time":0.000020503997802734375,"time_per_hit":0.000006834665934244792,"percent":0.0024546279155128487,"line":"            newstring.strings = [newstring] + [multistring.__new__(newtype, altstring) for altstring in string[1:]]"},"58":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        else:"},"59":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            newstring = _create_text_type(newtype, string, encoding)"},"60":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            newstring.strings = [newstring]"},"61":{"hits":1,"time":0.0000021457672119140625,"time_per_hit":0.0000021457672119140625,"percent":0.00025687966557692604,"line":"        return newstring"},"62":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"63":{"hits":1,"time":0.0000021457672119140625,"time_per_hit":0.0000021457672119140625,"percent":0.00025687966557692604,"line":"    def __init__(self, *args, **kwargs):"},"64":{"hits":1,"time":0.0000035762786865234375,"time_per_hit":0.0000035762786865234375,"percent":0.0004281327759615434,"line":"        super(multistring, self).__init__()"},"65":{"hits":1,"time":0.000002384185791015625,"time_per_hit":0.000002384185791015625,"percent":0.0002854218506410289,"line":"        if not hasattr(self, \\"strings\\"):"},"66":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            self.strings = []"},"67":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"68":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def __cmp__(self, otherstring):"},"69":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        def cmp_compat(s1, s2):"},"70":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            # Python 3 compatible cmp() equivalent"},"71":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            return (s1 > s2) - (s1 < s2)"},"72":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if isinstance(otherstring, multistring):"},"73":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            parentcompare = cmp_compat(six.text_type(self), otherstring)"},"74":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if parentcompare:"},"75":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                return parentcompare"},"76":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            else:"},"77":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                return cmp_compat(self.strings[1:], otherstring.strings[1:])"},"78":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        elif isinstance(otherstring, six.text_type):"},"79":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            return cmp_compat(six.text_type(self), otherstring)"},"80":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        elif isinstance(otherstring, bytes):"},"81":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            return cmp_compat(self.encode(\'utf-8\'), otherstring)"},"82":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        elif isinstance(otherstring, list) and otherstring:"},"83":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            return cmp_compat(self, multistring(otherstring))"},"84":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        else:"},"85":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            return cmp_compat(str(type(self)), str(type(otherstring)))"},"86":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"87":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def __hash__(self):"},"88":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return hash(str(self))"},"89":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"90":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def __ne__(self, otherstring):"},"91":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return self.__cmp__(otherstring) != 0"},"92":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"93":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def __eq__(self, otherstring):"},"94":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return self.__cmp__(otherstring) == 0"},"95":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"96":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def __repr__(self):"},"97":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        _repr = u\\"multistring(%r)\\" % ("},"98":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            [six.text_type(item) for item in self.strings]"},"99":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        )"},"100":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return _repr.encode(\'utf-8\') if six.PY2 else _repr"},"101":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"102":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def __str__(self):"},"103":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if six.PY2:"},"104":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            return self.encode(\'utf-8\')"},"105":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return super(multistring, self).__str__()"},"106":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"107":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    def replace(self, old, new, count=None):"},"108":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        if count is None:"},"109":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            newstr = multistring(super(multistring, self).replace(old, new))"},"110":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        else:"},"111":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            newstr = multistring(super(multistring, self).replace(old, new, count))"},"112":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        for s in self.strings[1:]:"},"113":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if count is None:"},"114":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                newstr.strings.append(s.replace(old, new))"},"115":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            else:"},"116":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                newstr.strings.append(s.replace(old, new, count))"},"117":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        return newstr"},"file_total_time":0.0001277923583984375,"file_total_time_percent":0.01529861119435915},"translate/misc/deprecation.py":{"1":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# -*- coding: utf-8 -*-"},"2":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#"},"3":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# Copyright 2014 Zuza Software Foundation"},"4":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#"},"5":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# This file is part of translate."},"6":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#"},"7":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# translate is free software; you can redistribute it and/or modify it under"},"8":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# the terms of the GNU General Public License as published by the Free Software"},"9":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# Foundation; either version 2 of the License, or (at your option) any later"},"10":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# version."},"11":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#"},"12":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# translate is distributed in the hope that it will be useful, but WITHOUT ANY"},"13":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR"},"14":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# A PARTICULAR PURPOSE. See the GNU General Public License for more details."},"15":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#"},"16":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# You should have received a copy of the GNU General Public License along with"},"17":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# this program; if not, see <http://www.gnu.org/licenses/>."},"18":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"19":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"import six"},"20":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"import warnings"},"21":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"from functools import wraps"},"22":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"23":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"24":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"class RemovedInTTK2Warning(DeprecationWarning):"},"25":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    pass"},"26":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"27":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"28":{"hits":3,"time":0.000037670135498046875,"time_per_hit":0.000012556711832682291,"percent":0.004509665240128257,"line":"def deprecated(message=\\"\\"):"},"29":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\"Decorator that marks functions and methods as deprecated."},"30":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"31":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    A warning will be emitted when the function or method is used. If a custom"},"32":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    message is provided, it will be shown after the default warning message."},"33":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    \\"\\"\\""},"34":{"hits":6,"time":0.00004315376281738281,"time_per_hit":0.000007192293802897136,"percent":0.005166135496602624,"line":"    def inner_render(func):"},"35":{"hits":3,"time":0.0000362396240234375,"time_per_hit":0.000012079874674479166,"percent":0.00433841212974364,"line":"        @wraps(func)"},"36":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        def new_func(*args, **kwargs):"},"37":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            msg = message  # Hack to avoid UnboundLocalError."},"38":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            if msg:"},"39":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                msg = \\"\\\\n\\" + msg"},"40":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            func_code = func.func_code if six.PY2 else func.__code__"},"41":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            warnings.warn_explicit("},"42":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                \\"Call to deprecated function {0}.{1}\\".format(func.__name__,"},"43":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                                                             msg),"},"44":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                category=DeprecationWarning,"},"45":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                filename=func_code.co_filename,"},"46":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                lineno=func_code.co_firstlineno + 1"},"47":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            )"},"48":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"            return func(*args, **kwargs)"},"49":{"hits":3,"time":0.00000476837158203125,"time_per_hit":0.0000015894571940104167,"percent":0.0005708437012820578,"line":"        return new_func"},"50":{"hits":3,"time":0.0000050067901611328125,"time_per_hit":0.0000016689300537109375,"percent":0.0005993858863461608,"line":"    return inner_render"},"file_total_time":0.00012683868408203125,"file_total_time_percent":0.01518444245410274},"translate/storage/po.py":{"1":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# -*- coding: utf-8 -*-"},"2":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#"},"3":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# Copyright 2007 Zuza Software Foundation"},"4":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#"},"5":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# This file is part of translate."},"6":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#"},"7":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# translate is free software; you can redistribute it and/or modify"},"8":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# it under the terms of the GNU General Public License as published by"},"9":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# the Free Software Foundation; either version 2 of the License, or"},"10":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# (at your option) any later version."},"11":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#"},"12":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# translate is distributed in the hope that it will be useful,"},"13":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# but WITHOUT ANY WARRANTY; without even the implied warranty of"},"14":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the"},"15":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# GNU General Public License for more details."},"16":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#"},"17":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# You should have received a copy of the GNU General Public License"},"18":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# along with this program; if not, see <http://www.gnu.org/licenses/>."},"19":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"20":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"\\"\\"\\"A class loader that will load C or Python implementations of the PO class"},"21":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"depending on the ``USECPO`` variable."},"22":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"23":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"Use the environment variable ``USECPO=2`` (or ``USECPO=1``) to choose the"},"24":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"C implementation which uses Gettext\'s libgettextpo for high parsing speed."},"25":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"Otherwise the local Python based parser is used (slower but very well"},"26":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"tested)."},"27":{"hits":2,"time":0.00000858306884765625,"time_per_hit":0.000004291534423828125,"percent":0.0010275186623077042,"line":"\\"\\"\\""},"28":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"29":{"hits":1,"time":0.000006198883056640625,"time_per_hit":0.000006198883056640625,"percent":0.0007420968116666752,"line":"import logging"},"30":{"hits":1,"time":0.0000030994415283203125,"time_per_hit":0.0000030994415283203125,"percent":0.0003710484058333376,"line":"import os"},"31":{"hits":1,"time":0.000005245208740234375,"time_per_hit":0.000005245208740234375,"percent":0.0006279280714102637,"line":"import platform"},"32":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"33":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"34":{"hits":1,"time":0.000013589859008789062,"time_per_hit":0.000013589859008789062,"percent":0.001626904548653865,"line":"usecpo = os.getenv(\'USECPO\')"},"35":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"36":{"hits":1,"time":0.00001049041748046875,"time_per_hit":0.00001049041748046875,"percent":0.0012558561428205274,"line":"if platform.python_implementation() == \\"CPython\\":"},"37":{"hits":1,"time":0.000002384185791015625,"time_per_hit":0.000002384185791015625,"percent":0.0002854218506410289,"line":"    if usecpo == \\"1\\":"},"38":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        from translate.storage.cpo import *  # pylint: disable=W0401,W0614"},"39":{"hits":1,"time":0.0000021457672119140625,"time_per_hit":0.0000021457672119140625,"percent":0.00025687966557692604,"line":"    elif usecpo == \\"2\\":"},"40":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        from translate.storage.fpo import *  # pylint: disable=W0401,W0614"},"41":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    else:"},"42":{"hits":1,"time":0.000020742416381835938,"time_per_hit":0.000020742416381835938,"percent":0.0024831701005769515,"line":"        from translate.storage.pypo import *  # pylint: disable=W0401,W0614"},"43":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"else:"},"44":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    if usecpo:"},"45":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"        logging.error(\\"cPO and fPO do not work on %s defaulting to PyPO\\" %"},"46":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"                      platform.python_implementation())"},"47":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"    from translate.storage.pypo import *  # pylint: disable=W0401"},"file_total_time":0.000072479248046875,"file_total_time_percent":0.00867682425948728},"translate/lang/__init__.py":{"1":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# -*- coding: utf-8 -*-"},"2":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#"},"3":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# Copyright 2007 Zuza Software Foundation"},"4":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#"},"5":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# This file is part of translate."},"6":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#"},"7":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# translate is free software; you can redistribute it and/or modify"},"8":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# it under the terms of the GNU General Public License as published by"},"9":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# the Free Software Foundation; either version 2 of the License, or"},"10":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# (at your option) any later version."},"11":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#"},"12":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# translate is distributed in the hope that it will be useful,"},"13":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# but WITHOUT ANY WARRANTY; without even the implied warranty of"},"14":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the"},"15":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# GNU General Public License for more details."},"16":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"#"},"17":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# You should have received a copy of the GNU General Public License"},"18":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"# along with this program; if not, see <http://www.gnu.org/licenses/>."},"19":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"20":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"\\"\\"\\"Classes that represent languages and provides language-specific information."},"21":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"22":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"All classes inherit from the parent class called :class:`common`."},"23":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"24":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"The type of data includes:"},"25":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":""},"26":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"- Language codes"},"27":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"- Language name"},"28":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"- Plurals"},"29":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"- Punctuation transformation"},"30":{"hits":0,"time":0,"time_per_hit":0,"percent":0,"line":"- etc."},"31":{"hits":2,"time":0.000010251998901367188,"time_per_hit":0.000005125999450683594,"percent":0.0012273139577564244,"line":"\\"\\"\\""},"file_total_time":0.000010251998901367188,"file_total_time_percent":0.0012273139577564244}}')},57:function(e,t,i){"use strict";var n=i(0),r=i.n(n),p=i(5),m=function(){return r.a.createElement("span",{role:"img","aria-label":"Heart Emoji"},"\u2764\ufe0f")},s=(i(68),function(){return r.a.createElement("div",{className:"HeaderContainer"},r.a.createElement(p.b,{to:"/"},r.a.createElement("div",{className:"HeaderTitle"},"LHTM Python Profiler")),r.a.createElement("div",{className:"HeaderSubtitle"},"Made with ",r.a.createElement(m,null)))}),h=(i(73),function(){return r.a.createElement("div",{className:"FooterContainer"},r.a.createElement("div",{className:"FooterText"},"Made for CPSC 410"))}),_=i(2),l=(i(74),function(e){var t=e.children;return r.a.createElement("div",{className:"HomeContainer"},r.a.createElement("div",null,t))}),c=i(8),o=i(29),a=i.n(o),u=i(48),d=i(33),f=function(){var e=Object(u.a)(a.a.mark((function e(){return a.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt("return",window.line_level_profile||d);case 1:case"end":return e.stop()}}),e)})));return function(){return e.apply(this,arguments)}}(),g=i(58),y=function(e){var t=e.Child,i=r.a.useState(!1),n=Object(c.a)(i,2),p=n[0],m=n[1],s=r.a.useState([]),h=Object(c.a)(s,2),_=h[0],l=h[1];return r.a.useEffect((function(){f().then((function(e){return function(e){return Object.entries(e).map((function(e){var t,i=Object(c.a)(e,2),n=i[0],r=i[1],p=r.file_total_time,m=r.file_total_time_percent,s=Object(g.a)(r,["file_total_time","file_total_time_percent"]);return{name:n,totalTime:p,totalTimePercent:m,lines:(t=Object.entries(s),t.map((function(e){var t=Object(c.a)(e,2),i=t[0],n=t[1],r=n.hits,p=n.time,m=n.percent;return{lineNumber:i,hits:r,time:p,timePerHit:n.time_per_hit,percent:m,lineText:n.line}})))}}))}(e)})).then((function(e){return l(e)})).then((function(){return m(!0)}))}),[]),r.a.createElement(t,{isLoaded:p,fileList:_})},w=(i(76),function(e){var t=e.files;return r.a.createElement("div",{className:"FileListContainer"},r.a.createElement("div",{className:"FileListTitle"},"Project Files"),r.a.createElement("div",{className:"FileList"},t.map((function(e){return r.a.createElement(p.b,{to:"/file/".concat(btoa(e.name))},r.a.createElement("div",{className:"FileListItem",key:e.name}," ",e.name," "))}))))}),b=(i(77),function(){return r.a.createElement("div",{className:"Spinner"},"\ud83e\udd13")}),x=function(){return r.a.createElement(y,{Child:function(e){var t=e.isLoaded,i=e.fileList;return t?r.a.createElement(w,{files:i}):r.a.createElement(b,null)}})},v=function(){return r.a.createElement(l,null,r.a.createElement(x,null))},T=i(49),k=i(50),E=i(283);i(78);function N(){var e=Object(T.a)(["\n        code:nth-of-type(2) {\n          ","\n        }\n   "]);return N=function(){return e},e}var S=function(e){var t=e.file,i=e.view,p=Object(n.useMemo)((function(){return t.lines.map((function(e){return e.lineText})).join("\n")}),[t]),m=Object(n.useMemo)((function(){return t.lines.slice().sort((function(e,t){return t.hits-e.hits}))}),[t]),s=Object(n.useMemo)((function(){return t.lines.slice().sort((function(e,t){return t.time-e.time}))}),[t]),h=Object(n.useMemo)((function(){return m&&m[0]&&m[0].hits||0}),[t]),_=Object(n.useMemo)((function(){return s&&s[0]&&s[0].time||0}),[t]),l=function(e){if("hits"===i){var n=t.lines&&t.lines[e-1]&&t.lines[e-1].hits||0;return 0===n?0:n/h}if("time"===i){var r=t.lines&&t.lines[e-1]&&t.lines[e-1].time||0;return 0===r?0:r/_}return 0},c=Object(k.a)(E.a)(N(),function(){for(var e="",n=1;n<=t.lines.length;n++){var r=l(n);e+="\n                    span:nth-of-type(".concat(n,") {\n                        background-color: ").concat("hits"===i?"rgba(0,0,180, ".concat(r?Math.max(r/2.5,.05):0,")"):"rgba(255,".concat(255*(1-r),",0, ").concat(r>.5?.5:r,")"),";\n                        display: block;\n                        text-shadow: none !important;\n                        span {\n                            display: initial;\n                            background-color: initial;\n                        }\n                    }\n                ")}return e}());return r.a.createElement("div",{className:"CodeViewerContainer"},r.a.createElement(c,{language:"python",showLineNumbers:!0,wrapLines:!0},p))},A=(i(277),function(e){var t=e.fileList,i=e.isLoaded,n=e.view,p=Object(_.g)().fileName;p=atob(p);var m=t.find((function(e){return e.name===p}));return p&&m||!i?r.a.createElement(S,{file:m,view:n}):r.a.createElement(_.a,{to:"/"})}),F=i(12),O=i.n(F),L=(i(278),function(e){var t=e.view,i=e.setView,n=e.fileList,m=Object(_.g)().fileName;m=atob(m);var s=n.find((function(e){return e.name===m}));return r.a.createElement(r.a.Fragment,null,r.a.createElement("div",{className:"ViewToggleTop"},r.a.createElement("div",null,s&&s.name),r.a.createElement(p.b,{to:"/"},r.a.createElement("div",{className:"ViewAllFiles"},"View All Files"))),r.a.createElement("div",{className:"ViewToggleContainer"},r.a.createElement("div",{className:O()("ViewToggleItem",{"ViewToggleItem--Selected":"hits"===t}),onClick:function(){return i("hits")}},"Hits"),r.a.createElement("div",{className:O()("ViewToggleItem",{"ViewToggleItem--Selected":"time"===t}),onClick:function(){return i("time")}},"Time"),r.a.createElement("div",{className:O()("ViewToggleItem",{"ViewToggleItem--Selected":"none"===t}),onClick:function(){return i("none")}},"None")))}),R=(i(279),function(e){var t=e.fileList,i=e.view,n=Object(_.g)().fileName;n=atob(n);var p=t.find((function(e){return e.name===n})),m=p.lines.slice().sort((function(e,t){return t.hits-e.hits}))[0].hits,s=p.lines.slice().sort((function(e,t){return t.time-e.time}))[0].time,h=0;return"hits"===i&&(h=m),"time"===i&&(h=s),"none"===i?null:r.a.createElement("div",{className:"GradientContainer"},r.a.createElement("div",{className:O()("GradientColour",{"GradientColour--blue":"hits"===i,"GradientColour--red":"time"===i})}),r.a.createElement("div",{className:"GradientTextContainer"},r.a.createElement("div",{className:"GradientTextItem"},"0"),r.a.createElement("div",{className:"GradientTextItem"},h)))}),I=function(){var e=Object(n.useState)("hits"),t=Object(c.a)(e,2),i=t[0],p=t[1];return r.a.createElement("div",null,r.a.createElement(y,{Child:function(e){var t=e.fileList;return e.isLoaded?r.a.createElement(r.a.Fragment,null,r.a.createElement(L,{fileList:t,setView:p,view:i}),r.a.createElement(R,{fileList:t,view:i}),r.a.createElement(A,{fileList:t,view:i})):r.a.createElement(b,null)}}))},P=function(){return r.a.createElement(_.d,null,r.a.createElement(_.b,{path:"/",exact:!0,component:v}),r.a.createElement(_.b,{path:"/file/:fileName",component:I}),r.a.createElement(_.a,{to:"/"}))};i(280),t.a=function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement(s,null),r.a.createElement(P,null),r.a.createElement(h,null))}},61:function(e,t,i){e.exports=i(62)},62:function(e,t,i){"use strict";i.r(t),function(e){var t=i(0),n=i.n(t),r=i(45),p=i.n(r),m=(i(67),i(57)),s=i(26),h=i.n(s),_=i(5),l=i(56);i.n(l).a.config({path:h.a.resolve(e,"../.env")}),p.a.render(n.a.createElement(_.a,null,n.a.createElement(m.a,null)),document.getElementById("root"))}.call(this,"/")},67:function(e,t,i){},68:function(e,t,i){},73:function(e,t,i){},74:function(e,t,i){},76:function(e,t,i){},77:function(e,t,i){},78:function(e,t,i){}},[[61,1,2]]]);
//# sourceMappingURL=main.305d9425.chunk.js.map