{"version":3,"sources":["components/Emoji/Emoji.jsx","components/Emoji/Heart.jsx","components/Header/Header.jsx","components/Footer/Footer.jsx","components/Home/Home.jsx","utils/FetchData.js","containers/FileListProvider.jsx","utils/MapData.js","components/FileList/FileList.jsx","components/Emoji/Nerd.jsx","components/Spinner/Spinner.jsx","containers/FileListContainer.jsx","containers/HomeContainer.jsx","components/CodeViewer/CodeViewer.jsx","components/FileViewer/FileViewer.jsx","components/ViewToggle/ViewToggle.jsx","components/Gradient/Gradient.jsx","containers/FileViewerContainer.jsx","routes.jsx","App.jsx","index.jsx"],"names":["Emoji","symbol","name","role","aria-label","Heart","Header","className","to","Footer","Home","children","fetchData","a","window","line_level_profile","Data","FileListProvider","Child","React","useState","isLoaded","setIsLoaded","fileList","setFileList","useEffect","then","data","Object","entries","filter","key","map","value","file_total_time","file_total_time_percent","lines","totalTime","totalTimePercent","hits","time","percent","lineNumber","timePerHit","time_per_hit","lineText","line","mapDataToFiles","FileList","files","file","btoa","Nerd","Spinner","FileListContainer","HomeContainer","CodeViewer","view","codeString","useMemo","join","linesSortedByHits","slice","sort","line1","line2","linesSortedByTime","maxHits","maxTime","calculateShadeValue","StyledSyntaxHighlighter","styled","SyntaxHighlighter","styles","i","length","shadeValue","Math","max","language","showLineNumbers","wrapLines","startingLineNumber","parseInt","FileViewer","fileName","useParams","atob","find","ViewToggle","setView","cx","onClick","Gradient","maxCount","FileViewerContainer","Routes","path","exact","component","App","dotenv","config","resolve","__dirname","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c4e0d4a7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Emoji = ({ symbol, name }) => (\r\n  <span role=\"img\" aria-label={`${name} Emoji`}>\r\n    {symbol}\r\n  </span>\r\n);\r\n\r\nEmoji.propTypes = {\r\n  symbol: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Emoji;\r\n","import React from \"react\";\r\nimport Emoji from \"./Emoji\";\r\n\r\nconst Heart = () => <Emoji symbol=\"❤️\" name=\"Heart\" />;\r\n\r\nexport default Heart;\r\n","import React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport Heart from \"../Emoji/Heart\";\r\nimport \"./Header.scss\";\r\n\r\nconst Header = () => (\r\n  <div className=\"HeaderContainer\">\r\n      <Link to=\"/\"><div className=\"HeaderTitle\">LHTM Python Profiler</div></Link>\r\n      <div className=\"HeaderSubtitle\">\r\n        Made with <Heart />\r\n      </div>\r\n  </div>\r\n);\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./Footer.scss\";\r\n\r\nconst Footer = () => (\r\n  <div className=\"FooterContainer\">\r\n    <div className=\"FooterText\">\r\n        Made for CPSC 410\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Home.scss\";\r\n\r\nconst Home = ({ children }) => {\r\n  return (\r\n    <div className=\"HomeContainer\">\r\n      <div>{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nHome.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nexport default Home;\r\n","import { Data } from \"../../data\";\r\n\r\nconst fetchData = async () => {\r\n  if (window.line_level_profile) return window.line_level_profile;\r\n\r\n  return Data;\r\n};\r\n\r\nexport { fetchData };\r\n","import React from \"react\";\r\nimport { fetchData } from \"../utils/FetchData\";\r\nimport { mapDataToFiles } from \"../utils/MapData\";\r\n\r\n// Retrieves the data dumped from the JSON asynchronously.\r\nconst FileListProvider = ({ Child }) => {\r\n  const [isLoaded, setIsLoaded] = React.useState(false);\r\n  const [fileList, setFileList] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    fetchData()\r\n      .then(data => mapDataToFiles(data))\r\n      .then(data => setFileList(data))\r\n      .then(() => setIsLoaded(true));\r\n  }, []);\r\n\r\n  return <Child isLoaded={isLoaded} fileList={fileList} />;\r\n};\r\n\r\nexport default FileListProvider;\r\n","// Provides a known unified schema for the front-end\r\n// So prop values can be decoupled from the BE output.\r\n\r\n// Maps the given data to line objects with a known schema.\r\nconst mapDataToLines = entries =>\r\n  entries.map(([key, value]) => {\r\n    const { hits, time, percent } = value;\r\n    return {\r\n      lineNumber: key,\r\n      hits,\r\n      time,\r\n      timePerHit: value.time_per_hit,\r\n      percent,\r\n      lineText: value.line\r\n    };\r\n  });\r\n\r\n// Maps the given data to file objects with a known schema.\r\nconst mapDataToFiles = data => {\r\n  return Object.entries(data)\r\n    .filter(([key, _]) => key !== \"total_time\")\r\n    .map(([key, value]) => {\r\n      const { file_total_time, file_total_time_percent, ...lines } = value;\r\n      return {\r\n        name: key,\r\n        totalTime: file_total_time,\r\n        totalTimePercent: file_total_time_percent,\r\n        lines: mapDataToLines(Object.entries(lines))\r\n      };\r\n    });\r\n};\r\n\r\nexport { mapDataToFiles, mapDataToLines };\r\n","import React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from \"prop-types\";\r\nimport './FileList.scss';\r\n\r\nconst FileList = ({ files }) => (\r\n  <div className=\"FileListContainer\">\r\n        <div className=\"FileListTitle\">Project Files</div>\r\n        <div className=\"FileList\">\r\n          {files.map(file => (\r\n              <Link to={`/file/${btoa(file.name)}`}>\r\n                 <div className=\"FileListItem\" key={file.name}> {file.name} </div>\r\n              </Link>\r\n          ))}\r\n        </div>\r\n  </div>\r\n);\r\n\r\nFileList.propTypes = {\r\n  files: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired\r\n    })\r\n  ).isRequired\r\n};\r\n\r\nexport default FileList;\r\n","import React from \"react\";\r\nimport Emoji from \"./Emoji\";\r\n\r\nconst Nerd = () => <Emoji symbol=\"🤓\" name=\"Heart\" />;\r\n\r\nexport default Nerd;\r\n","import React from \"react\";\r\nimport Nerd from \"../Emoji/Nerd\";\r\nimport \"./Spinner.scss\";\r\n\r\n// TODO: Make me beautiful!\r\nconst Spinner = () => (\r\n  <div className=\"Spinner\">\r\n    <Nerd />\r\n  </div>\r\n);\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\r\nimport FileListProvider from \"./FileListProvider\";\r\nimport FileList from \"../components/FileList/FileList\";\r\nimport Spinner from \"../components/Spinner/Spinner\";\r\n\r\nconst FileListContainer = () => (\r\n  <FileListProvider\r\n    Child={({ isLoaded, fileList }) =>\r\n      !isLoaded ? <Spinner /> : <FileList files={fileList} />\r\n    }\r\n  />\r\n);\r\n\r\nexport default FileListContainer;\r\n","import React from \"react\";\r\nimport Home from \"../components/Home/Home\";\r\nimport FileListContainer from \"./FileListContainer\";\r\n\r\nconst HomeContainer = () => (\r\n  <Home>\r\n    <FileListContainer />\r\n  </Home>\r\n);\r\n\r\nexport default HomeContainer;\r\n","import React, { useMemo } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\r\nimport './CodeViewer.scss';\r\n\r\nconst CodeViewer = ({ file, view }) => {\r\n    const codeString = useMemo(() => file.lines.map(line => line.lineText).join('\\n'), [file]);\r\n\r\n    const linesSortedByHits = useMemo(() => file.lines.slice().sort((line1, line2) => line2.hits - line1.hits), [file]);\r\n    const linesSortedByTime = useMemo(() => file.lines.slice().sort((line1, line2) => line2.time - line1.time), [file]);\r\n\r\n    const maxHits = useMemo(() => (linesSortedByHits && linesSortedByHits[0] && linesSortedByHits[0].hits) || 0, [file]);\r\n    const maxTime = useMemo(() => (linesSortedByTime && linesSortedByTime[0] && linesSortedByTime[0].time) || 0, [file]);\r\n\r\n    const calculateShadeValue = (lineNumber) => {\r\n        if (view === 'hits') {\r\n            const hits = (file.lines && file.lines[lineNumber - 1] && file.lines[lineNumber - 1].hits) || 0;\r\n            if (hits === 0) return 0;\r\n            return hits / maxHits;\r\n        } else if (view === 'time') {\r\n            const time = (file.lines && file.lines[lineNumber - 1] && file.lines[lineNumber - 1].time) || 0;\r\n            if (time === 0) return 0;\r\n            return time / maxTime;\r\n        } else {\r\n            return 0;\r\n        }\r\n    };\r\n\r\n    const StyledSyntaxHighlighter = styled(SyntaxHighlighter)`\r\n        code:nth-of-type(2) {\r\n          ${(() => {\r\n            let styles = '';\r\n            for (let i = 1; i <= file.lines.length; i++) {\r\n                const shadeValue = calculateShadeValue(i);\r\n                styles += `\r\n                    span:nth-of-type(${i}) {\r\n                        background-color: ${view === \"hits\" ?\r\n                    `rgba(0,0,180, ${shadeValue ? Math.max(shadeValue/2.5, 0.05) : 0})` :\r\n                    `rgba(255,${(1 - shadeValue) * 255},0, ${shadeValue > 0.5 ? 0.5 : shadeValue})`};\r\n                        display: block;\r\n                        text-shadow: none !important;\r\n                        span {\r\n                            display: initial;\r\n                            background-color: initial;\r\n                        }\r\n                    }\r\n                `;\r\n            }\r\n            return styles\r\n            })()}\r\n        }\r\n   `;\r\n\r\n    return (\r\n        <div className=\"CodeViewerContainer\">\r\n            <StyledSyntaxHighlighter\r\n                language=\"python\"\r\n                showLineNumbers\r\n                wrapLines\r\n                startingLineNumber={parseInt(file.lines[0].lineNumber)}\r\n            >\r\n                {codeString}\r\n            </StyledSyntaxHighlighter>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CodeViewer;\r\n","import React from 'react';\r\nimport { useParams } from \"react-router\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport CodeViewer from '../CodeViewer/CodeViewer.jsx';\r\nimport './FileViewer.scss';\r\n\r\nconst FileViewer = ({ fileList, isLoaded, view }) => {\r\n    let { fileName } = useParams();\r\n    fileName = atob(fileName);\r\n    const file = fileList.find((file) => file.name === fileName);\r\n\r\n    if ((!fileName || !file) && isLoaded) return <Redirect to=\"/\" />;\r\n    return <CodeViewer file={file} view={view} />;\r\n};\r\n\r\nexport default FileViewer;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useParams } from \"react-router\";\r\nimport cx from 'classnames';\r\nimport './ViewToggle.scss';\r\n\r\nconst ViewToggle = ({ view, setView, fileList }) => {\r\n    let { fileName } = useParams();\r\n    fileName = atob(fileName);\r\n    const file = fileList.find((file) => file.name === fileName);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"ViewToggleTop\">\r\n                <div>\r\n                    {file && file.name}\r\n                </div>\r\n                <Link to=\"/\">\r\n                    <div className=\"ViewAllFiles\">View All Files</div>\r\n                </Link>\r\n            </div>\r\n            <div className=\"ViewToggleContainer\">\r\n                <div className={cx(\r\n                    'ViewToggleItem',\r\n                    {\r\n                        'ViewToggleItem--Selected': view === 'hits',\r\n                    }\r\n                )} onClick={() => setView('hits')}>\r\n                    Hits\r\n                </div>\r\n                <div className={cx(\r\n                    'ViewToggleItem',\r\n                    {\r\n                        'ViewToggleItem--Selected': view === 'time',\r\n                    }\r\n                )} onClick={() => setView('time')}>\r\n                    Time\r\n                </div>\r\n                <div className={cx(\r\n                    'ViewToggleItem',\r\n                    {\r\n                        'ViewToggleItem--Selected': view === 'none',\r\n                    }\r\n                )} onClick={() => setView('none')}>\r\n                    None\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ViewToggle;\r\n","import React from 'react';\r\nimport { useParams } from \"react-router\";\r\nimport cx from 'classnames';\r\nimport './Gradient.scss';\r\n\r\nconst Gradient = ({ fileList, view }) => {\r\n    let { fileName } = useParams();\r\n    fileName = atob(fileName);\r\n    const file = fileList.find((file) => file.name === fileName);\r\n\r\n    const maxHits = file.lines.slice().sort((line1, line2) => line2.hits - line1.hits)[0].hits;\r\n    const maxTime = file.lines.slice().sort((line1, line2) => line2.time - line1.time)[0].time;\r\n\r\n    let maxCount = 0;\r\n    if (view === \"hits\") maxCount = maxHits;\r\n    if (view === \"time\") maxCount = maxTime;\r\n\r\n    if (view === \"none\") return null;\r\n    return (\r\n        <div className=\"GradientContainer\">\r\n            <div className={cx(\r\n                \"GradientColour\",\r\n                {\r\n                    \"GradientColour--blue\": view === 'hits',\r\n                    \"GradientColour--red\": view === 'time',\r\n                }\r\n            )}/>\r\n            <div className=\"GradientTextContainer\">\r\n                <div className=\"GradientTextItem\">0</div>\r\n                <div className=\"GradientTextItem\">{maxCount}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Gradient;\r\n","import React, { useState } from 'react';\r\nimport FileListProvider from './FileListProvider.jsx';\r\nimport FileViewer from '../components/FileViewer/FileViewer.jsx';\r\nimport ViewToggle from '../components/ViewToggle/ViewToggle.jsx';\r\nimport Gradient from '../components/Gradient/Gradient.jsx';\r\nimport Spinner from '../components/Spinner/Spinner.jsx';\r\n\r\nconst FileViewerContainer = () => {\r\n    const [view, setView] = useState('hits');\r\n\r\n    return (\r\n        <div>\r\n            <FileListProvider\r\n                Child={({fileList, isLoaded}) => !isLoaded ? <Spinner/> :\r\n                    <>\r\n                        <ViewToggle fileList={fileList} setView={setView} view={view} />\r\n                        <Gradient fileList={fileList} view={view} />\r\n                        <FileViewer fileList={fileList} view={view} />\r\n                    </>\r\n                }\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FileViewerContainer;\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport FileList from \"./containers/HomeContainer\";\r\nimport FileViewer from './containers/FileViewerContainer';\r\n\r\nconst Routes = () => (\r\n  <Switch>\r\n    <Route path=\"/\" exact component={FileList} />\r\n    <Route path={\"/file/:fileName\"} component={FileViewer} />\r\n    <Redirect to=\"/\" />\r\n  </Switch>\r\n);\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport Header from \"./components/Header/Header\";\r\nimport Footer from \"./components/Footer/Footer\";\r\nimport Routes from \"./routes\";\r\nimport \"./App.css\";\r\n\r\nconst App = () => (\r\n  <>\r\n    <Header />\r\n    <Routes />\r\n    <Footer />\r\n  </>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport path from 'path';\r\nimport {\r\n    HashRouter as Router,\r\n} from \"react-router-dom\";\r\nimport dotenv from 'dotenv';\r\n\r\ndotenv.config({ path: path.resolve(__dirname, '../.env') });\r\n\r\nReactDOM.render(\r\n    <Router>\r\n        <App />\r\n    </Router>\r\n, document.getElementById('root'));\r\n"],"sourceRoot":""}