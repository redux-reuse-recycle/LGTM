{"version":3,"sources":["components/Emoji/Heart.jsx","components/Header/Header.jsx","components/Footer/Footer.jsx","components/Home/Home.jsx","utils/FetchData.js","containers/FileListProvider.jsx","utils/MapData.js","components/FileList/FileList.jsx","components/Spinner/Spinner.jsx","containers/FileListContainer.jsx","containers/HomeContainer.jsx","components/CodeViewer/CodeViewer.jsx","components/FileViewer/FileViewer.jsx","components/ViewToggle/ViewToggle.jsx","components/Gradient/Gradient.jsx","containers/FileViewerContainer.jsx","routes.jsx","App.jsx","index.jsx"],"names":["Heart","role","aria-label","Header","className","to","Footer","Home","children","fetchData","a","Data","FileListProvider","Child","React","useState","isLoaded","setIsLoaded","fileList","setFileList","useEffect","then","data","Object","entries","map","key","value","file_total_time","file_total_time_percent","lines","name","totalTime","totalTimePercent","hits","time","percent","lineNumber","timePerHit","time_per_hit","lineText","line","mapDataToFiles","FileList","files","file","btoa","Spinner","FileListContainer","HomeContainer","CodeViewer","view","codeString","join","linesSortedByHits","slice","sort","line1","line2","linesSortedByTime","maxHits","maxTime","calculateShadeValue","StyledSyntaxHighlighter","styled","SyntaxHighlighter","styles","i","length","shadeValue","Math","max","language","showLineNumbers","wrapLines","FileViewer","fileName","useParams","atob","find","ViewToggle","setView","cx","onClick","Gradient","maxCount","FileViewerContainer","Routes","path","exact","component","App","dotenv","config","resolve","__dirname","ReactDOM","render","document","getElementById"],"mappings":"+u5iBAQeA,EAND,kBACZ,0BAAMC,KAAK,MAAMC,aAAW,eAA5B,iBCWaC,G,MATA,kBACb,yBAAKC,UAAU,mBACX,kBAAC,IAAD,CAAMC,GAAG,KAAI,yBAAKD,UAAU,eAAf,yBACb,yBAAKA,UAAU,kBAAf,aACY,kBAAC,EAAD,UCEHE,G,MARA,kBACb,yBAAKF,UAAU,mBACb,yBAAKA,UAAU,cAAf,wB,OCWWG,G,MAZF,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACd,OACE,yBAAKJ,UAAU,iBACb,6BAAMI,M,wCCLNC,EAAS,uCAAG,sBAAAC,EAAA,+EAETC,GAFS,2CAAH,qD,QCiBAC,EAdU,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAAY,EACNC,IAAMC,UAAS,GADT,mBAC/BC,EAD+B,KACrBC,EADqB,OAENH,IAAMC,SAAS,IAFT,mBAE/BG,EAF+B,KAErBC,EAFqB,KAWtC,OAPAL,IAAMM,WAAU,WACdX,IACGY,MAAK,SAAAC,GAAI,OCOO,SAAAA,GACrB,OAAOC,OAAOC,QAAQF,GAAMG,KAAI,YAAmB,IAf9BD,EAe6B,mBAAhBE,EAAgB,KAAXC,EAAW,KACxCC,EAAuDD,EAAvDC,gBAAiBC,EAAsCF,EAAtCE,wBAA4BC,EADL,YACeH,EADf,+CAEhD,MAAO,CACLI,KAAML,EACNM,UAAWJ,EACXK,iBAAkBJ,EAClBC,OArBiBN,EAqBKD,OAAOC,QAAQM,GApBzCN,EAAQC,KAAI,YAAmB,IAAD,mBAAhBC,EAAgB,KAAXC,EAAW,KACpBO,EAAwBP,EAAxBO,KAAMC,EAAkBR,EAAlBQ,KAAMC,EAAYT,EAAZS,QACpB,MAAO,CACLC,WAAYX,EACZQ,OACAC,OACAG,WAAYX,EAAMY,aAClBH,UACAI,SAAUb,EAAMc,cDFFC,CAAepB,MAC5BD,MAAK,SAAAC,GAAI,OAAIH,EAAYG,MACzBD,MAAK,kBAAMJ,GAAY,QACzB,IAEI,kBAACJ,EAAD,CAAOG,SAAUA,EAAUE,SAAUA,KEW/ByB,G,MArBE,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACf,yBAAKxC,UAAU,qBACX,yBAAKA,UAAU,iBAAf,iBACF,yBAAKA,UAAU,YACZwC,EAAMnB,KAAI,SAAAoB,GAAI,OACX,kBAAC,IAAD,CAAMxC,GAAE,gBAAWyC,KAAKD,EAAKd,QAC1B,yBAAK3B,UAAU,eAAesB,IAAKmB,EAAKd,MAAxC,IAAgDc,EAAKd,KAArD,aCNEgB,G,MAFC,kBAAM,yBAAK3C,UAAU,WAAf,kBCSP4C,EARW,kBACxB,kBAAC,EAAD,CACEnC,MAAO,gBAAGG,EAAH,EAAGA,SAAUE,EAAb,EAAaA,SAAb,OACJF,EAAyB,kBAAC,EAAD,CAAU4B,MAAO1B,IAA/B,kBAAC,EAAD,UCEH+B,EANO,kBACpB,kBAAC,EAAD,KACE,kBAAC,EAAD,Q,kKCDJ,IA8DeC,EA9DI,SAAC,GAAoB,IAAlBL,EAAiB,EAAjBA,KAAMM,EAAW,EAAXA,KACxB,IAAKN,EAAM,OAAO,KAClB,IAAMO,EAAaP,EAAKf,MAAML,KAAI,SAAAgB,GAAI,OAAIA,EAAKD,YAAUa,KAAK,MAExDC,EAAoBT,EAAKf,MAAMyB,QAAQC,MAAK,SAACC,EAAOC,GAAR,OAAkBA,EAAMxB,KAAOuB,EAAMvB,QACjFyB,EAAoBd,EAAKf,MAAMyB,QAAQC,MAAK,SAACC,EAAOC,GAAR,OAAkBA,EAAMvB,KAAOsB,EAAMtB,QAEjFyB,EAAWN,GAAqBA,EAAkB,IAAMA,EAAkB,GAAGpB,MAAS,EACtF2B,EAAWF,GAAqBA,EAAkB,IAAMA,EAAkB,GAAGxB,MAAS,EAEtF2B,EAAsB,SAACzB,GACzB,GAAa,SAATc,EAAiB,CACjB,IAAMjB,EAAQW,EAAKf,OAASe,EAAKf,MAAMO,EAAa,IAAMQ,EAAKf,MAAMO,EAAa,GAAGH,MAAS,EAC9F,OAAa,IAATA,EAAmB,EAChBA,EAAO0B,EACX,GAAa,SAATT,EAAiB,CACxB,IAAMhB,EAAQU,EAAKf,OAASe,EAAKf,MAAMO,EAAa,IAAMQ,EAAKf,MAAMO,EAAa,GAAGF,MAAS,EAC9F,OAAa,IAATA,EAAmB,EAChBA,EAAO0B,EAEd,OAAO,GAITE,EAA0BC,YAAOC,IAAPD,CAAH,IAEpB,WAED,IADA,IAAIE,EAAS,GACJC,EAAI,EAAGA,GAAKtB,EAAKf,MAAMsC,OAAQD,IAAK,CACzC,IAAME,EAAaP,EAAoBK,GACvCD,GAAM,iDACiBC,EADjB,0DAE+B,SAAThB,EAAA,wBACPkB,EAAaC,KAAKC,IAAIF,EAAW,IAAK,KAAQ,EADvC,wBAEO,KAAlB,EAAIA,GAFO,eAEiBA,EAAa,GAAM,GAAMA,EAF1C,KAFtB,gTAcV,OAAOH,EAlBN,IAuBT,OACI,yBAAK9D,UAAU,uBACX,kBAAC2D,EAAD,CACIS,SAAS,SACTC,iBAAe,EACfC,WAAS,GAERtB,KC9CFuB,G,OATI,SAAC,GAAkC,IAAhCzD,EAA+B,EAA/BA,SAAUF,EAAqB,EAArBA,SAAUmC,EAAW,EAAXA,KAChCyB,EAAaC,cAAbD,SACNA,EAAWE,KAAKF,GAChB,IAAM/B,EAAO3B,EAAS6D,MAAK,SAAClC,GAAD,OAAUA,EAAKd,OAAS6C,KAEnD,OAAMA,GAAa/B,IAAS7B,EACrB,kBAAC,EAAD,CAAY6B,KAAMA,EAAMM,KAAMA,IADQ,kBAAC,IAAD,CAAU9C,GAAG,Q,iBCwC/C2E,G,OA7CI,SAAC,GAAiC,IAA/B7B,EAA8B,EAA9BA,KAAM8B,EAAwB,EAAxBA,QAAS/D,EAAe,EAAfA,SAC3B0D,EAAaC,cAAbD,SACNA,EAAWE,KAAKF,GAChB,IAAM/B,EAAO3B,EAAS6D,MAAK,SAAClC,GAAD,OAAUA,EAAKd,OAAS6C,KAEnD,OACI,oCACI,yBAAKxE,UAAU,iBACX,6BACKyC,GAAQA,EAAKd,MAElB,kBAAC,IAAD,CAAM1B,GAAG,KACL,yBAAKD,UAAU,gBAAf,oBAGR,yBAAKA,UAAU,uBACX,yBAAKA,UAAW8E,IACZ,iBACA,CACI,2BAAqC,SAAT/B,IAEjCgC,QAAS,kBAAMF,EAAQ,UAL1B,QAQA,yBAAK7E,UAAW8E,IACZ,iBACA,CACI,2BAAqC,SAAT/B,IAEjCgC,QAAS,kBAAMF,EAAQ,UAL1B,QAQA,yBAAK7E,UAAW8E,IACZ,iBACA,CACI,2BAAqC,SAAT/B,IAEjCgC,QAAS,kBAAMF,EAAQ,UAL1B,YCHDG,G,OA9BE,SAAC,GAAwB,IAAtBlE,EAAqB,EAArBA,SAAUiC,EAAW,EAAXA,KACpByB,EAAaC,cAAbD,SACNA,EAAWE,KAAKF,GAChB,IAAM/B,EAAO3B,EAAS6D,MAAK,SAAClC,GAAD,OAAUA,EAAKd,OAAS6C,KAE7ChB,EAAUf,EAAKf,MAAMyB,QAAQC,MAAK,SAACC,EAAOC,GAAR,OAAkBA,EAAMxB,KAAOuB,EAAMvB,QAAM,GAAGA,KAChF2B,EAAUhB,EAAKf,MAAMyB,QAAQC,MAAK,SAACC,EAAOC,GAAR,OAAkBA,EAAMvB,KAAOsB,EAAMtB,QAAM,GAAGA,KAElFkD,EAAW,EAIf,MAHa,SAATlC,IAAiBkC,EAAWzB,GACnB,SAATT,IAAiBkC,EAAWxB,GAEnB,SAATV,EAAwB,KAExB,yBAAK/C,UAAU,qBACX,yBAAKA,UAAW8E,IACZ,iBACA,CACI,uBAAiC,SAAT/B,EACxB,sBAAgC,SAATA,MAG/B,yBAAK/C,UAAU,yBACX,yBAAKA,UAAU,oBAAf,KACA,yBAAKA,UAAU,oBAAoBiF,OCJpCC,EAlBa,WAAO,IAAD,EACNvE,mBAAS,QADH,mBACvBoC,EADuB,KACjB8B,EADiB,KAG9B,OACI,6BACI,kBAAC,EAAD,CACIpE,MAAO,gBAAEK,EAAF,EAAEA,SAAF,SAAYF,SACf,oCACI,kBAAC,EAAD,CAAYE,SAAUA,EAAU+D,QAASA,EAAS9B,KAAMA,IACxD,kBAAC,EAAD,CAAUjC,SAAUA,EAAUiC,KAAMA,IACpC,kBAAC,EAAD,CAAYjC,SAAUA,EAAUiC,KAAMA,KAJD,kBAAC,EAAD,WCA9CoC,EARA,kBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAW/C,IACjC,kBAAC,IAAD,CAAO6C,KAAM,kBAAmBE,UAAWf,IAC3C,kBAAC,IAAD,CAAUtE,GAAG,Q,OCKFsF,IARH,kBACV,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,S,oECVJ,+GAUAC,EAAOC,OAAO,CAAEL,KAAMA,IAAKM,QAAQC,EAAW,aAE9CC,IAASC,OACL,kBAAC,IAAD,KACI,kBAAC,IAAD,OAENC,SAASC,eAAe,U","file":"static/js/main.ca46cadd.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Heart = () => (\n  <span role=\"img\" aria-label=\"Heart Emoji\">\n    ❤️\n  </span>\n);\n\nexport default Heart;\n","import React from \"react\";\nimport { Link } from 'react-router-dom';\nimport Heart from \"../Emoji/Heart\";\nimport \"./Header.scss\";\n\nconst Header = () => (\n  <div className=\"HeaderContainer\">\n      <Link to=\"/\"><div className=\"HeaderTitle\">LHTM Python Profiler</div></Link>\n      <div className=\"HeaderSubtitle\">\n        Made with <Heart />\n      </div>\n  </div>\n);\n\nexport default Header;\n","import React from \"react\";\nimport \"./Footer.scss\";\n\nconst Footer = () => (\n  <div className=\"FooterContainer\">\n    <div className=\"FooterText\">\n        Made for CPSC 410\n    </div>\n  </div>\n);\n\nexport default Footer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Home.scss\";\n\nconst Home = ({ children }) => {\n  return (\n    <div className=\"HomeContainer\">\n      <div>{children}</div>\n    </div>\n  );\n};\n\nHome.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default Home;\n","import { Data } from \"../../data\";\n\nconst fetchData = async () => {\n  // TODO: Refactor to stream this data rather than importing directly.\n  return Data;\n};\n\nexport { fetchData };\n","import React from \"react\";\nimport { fetchData } from \"../utils/FetchData\";\nimport { mapDataToFiles } from \"../utils/MapData\";\n\n// Retrieves the data dumped from the JSON asynchronously.\nconst FileListProvider = ({ Child }) => {\n  const [isLoaded, setIsLoaded] = React.useState(false);\n  const [fileList, setFileList] = React.useState([]);\n\n  React.useEffect(() => {\n    fetchData()\n      .then(data => mapDataToFiles(data))\n      .then(data => setFileList(data))\n      .then(() => setIsLoaded(true));\n  }, []);\n\n  return <Child isLoaded={isLoaded} fileList={fileList} />;\n};\n\nexport default FileListProvider;\n","// Provides a known unified schema for the front-end\n// So prop values can be decoupled from the BE output.\n\n// Maps the given data to line objects with a known schema.\nconst mapDataToLines = entries =>\n  entries.map(([key, value]) => {\n    const { hits, time, percent } = value;\n    return {\n      lineNumber: key,\n      hits,\n      time,\n      timePerHit: value.time_per_hit,\n      percent,\n      lineText: value.line\n    };\n  });\n\n// Maps the given data to file objects with a known schema.\nconst mapDataToFiles = data => {\n  return Object.entries(data).map(([key, value]) => {\n    const { file_total_time, file_total_time_percent, ...lines } = value;\n    return {\n      name: key,\n      totalTime: file_total_time,\n      totalTimePercent: file_total_time_percent,\n      lines: mapDataToLines(Object.entries(lines))\n    };\n  });\n};\n\nexport { mapDataToFiles, mapDataToLines };\n","import React from \"react\";\nimport { Link } from 'react-router-dom';\nimport PropTypes from \"prop-types\";\nimport './FileList.scss';\n\n// TODO: Make this beautiful!\nconst FileList = ({ files }) => (\n  <div className=\"FileListContainer\">\n      <div className=\"FileListTitle\">Project Files</div>\n    <div className=\"FileList\">\n      {files.map(file => (\n          <Link to={`/file/${btoa(file.name)}`}>\n             <div className=\"FileListItem\" key={file.name}> {file.name} </div>\n          </Link>\n      ))}\n    </div>\n  </div>\n);\n\nFileList.propTypes = {\n  files: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired\n    })\n  ).isRequired\n};\n\nexport default FileList;\n","import React from 'react';\nimport './Spinner.scss';\n\n// TODO: Make me beautiful!\nconst Spinner = () => <div className=\"Spinner\">🤓</div>;\n\nexport default Spinner;\n","import React from \"react\";\nimport FileListProvider from \"./FileListProvider\";\nimport FileList from \"../components/FileList/FileList\";\nimport Spinner from \"../components/Spinner/Spinner\";\n\nconst FileListContainer = () => (\n  <FileListProvider\n    Child={({ isLoaded, fileList }) =>\n      !isLoaded ? <Spinner /> : <FileList files={fileList} />\n    }\n  />\n);\n\nexport default FileListContainer;\n","import React from \"react\";\nimport Home from \"../components/Home/Home\";\nimport FileListContainer from \"./FileListContainer\";\n\nconst HomeContainer = () => (\n  <Home>\n    <FileListContainer />\n  </Home>\n);\n\nexport default HomeContainer;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport './CodeViewer.scss';\n\nconst CodeViewer = ({ file, view }) => {\n    if (!file) return null;\n    const codeString = file.lines.map(line => line.lineText).join('\\n');\n\n    const linesSortedByHits = file.lines.slice().sort((line1, line2) => line2.hits - line1.hits);\n    const linesSortedByTime = file.lines.slice().sort((line1, line2) => line2.time - line1.time);\n\n    const maxHits = (linesSortedByHits && linesSortedByHits[0] && linesSortedByHits[0].hits) || 0;\n    const maxTime = (linesSortedByTime && linesSortedByTime[0] && linesSortedByTime[0].time) || 0;\n\n    const calculateShadeValue = (lineNumber) => {\n        if (view === 'hits') {\n            const hits = (file.lines && file.lines[lineNumber - 1] && file.lines[lineNumber - 1].hits) || 0;\n            if (hits === 0) return 0;\n            return hits / maxHits;\n        } else if (view === 'time') {\n            const time = (file.lines && file.lines[lineNumber - 1] && file.lines[lineNumber - 1].time) || 0;\n            if (time === 0) return 0;\n            return time / maxTime;\n        } else {\n            return 0;\n        }\n    };\n\n    const StyledSyntaxHighlighter = styled(SyntaxHighlighter)`\n        code:nth-of-type(2) {\n          ${(() => {\n            let styles = '';\n            for (let i = 1; i <= file.lines.length; i++) {\n                const shadeValue = calculateShadeValue(i);\n                styles += `\n                    span:nth-of-type(${i}) {\n                        background-color: ${view === \"hits\" ?\n                    `rgba(0,0,180, ${shadeValue ? Math.max(shadeValue/2.5, 0.05) : 0})` :\n                    `rgba(255,${(1 - shadeValue) * 255},0, ${shadeValue > 0.5 ? 0.5 : shadeValue})`};\n                        display: block;\n                        text-shadow: none !important;\n                        span {\n                            display: initial;\n                            background-color: initial;\n                        }\n                    }\n                `;\n            }\n            return styles\n            })()}\n        }\n   `;\n\n    return (\n        <div className=\"CodeViewerContainer\">\n            <StyledSyntaxHighlighter\n                language=\"python\"\n                showLineNumbers\n                wrapLines\n            >\n                {codeString}\n            </StyledSyntaxHighlighter>\n        </div>\n    );\n};\n\nexport default CodeViewer;\n","import React from 'react';\nimport { useParams } from \"react-router\";\nimport { Redirect } from 'react-router-dom';\nimport CodeViewer from '../CodeViewer/CodeViewer.jsx';\nimport './FileViewer.scss';\n\nconst FileViewer = ({ fileList, isLoaded, view }) => {\n    let { fileName } = useParams();\n    fileName = atob(fileName);\n    const file = fileList.find((file) => file.name === fileName);\n\n    if ((!fileName || !file) && isLoaded) return <Redirect to=\"/\" />;\n    return <CodeViewer file={file} view={view} />;\n};\n\nexport default FileViewer;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useParams } from \"react-router\";\nimport cx from 'classnames';\nimport './ViewToggle.scss';\n\nconst ViewToggle = ({ view, setView, fileList }) => {\n    let { fileName } = useParams();\n    fileName = atob(fileName);\n    const file = fileList.find((file) => file.name === fileName);\n\n    return (\n        <>\n            <div className=\"ViewToggleTop\">\n                <div>\n                    {file && file.name}\n                </div>\n                <Link to=\"/\">\n                    <div className=\"ViewAllFiles\">View All Files</div>\n                </Link>\n            </div>\n            <div className=\"ViewToggleContainer\">\n                <div className={cx(\n                    'ViewToggleItem',\n                    {\n                        'ViewToggleItem--Selected': view === 'hits',\n                    }\n                )} onClick={() => setView('hits')}>\n                    Hits\n                </div>\n                <div className={cx(\n                    'ViewToggleItem',\n                    {\n                        'ViewToggleItem--Selected': view === 'time',\n                    }\n                )} onClick={() => setView('time')}>\n                    Time\n                </div>\n                <div className={cx(\n                    'ViewToggleItem',\n                    {\n                        'ViewToggleItem--Selected': view === 'none',\n                    }\n                )} onClick={() => setView('none')}>\n                    None\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default ViewToggle;\n","import React from 'react';\nimport { useParams } from \"react-router\";\nimport cx from 'classnames';\nimport './Gradient.scss';\n\nconst Gradient = ({ fileList, view }) => {\n    let { fileName } = useParams();\n    fileName = atob(fileName);\n    const file = fileList.find((file) => file.name === fileName);\n\n    const maxHits = file.lines.slice().sort((line1, line2) => line2.hits - line1.hits)[0].hits;\n    const maxTime = file.lines.slice().sort((line1, line2) => line2.time - line1.time)[0].time;\n\n    let maxCount = 0;\n    if (view === \"hits\") maxCount = maxHits;\n    if (view === \"time\") maxCount = maxTime;\n\n    if (view === \"none\") return null;\n    return (\n        <div className=\"GradientContainer\">\n            <div className={cx(\n                \"GradientColour\",\n                {\n                    \"GradientColour--blue\": view === 'hits',\n                    \"GradientColour--red\": view === 'time',\n                }\n            )}/>\n            <div className=\"GradientTextContainer\">\n                <div className=\"GradientTextItem\">0</div>\n                <div className=\"GradientTextItem\">{maxCount}</div>\n            </div>\n        </div>\n    );\n};\n\nexport default Gradient;\n","import React, { useState } from 'react';\nimport FileListProvider from './FileListProvider.jsx';\nimport FileViewer from '../components/FileViewer/FileViewer.jsx';\nimport ViewToggle from '../components/ViewToggle/ViewToggle.jsx';\nimport Gradient from '../components/Gradient/Gradient.jsx';\nimport Spinner from '../components/Spinner/Spinner.jsx';\n\nconst FileViewerContainer = () => {\n    const [view, setView] = useState('hits');\n\n    return (\n        <div>\n            <FileListProvider\n                Child={({fileList, isLoaded}) => !isLoaded ? <Spinner/> :\n                    <>\n                        <ViewToggle fileList={fileList} setView={setView} view={view} />\n                        <Gradient fileList={fileList} view={view} />\n                        <FileViewer fileList={fileList} view={view} />\n                    </>\n                }\n            />\n        </div>\n    );\n};\n\nexport default FileViewerContainer;\n","import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport FileList from \"./containers/HomeContainer\";\nimport FileViewer from './containers/FileViewerContainer';\n\nconst Routes = () => (\n  <Switch>\n    <Route path=\"/\" exact component={FileList} />\n    <Route path={\"/file/:fileName\"} component={FileViewer} />\n    <Redirect to=\"/\" />\n  </Switch>\n);\n\nexport default Routes;\n","import React from \"react\";\nimport Header from \"./components/Header/Header\";\nimport Footer from \"./components/Footer/Footer\";\nimport Routes from \"./routes\";\nimport \"./App.css\";\n\nconst App = () => (\n  <>\n    <Header />\n    <Routes />\n    <Footer />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport path from 'path';\nimport {\n    HashRouter as Router,\n} from \"react-router-dom\";\nimport dotenv from 'dotenv';\n\ndotenv.config({ path: path.resolve(__dirname, '../.env') });\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>\n, document.getElementById('root'));\n"],"sourceRoot":""}